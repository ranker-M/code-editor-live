{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport '../styles/register-page.css';\nimport axios from 'axios';\nimport { useMessageBox } from \"../contexts/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPasword] = useState('');\n  const [password2, setPasword2] = useState('');\n  const {\n    register,\n    signInWithGoogle\n  } = useAuth();\n  const errBox = document.getElementById(\"error-box\");\n  const button = document.getElementById(\"create-account\");\n  const {\n    setMessageBox\n  } = useMessageBox();\n  const navigate = useNavigate();\n  const {\n    state\n  } = useLocation();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    button.disabled = true;\n\n    if (password !== password2) {\n      errBox.innerHTML = \"Passwords different\";\n      errBox.style.display = \"block\";\n      button.disabled = false;\n      return;\n    }\n\n    register(email, password).then(res => {\n      // Error box handling\n      errBox.style.display = \"none\";\n      errBox.innerHTML = \"\"; // add new user to db\n\n      registerUserToDb(res.user.email);\n    }).catch(err => {\n      if (err.message.indexOf(\"already\") != -1) {\n        errBox.innerHTML = \"Email already in use\";\n      } else if (err.message.indexOf(\"least\") != -1) {\n        errBox.innerHTML = \"Password should be at least 6 characters\";\n      }\n\n      errBox.style.display = \"block\";\n      button.disabled = false;\n    });\n  };\n\n  function registerUserToDb(email) {\n    axios.get(\"/add-user/\" + email).then(res => {\n      setMessageBox(\"User successfully created\", \"lightgreen\");\n      navigate((state === null || state === void 0 ? void 0 : state.path) || \"/profile\");\n    }).catch(err => {\n      // console.log(err.response.data);\n      if (err.response.data.indexOf(\"duplicate key error\") != -1) {\n        setMessageBox(\"Login successful\", \"lightgreen\");\n      } else setMessageBox(err.response.data, \"red\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"register-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          name: \"email\",\n          id: \"email-input\",\n          autoComplete: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPasword(e.target.value),\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          autoComplete: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password2\",\n          children: \"Password Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password2,\n          onChange: e => setPasword2(e.target.value),\n          type: \"password\",\n          name: \"password\",\n          id: \"password2\",\n          autoComplete: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"error-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"click-btn-div\",\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/login\",\n            className: \"login click-btn\",\n            children: \"Do you already have an account?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"create-account\",\n          children: \"Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"line-between-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            signInWithGoogle().then(user => {\n              var _user$_tokenResponse;\n\n              // console.log(user);      \n              if ((_user$_tokenResponse = user._tokenResponse) !== null && _user$_tokenResponse !== void 0 && _user$_tokenResponse.isNewUser) {\n                registerUserToDb(user.user.email);\n              } else setMessageBox(\"Login successful\", \"lightgreen\");\n            }).catch(err => {\n              // console.log(err);\n              setMessageBox(err.message, \"red\");\n            });\n          },\n          id: \"google-register-btn\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RegisterPage, \"XfLoWSKnY87ktAZoGxzy3ZZuHIw=\", false, function () {\n  return [useAuth, useMessageBox, useNavigate, useLocation];\n});\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/pages/RegisterPage.js"],"names":["useState","NavLink","useLocation","useNavigate","useAuth","axios","useMessageBox","RegisterPage","email","setEmail","password","setPasword","password2","setPasword2","register","signInWithGoogle","errBox","document","getElementById","button","setMessageBox","navigate","state","handleSubmit","e","preventDefault","disabled","innerHTML","style","display","then","res","registerUserToDb","user","catch","err","message","indexOf","get","path","response","data","target","value","_tokenResponse","isNewUser"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport '../styles/register-page.css';\nimport axios from 'axios';\nimport { useMessageBox } from \"../contexts/MessageBox\";\n\n\nconst RegisterPage = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPasword] = useState('')\n    const [password2, setPasword2] = useState('')\n    const { register, signInWithGoogle } = useAuth();\n    const errBox = document.getElementById(\"error-box\");\n    const button = document.getElementById(\"create-account\");\n    const { setMessageBox } = useMessageBox();\n    const navigate = useNavigate();\n    const { state } = useLocation();\n\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        button.disabled = true;\n        if (password !== password2) {\n            errBox.innerHTML = \"Passwords different\";\n            errBox.style.display = \"block\";\n            button.disabled = false;\n            return;\n        }\n        register(email, password)\n            .then((res) => {\n                // Error box handling\n                errBox.style.display = \"none\";\n                errBox.innerHTML = \"\";\n\n                // add new user to db\n                registerUserToDb(res.user.email);\n            })\n            .catch((err) => {\n                if (err.message.indexOf(\"already\") != -1) {\n                    errBox.innerHTML = \"Email already in use\";\n                } else if (err.message.indexOf(\"least\") != -1) {\n                    errBox.innerHTML = \"Password should be at least 6 characters\";\n                }\n                errBox.style.display = \"block\";\n                button.disabled = false;\n            })\n    }\n\n    function registerUserToDb(email) {\n        axios.get(\"/add-user/\" + email).then(\n            res => {\n                setMessageBox(\"User successfully created\", \"lightgreen\");\n                navigate(state?.path || \"/profile\");\n            }).\n            catch(err => {\n                // console.log(err.response.data);\n                if (err.response.data.indexOf(\"duplicate key error\") != -1) {\n                    setMessageBox(\"Login successful\", \"lightgreen\");\n                } else setMessageBox(err.response.data, \"red\");\n            });\n    }\n\n    return (\n        <div id=\"register-main\">\n            <h1>Register</h1>\n            <div id=\"register-wrapper\" >\n                <form onSubmit={e => handleSubmit(e)}>\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        type=\"email\" name=\"email\" id=\"email-input\" autoComplete=\"email\" required />\n                    <label htmlFor=\"password\">Password </label>\n                    <input\n                        value={password}\n                        onChange={e => setPasword(e.target.value)}\n                        type=\"password\" name=\"password\" id=\"password\"\n                        autoComplete=\"password\"\n                        required />\n                    <label htmlFor=\"password2\">Password Again</label>\n                    <input\n                        value={password2}\n                        onChange={e => setPasword2(e.target.value)}\n                        type=\"password\" name=\"password\" id=\"password2\"\n                        autoComplete=\"password\"\n                        required />\n                    <div id=\"error-box\"></div>\n                    <div className=\"click-btn-div\">\n                        <NavLink to=\"/login\" className=\"login click-btn\">Do you already have an account?</NavLink>\n                    </div>\n                    <button type=\"submit\" id=\"create-account\">Create an account</button>\n                    <div id=\"line-between-login\"></div>\n                    <button\n                        onClick={() => {\n                            signInWithGoogle()\n                                .then(user => {\n                                    // console.log(user);      \n                                    if (user._tokenResponse?.isNewUser) {\n                                        registerUserToDb(user.user.email);\n                                    } else setMessageBox(\"Login successful\", \"lightgreen\");\n                                })\n                                .catch(err => {\n                                    // console.log(err);\n                                    setMessageBox(err.message, \"red\");\n                                });\n                        }}\n                        id=\"google-register-btn\">Sign in with Google</button>\n                </form>\n            </div >\n        </div>\n    );\n}\n\nexport default RegisterPage;"]},"metadata":{},"sourceType":"module"}