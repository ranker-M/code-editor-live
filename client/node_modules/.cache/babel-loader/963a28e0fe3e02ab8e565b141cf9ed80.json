{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\contexts\\\\AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useState } from \"react\";\nimport { auth } from '../utils/init-firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged, signOut, GoogleAuthProvider, signInWithPopup, sendPasswordResetEmail, confirmPasswordReset } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  register: () => Promise,\n  login: () => Promise,\n  logout: () => Promise,\n  signInWithGoogle: () => Promise,\n  forgotPassword: () => Promise,\n  resetPassword: () => Promise\n});\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function AuthContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState({\n    loading: true\n  });\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      if (user) setCurrentUser(user);else setCurrentUser(undefined);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  function register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function logout() {\n    localStorage.clear();\n    return signOut(auth);\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email, {\n      url: \"http://localhost:3000/login\"\n    });\n  }\n\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n  const value = {\n    currentUser,\n    register,\n    login,\n    logout,\n    signInWithGoogle,\n    forgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 12\n  }, this);\n}\n\n_s2(AuthContextProvider, \"ZeNXMUmYetMhX8MckPqDo2px4oI=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/contexts/AuthContext.js"],"names":["createContext","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","signOut","GoogleAuthProvider","signInWithPopup","sendPasswordResetEmail","confirmPasswordReset","AuthContext","currentUser","register","Promise","login","logout","signInWithGoogle","forgotPassword","resetPassword","useAuth","AuthContextProvider","children","setCurrentUser","loading","unsubscribe","user","undefined","email","password","localStorage","clear","provider","url","oobCode","newPassword","value"],"mappings":";;;;AAAA,SACIA,aADJ,EACmBC,UADnB,EAEIC,SAFJ,EAEeC,QAFf,QAGO,OAHP;AAIA,SAASC,IAAT,QAAqB,wBAArB;AACA,SACIC,8BADJ,EAEIC,0BAFJ,EAGIC,kBAHJ,EAIIC,OAJJ,EAKIC,kBALJ,EAMIC,eANJ,EAOIC,sBAPJ,EAQIC,oBARJ,QASO,eATP;;AAWA,MAAMC,WAAW,gBAAGb,aAAa,CAAC;AAC9Bc,EAAAA,WAAW,EAAE,IADiB;AAE9BC,EAAAA,QAAQ,EAAE,MAAMC,OAFc;AAG9BC,EAAAA,KAAK,EAAE,MAAMD,OAHiB;AAI9BE,EAAAA,MAAM,EAAE,MAAMF,OAJgB;AAK9BG,EAAAA,gBAAgB,EAAE,MAAMH,OALM;AAM9BI,EAAAA,cAAc,EAAE,MAAMJ,OANQ;AAO9BK,EAAAA,aAAa,EAAE,MAAML;AAPS,CAAD,CAAjC;AAUA,OAAO,MAAMM,OAAO,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACY,WAAD,CAAhB;AAAA,CAAhB;;GAAMS,O;;AAEb,eAAe,SAASC,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACtD,QAAM,CAACV,WAAD,EAAcW,cAAd,IAAgCtB,QAAQ,CAAC;AAAEuB,IAAAA,OAAO,EAAE;AAAX,GAAD,CAA9C;AAGAxB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyB,WAAW,GAAGpB,kBAAkB,CAACH,IAAD,EAAOwB,IAAI,IAAI;AACjD,UAAIA,IAAJ,EAAUH,cAAc,CAACG,IAAD,CAAd,CAAV,KACKH,cAAc,CAACI,SAAD,CAAd;AACR,KAHqC,CAAtC;AAIA,WAAO,MAAM;AACTF,MAAAA,WAAW;AACd,KAFD;AAGH,GARQ,EAQN,EARM,CAAT;;AAWA,WAASZ,QAAT,CAAkBe,KAAlB,EAAyBC,QAAzB,EAAmC;AAC/B,WAAO1B,8BAA8B,CAACD,IAAD,EAAO0B,KAAP,EAAcC,QAAd,CAArC;AACH;;AAED,WAASd,KAAT,CAAea,KAAf,EAAsBC,QAAtB,EAAgC;AAC5B,WAAOzB,0BAA0B,CAACF,IAAD,EAAO0B,KAAP,EAAcC,QAAd,CAAjC;AACH;;AAED,WAASb,MAAT,GAAkB;AACdc,IAAAA,YAAY,CAACC,KAAb;AACA,WAAOzB,OAAO,CAACJ,IAAD,CAAd;AACH;;AAED,WAASe,gBAAT,GAA4B;AACxB,UAAMe,QAAQ,GAAG,IAAIzB,kBAAJ,EAAjB;AACA,WAAOC,eAAe,CAACN,IAAD,EAAO8B,QAAP,CAAtB;AACH;;AAED,WAASd,cAAT,CAAwBU,KAAxB,EAA+B;AAC3B,WAAOnB,sBAAsB,CAACP,IAAD,EAAO0B,KAAP,EAAc;AAAEK,MAAAA,GAAG,EAAE;AAAP,KAAd,CAA7B;AACH;;AAED,WAASd,aAAT,CAAuBe,OAAvB,EAAgCC,WAAhC,EAA6C;AACzC,WAAOzB,oBAAoB,CAACR,IAAD,EAAOgC,OAAP,EAAgBC,WAAhB,CAA3B;AACH;;AAED,QAAMC,KAAK,GAAG;AACVxB,IAAAA,WADU;AAEVC,IAAAA,QAFU;AAGVE,IAAAA,KAHU;AAIVC,IAAAA,MAJU;AAKVC,IAAAA,gBALU;AAMVC,IAAAA,cANU;AAOVC,IAAAA;AAPU,GAAd;AAUA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEiB,KAA7B;AAAA,cACFd;AADE;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH;;IAvDuBD,mB;;KAAAA,mB","sourcesContent":["import {\r\n    createContext, useContext,\r\n    useEffect, useState\r\n} from \"react\";\r\nimport { auth } from '../utils/init-firebase'\r\nimport {\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    onAuthStateChanged,\r\n    signOut,\r\n    GoogleAuthProvider,\r\n    signInWithPopup,\r\n    sendPasswordResetEmail,\r\n    confirmPasswordReset\r\n} from \"firebase/auth\"\r\n\r\nconst AuthContext = createContext({\r\n    currentUser: null,\r\n    register: () => Promise,\r\n    login: () => Promise,\r\n    logout: () => Promise,\r\n    signInWithGoogle: () => Promise,\r\n    forgotPassword: () => Promise,\r\n    resetPassword: () => Promise\r\n})\r\n\r\nexport const useAuth = () => useContext(AuthContext)\r\n\r\nexport default function AuthContextProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState({ loading: true });\r\n\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, user => {\r\n            if (user) setCurrentUser(user);\r\n            else setCurrentUser(undefined);\r\n        })\r\n        return () => {\r\n            unsubscribe()\r\n        }\r\n    }, [])\r\n\r\n\r\n    function register(email, password) {\r\n        return createUserWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    function login(email, password) {\r\n        return signInWithEmailAndPassword(auth, email, password);\r\n    }\r\n\r\n    function logout() {\r\n        localStorage.clear();\r\n        return signOut(auth);\r\n    }\r\n\r\n    function signInWithGoogle() {\r\n        const provider = new GoogleAuthProvider();\r\n        return signInWithPopup(auth, provider);\r\n    }\r\n\r\n    function forgotPassword(email) {\r\n        return sendPasswordResetEmail(auth, email, { url: \"http://localhost:3000/login\" });\r\n    }\r\n\r\n    function resetPassword(oobCode, newPassword) {\r\n        return confirmPasswordReset(auth, oobCode, newPassword);\r\n    }\r\n\r\n    const value = {\r\n        currentUser,\r\n        register,\r\n        login,\r\n        logout,\r\n        signInWithGoogle,\r\n        forgotPassword,\r\n        resetPassword\r\n    }\r\n\r\n    return <AuthContext.Provider value={value}>\r\n        {children}\r\n    </AuthContext.Provider>\r\n\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}