{"ast":null,"code":"import { Decoration, EditorView, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField, Facet } from '@codemirror/state';\nimport { hoverTooltip, showTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet } from '@codemirror/rangeset';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n  constructor(from, to, diagnostic) {\n    this.from = from;\n    this.to = to;\n    this.diagnostic = diagnostic;\n  }\n\n}\n\nclass LintState {\n  constructor(diagnostics, panel, selected) {\n    this.diagnostics = diagnostics;\n    this.panel = panel;\n    this.selected = selected;\n  }\n\n  static init(diagnostics, panel, state) {\n    let ranges = Decoration.set(diagnostics.map(d => {\n      // For zero-length ranges or ranges covering only a line break, create a widget\n      return d.from == d.to || d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from ? Decoration.widget({\n        widget: new DiagnosticWidget(d),\n        diagnostic: d\n      }).range(d.from) : Decoration.mark({\n        attributes: {\n          class: \"cm-lintRange cm-lintRange-\" + d.severity\n        },\n        diagnostic: d\n      }).range(d.from, d.to);\n    }), true);\n    return new LintState(ranges, panel, findDiagnostic(ranges));\n  }\n\n}\n\nfunction findDiagnostic(diagnostics) {\n  let diagnostic = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n  let after = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  let found = null;\n  diagnostics.between(after, 1e9, (from, to, _ref) => {\n    let {\n      spec\n    } = _ref;\n    if (diagnostic && spec.diagnostic != diagnostic) return;\n    found = new SelectedDiagnostic(from, to, spec.diagnostic);\n    return false;\n  });\n  return found;\n}\n\nfunction maybeEnableLint(state, effects) {\n  return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([lintState, EditorView.decorations.compute([lintState], state => {\n    let {\n      selected,\n      panel\n    } = state.field(lintState);\n    return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([activeMark.range(selected.from, selected.to)]);\n  }), hoverTooltip(lintTooltip), baseTheme]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\n\n\nfunction setDiagnostics(state, diagnostics) {\n  return {\n    effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n  };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\n\n\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n  create() {\n    return new LintState(Decoration.none, null, null);\n  },\n\n  update(value, tr) {\n    if (tr.docChanged) {\n      let mapped = value.diagnostics.map(tr.changes),\n          selected = null;\n\n      if (value.selected) {\n        let selPos = tr.changes.mapPos(value.selected.from, 1);\n        selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n      }\n\n      value = new LintState(mapped, value.panel, selected);\n    }\n\n    for (let effect of tr.effects) {\n      if (effect.is(setDiagnosticsEffect)) {\n        value = LintState.init(effect.value, value.panel, tr.state);\n      } else if (effect.is(togglePanel)) {\n        value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n      } else if (effect.is(movePanelSelection)) {\n        value = new LintState(value.diagnostics, value.panel, effect.value);\n      }\n    }\n\n    return value;\n  },\n\n  provide: f => [showPanel.from(f, val => val.panel), EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\n\nfunction diagnosticCount(state) {\n  let lint = state.field(lintState, false);\n  return lint ? lint.diagnostics.size : 0;\n}\n\nconst activeMark = /*@__PURE__*/Decoration.mark({\n  class: \"cm-lintRange cm-lintRange-active\"\n});\n\nfunction lintTooltip(view, pos, side) {\n  let {\n    diagnostics\n  } = view.state.field(lintState);\n  let found = [],\n      stackStart = 2e8,\n      stackEnd = 0;\n  diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, _ref2) => {\n    let {\n      spec\n    } = _ref2;\n\n    if (pos >= from && pos <= to && (from == to || (pos > from || side > 0) && (pos < to || side < 0))) {\n      found.push(spec.diagnostic);\n      stackStart = Math.min(from, stackStart);\n      stackEnd = Math.max(to, stackEnd);\n    }\n  });\n  if (!found.length) return null;\n  return {\n    pos: stackStart,\n    end: stackEnd,\n    above: view.state.doc.lineAt(stackStart).to < stackEnd,\n\n    create() {\n      return {\n        dom: diagnosticsTooltip(view, found)\n      };\n    }\n\n  };\n}\n\nfunction diagnosticsTooltip(view, diagnostics) {\n  return elt(\"ul\", {\n    class: \"cm-tooltip-lint\"\n  }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\n\n\nconst openLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) view.dispatch({\n    effects: maybeEnableLint(view.state, [togglePanel.of(true)])\n  });\n  let panel = getPanel(view, LintPanel.open);\n  if (panel) panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n  return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\n\n\nconst closeLintPanel = view => {\n  let field = view.state.field(lintState, false);\n  if (!field || !field.panel) return false;\n  view.dispatch({\n    effects: togglePanel.of(false)\n  });\n  return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\n\n\nconst nextDiagnostic = view => {\n  let field = view.state.field(lintState, false);\n  if (!field) return false;\n  let sel = view.state.selection.main,\n      next = field.diagnostics.iter(sel.to + 1);\n\n  if (!next.value) {\n    next = field.diagnostics.iter(0);\n    if (!next.value || next.from == sel.from && next.to == sel.to) return false;\n  }\n\n  view.dispatch({\n    selection: {\n      anchor: next.from,\n      head: next.to\n    },\n    scrollIntoView: true\n  });\n  return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\n\n\nconst lintKeymap = [{\n  key: \"Mod-Shift-m\",\n  run: openLintPanel\n}, {\n  key: \"F8\",\n  run: nextDiagnostic\n}];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.timeout = -1;\n    this.set = true;\n    let {\n      delay\n    } = view.state.facet(lintSource);\n    this.lintTime = Date.now() + delay;\n    this.run = this.run.bind(this);\n    this.timeout = setTimeout(this.run, delay);\n  }\n\n  run() {\n    let now = Date.now();\n\n    if (now < this.lintTime - 10) {\n      setTimeout(this.run, this.lintTime - now);\n    } else {\n      this.set = false;\n      let {\n        state\n      } = this.view,\n          {\n        sources\n      } = state.facet(lintSource);\n      Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n        var _a, _b;\n\n        let all = annotations.reduce((a, b) => a.concat(b));\n        if (this.view.state.doc == state.doc && (all.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size))) this.view.dispatch(setDiagnostics(this.view.state, all));\n      }, error => {\n        logException(this.view.state, error);\n      });\n    }\n  }\n\n  update(update) {\n    let source = update.state.facet(lintSource);\n\n    if (update.docChanged || source != update.startState.facet(lintSource)) {\n      this.lintTime = Date.now() + source.delay;\n\n      if (!this.set) {\n        this.set = true;\n        this.timeout = setTimeout(this.run, source.delay);\n      }\n    }\n  }\n\n  force() {\n    if (this.set) {\n      this.lintTime = Date.now();\n      this.run();\n    }\n  }\n\n  destroy() {\n    clearTimeout(this.timeout);\n  }\n\n});\nconst lintSource = /*@__PURE__*/Facet.define({\n  combine(input) {\n    return {\n      sources: input.map(i => i.source),\n      delay: input.length ? Math.max(...input.map(i => i.delay)) : 750\n    };\n  },\n\n  enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\n\nfunction linter(source) {\n  let config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var _a;\n\n  return lintSource.of({\n    source,\n    delay: (_a = config.delay) !== null && _a !== void 0 ? _a : 750\n  });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\n\n\nfunction forceLinting(view) {\n  let plugin = view.plugin(lintPlugin);\n  if (plugin) plugin.force();\n}\n\nfunction assignKeys(actions) {\n  let assigned = [];\n  if (actions) actions: for (let {\n    name\n  } of actions) {\n    for (let i = 0; i < name.length; i++) {\n      let ch = name[i];\n\n      if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n        assigned.push(ch);\n        continue actions;\n      }\n    }\n\n    assigned.push(\"\");\n  }\n  return assigned;\n}\n\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n  var _a;\n\n  let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n  return elt(\"li\", {\n    class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity\n  }, elt(\"span\", {\n    class: \"cm-diagnosticText\"\n  }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n    let click = e => {\n      e.preventDefault();\n      let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n      if (found) action.apply(view, found.from, found.to);\n    };\n\n    let {\n      name\n    } = action,\n        keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n    let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex), elt(\"u\", name.slice(keyIndex, keyIndex + 1)), name.slice(keyIndex + 1)];\n    return elt(\"button\", {\n      type: \"button\",\n      class: \"cm-diagnosticAction\",\n      onclick: click,\n      onmousedown: click,\n      \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n    }, nameElt);\n  }), diagnostic.source && elt(\"div\", {\n    class: \"cm-diagnosticSource\"\n  }, diagnostic.source));\n}\n\nclass DiagnosticWidget extends WidgetType {\n  constructor(diagnostic) {\n    super();\n    this.diagnostic = diagnostic;\n  }\n\n  eq(other) {\n    return other.diagnostic == this.diagnostic;\n  }\n\n  toDOM() {\n    return elt(\"span\", {\n      class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity\n    });\n  }\n\n}\n\nclass PanelItem {\n  constructor(view, diagnostic) {\n    this.diagnostic = diagnostic;\n    this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n    this.dom = renderDiagnostic(view, diagnostic, true);\n    this.dom.id = this.id;\n    this.dom.setAttribute(\"role\", \"option\");\n  }\n\n}\n\nclass LintPanel {\n  constructor(view) {\n    this.view = view;\n    this.items = [];\n\n    let onkeydown = event => {\n      if (event.keyCode == 27) {\n        // Escape\n        closeLintPanel(this.view);\n        this.view.focus();\n      } else if (event.keyCode == 38 || event.keyCode == 33) {\n        // ArrowUp, PageUp\n        this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n      } else if (event.keyCode == 40 || event.keyCode == 34) {\n        // ArrowDown, PageDown\n        this.moveSelection((this.selectedIndex + 1) % this.items.length);\n      } else if (event.keyCode == 36) {\n        // Home\n        this.moveSelection(0);\n      } else if (event.keyCode == 35) {\n        // End\n        this.moveSelection(this.items.length - 1);\n      } else if (event.keyCode == 13) {\n        // Enter\n        this.view.focus();\n      } else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) {\n        // A-Z\n        let {\n          diagnostic\n        } = this.items[this.selectedIndex],\n            keys = assignKeys(diagnostic.actions);\n\n        for (let i = 0; i < keys.length; i++) if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n          let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n          if (found) diagnostic.actions[i].apply(view, found.from, found.to);\n        }\n      } else {\n        return;\n      }\n\n      event.preventDefault();\n    };\n\n    let onclick = event => {\n      for (let i = 0; i < this.items.length; i++) {\n        if (this.items[i].dom.contains(event.target)) this.moveSelection(i);\n      }\n    };\n\n    this.list = elt(\"ul\", {\n      tabIndex: 0,\n      role: \"listbox\",\n      \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n      onkeydown,\n      onclick\n    });\n    this.dom = elt(\"div\", {\n      class: \"cm-panel-lint\"\n    }, this.list, elt(\"button\", {\n      type: \"button\",\n      name: \"close\",\n      \"aria-label\": this.view.state.phrase(\"close\"),\n      onclick: () => closeLintPanel(this.view)\n    }, \"×\"));\n    this.update();\n  }\n\n  get selectedIndex() {\n    let selected = this.view.state.field(lintState).selected;\n    if (!selected) return -1;\n\n    for (let i = 0; i < this.items.length; i++) if (this.items[i].diagnostic == selected.diagnostic) return i;\n\n    return -1;\n  }\n\n  update() {\n    let {\n      diagnostics,\n      selected\n    } = this.view.state.field(lintState);\n    let i = 0,\n        needsSync = false,\n        newSelectedItem = null;\n    diagnostics.between(0, this.view.state.doc.length, (_start, _end, _ref3) => {\n      let {\n        spec\n      } = _ref3;\n      let found = -1,\n          item;\n\n      for (let j = i; j < this.items.length; j++) if (this.items[j].diagnostic == spec.diagnostic) {\n        found = j;\n        break;\n      }\n\n      if (found < 0) {\n        item = new PanelItem(this.view, spec.diagnostic);\n        this.items.splice(i, 0, item);\n        needsSync = true;\n      } else {\n        item = this.items[found];\n\n        if (found > i) {\n          this.items.splice(i, found - i);\n          needsSync = true;\n        }\n      }\n\n      if (selected && item.diagnostic == selected.diagnostic) {\n        if (!item.dom.hasAttribute(\"aria-selected\")) {\n          item.dom.setAttribute(\"aria-selected\", \"true\");\n          newSelectedItem = item;\n        }\n      } else if (item.dom.hasAttribute(\"aria-selected\")) {\n        item.dom.removeAttribute(\"aria-selected\");\n      }\n\n      i++;\n    });\n\n    while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n      needsSync = true;\n      this.items.pop();\n    }\n\n    if (this.items.length == 0) {\n      this.items.push(new PanelItem(this.view, {\n        from: -1,\n        to: -1,\n        severity: \"info\",\n        message: this.view.state.phrase(\"No diagnostics\")\n      }));\n      needsSync = true;\n    }\n\n    if (newSelectedItem) {\n      this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n      this.view.requestMeasure({\n        key: this,\n        read: () => ({\n          sel: newSelectedItem.dom.getBoundingClientRect(),\n          panel: this.list.getBoundingClientRect()\n        }),\n        write: _ref4 => {\n          let {\n            sel,\n            panel\n          } = _ref4;\n          if (sel.top < panel.top) this.list.scrollTop -= panel.top - sel.top;else if (sel.bottom > panel.bottom) this.list.scrollTop += sel.bottom - panel.bottom;\n        }\n      });\n    } else if (this.selectedIndex < 0) {\n      this.list.removeAttribute(\"aria-activedescendant\");\n    }\n\n    if (needsSync) this.sync();\n  }\n\n  sync() {\n    let domPos = this.list.firstChild;\n\n    function rm() {\n      let prev = domPos;\n      domPos = prev.nextSibling;\n      prev.remove();\n    }\n\n    for (let item of this.items) {\n      if (item.dom.parentNode == this.list) {\n        while (domPos != item.dom) rm();\n\n        domPos = item.dom.nextSibling;\n      } else {\n        this.list.insertBefore(item.dom, domPos);\n      }\n    }\n\n    while (domPos) rm();\n  }\n\n  moveSelection(selectedIndex) {\n    if (this.selectedIndex < 0) return;\n    let field = this.view.state.field(lintState);\n    let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n    if (!selection) return;\n    this.view.dispatch({\n      selection: {\n        anchor: selection.from,\n        head: selection.to\n      },\n      scrollIntoView: true,\n      effects: movePanelSelection.of(selection)\n    });\n  }\n\n  static open(view) {\n    return new LintPanel(view);\n  }\n\n}\n\nfunction svg(content) {\n  let attrs = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : `viewBox=\"0 0 40 40\"`;\n  return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\n\nfunction underline(color) {\n  return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-diagnostic\": {\n    padding: \"3px 6px 3px 8px\",\n    marginLeft: \"-1px\",\n    display: \"block\",\n    whiteSpace: \"pre-wrap\"\n  },\n  \".cm-diagnostic-error\": {\n    borderLeft: \"5px solid #d11\"\n  },\n  \".cm-diagnostic-warning\": {\n    borderLeft: \"5px solid orange\"\n  },\n  \".cm-diagnostic-info\": {\n    borderLeft: \"5px solid #999\"\n  },\n  \".cm-diagnosticAction\": {\n    font: \"inherit\",\n    border: \"none\",\n    padding: \"2px 4px\",\n    backgroundColor: \"#444\",\n    color: \"white\",\n    borderRadius: \"3px\",\n    marginLeft: \"8px\"\n  },\n  \".cm-diagnosticSource\": {\n    fontSize: \"70%\",\n    opacity: .7\n  },\n  \".cm-lintRange\": {\n    backgroundPosition: \"left bottom\",\n    backgroundRepeat: \"repeat-x\",\n    paddingBottom: \"0.7px\"\n  },\n  \".cm-lintRange-error\": {\n    backgroundImage: /*@__PURE__*/underline(\"#d11\")\n  },\n  \".cm-lintRange-warning\": {\n    backgroundImage: /*@__PURE__*/underline(\"orange\")\n  },\n  \".cm-lintRange-info\": {\n    backgroundImage: /*@__PURE__*/underline(\"#999\")\n  },\n  \".cm-lintRange-active\": {\n    backgroundColor: \"#ffdd9980\"\n  },\n  \".cm-tooltip-lint\": {\n    padding: 0,\n    margin: 0\n  },\n  \".cm-lintPoint\": {\n    position: \"relative\",\n    \"&:after\": {\n      content: '\"\"',\n      position: \"absolute\",\n      bottom: 0,\n      left: \"-2px\",\n      borderLeft: \"3px solid transparent\",\n      borderRight: \"3px solid transparent\",\n      borderBottom: \"4px solid #d11\"\n    }\n  },\n  \".cm-lintPoint-warning\": {\n    \"&:after\": {\n      borderBottomColor: \"orange\"\n    }\n  },\n  \".cm-lintPoint-info\": {\n    \"&:after\": {\n      borderBottomColor: \"#999\"\n    }\n  },\n  \".cm-panel.cm-panel-lint\": {\n    position: \"relative\",\n    \"& ul\": {\n      maxHeight: \"100px\",\n      overflowY: \"auto\",\n      \"& [aria-selected]\": {\n        backgroundColor: \"#ddd\",\n        \"& u\": {\n          textDecoration: \"underline\"\n        }\n      },\n      \"&:focus [aria-selected]\": {\n        background_fallback: \"#bdf\",\n        backgroundColor: \"Highlight\",\n        color_fallback: \"white\",\n        color: \"HighlightText\"\n      },\n      \"& u\": {\n        textDecoration: \"none\"\n      },\n      padding: 0,\n      margin: 0\n    },\n    \"& [name=close]\": {\n      position: \"absolute\",\n      top: \"0\",\n      right: \"2px\",\n      background: \"inherit\",\n      border: \"none\",\n      font: \"inherit\",\n      padding: 0,\n      margin: 0\n    }\n  }\n});\n\nclass LintGutterMarker extends GutterMarker {\n  constructor(diagnostics) {\n    super();\n    this.diagnostics = diagnostics;\n    this.severity = diagnostics.reduce((max, d) => {\n      let s = d.severity;\n      return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n    }, \"info\");\n  }\n\n  toDOM(view) {\n    let elt = document.createElement(\"div\");\n    elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n\n    elt.onmouseover = () => gutterMarkerMouseOver(view, elt, this.diagnostics);\n\n    return elt;\n  }\n\n}\n\nfunction trackHoverOn(view, marker) {\n  let mousemove = event => {\n    let rect = marker.getBoundingClientRect();\n    if (event.clientX > rect.left - 10\n    /* Margin */\n    && event.clientX < rect.right + 10\n    /* Margin */\n    && event.clientY > rect.top - 10\n    /* Margin */\n    && event.clientY < rect.bottom + 10\n    /* Margin */\n    ) return;\n\n    for (let target = event.target; target; target = target.parentNode) {\n      if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\")) return;\n    }\n\n    window.removeEventListener(\"mousemove\", mousemove);\n    if (view.state.field(lintGutterTooltip)) view.dispatch({\n      effects: setLintGutterTooltip.of(null)\n    });\n  };\n\n  window.addEventListener(\"mousemove\", mousemove);\n}\n\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n  function hovered() {\n    let line = view.visualLineAtHeight(marker.getBoundingClientRect().top + 5);\n    const linePos = view.coordsAtPos(line.from),\n          markerRect = marker.getBoundingClientRect();\n\n    if (linePos) {\n      view.dispatch({\n        effects: setLintGutterTooltip.of({\n          pos: line.from,\n          above: false,\n\n          create() {\n            return {\n              dom: diagnosticsTooltip(view, diagnostics),\n              offset: {\n                x: markerRect.left - linePos.left,\n                y: 0\n              }\n            };\n          }\n\n        })\n      });\n    }\n\n    marker.onmouseout = marker.onmousemove = null;\n    trackHoverOn(view, marker);\n  }\n\n  let hoverTimeout = setTimeout(hovered, 600\n  /* Time */\n  );\n\n  marker.onmouseout = () => {\n    clearTimeout(hoverTimeout);\n    marker.onmouseout = marker.onmousemove = null;\n  };\n\n  marker.onmousemove = () => {\n    clearTimeout(hoverTimeout);\n    hoverTimeout = setTimeout(hovered, 600\n    /* Time */\n    );\n  };\n}\n\nfunction markersForDiagnostics(doc, diagnostics) {\n  let byLine = Object.create(null);\n\n  for (let diagnostic of diagnostics) {\n    let line = doc.lineAt(diagnostic.from);\n    (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n  }\n\n  let markers = [];\n\n  for (let line in byLine) {\n    markers.push(new LintGutterMarker(byLine[line]).range(+line));\n  }\n\n  return RangeSet.of(markers, true);\n}\n\nconst lintGutterExtension = /*@__PURE__*/gutter({\n  class: \"cm-gutter-lint\",\n  markers: view => view.state.field(lintGutterMarkers)\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n  create() {\n    return RangeSet.empty;\n  },\n\n  update(markers, tr) {\n    markers = markers.map(tr.changes);\n\n    for (let effect of tr.effects) if (effect.is(setDiagnosticsEffect)) {\n      markers = markersForDiagnostics(tr.state.doc, effect.value);\n    }\n\n    return markers;\n  }\n\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n\n  update(tooltip, tr) {\n    if (tooltip && tr.docChanged) tooltip = Object.assign(Object.assign({}, tooltip), {\n      pos: tr.changes.mapPos(tooltip.pos)\n    });\n    return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n  },\n\n  provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-gutter-lint\": {\n    width: \"1.4em\",\n    \"& .cm-gutterElement\": {\n      padding: \"0 .2em\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"center\"\n    }\n  },\n  \".cm-lint-marker\": {\n    width: \"1em\",\n    height: \"1em\"\n  },\n  \".cm-lint-marker-info\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n  },\n  \".cm-lint-marker-warning\": {\n    content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`)\n  },\n  \".cm-lint-marker-error:before\": {\n    content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n  }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\n\nfunction lintGutter() {\n  return [lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/node_modules/@codemirror/lint/dist/index.js"],"names":["Decoration","EditorView","ViewPlugin","logException","WidgetType","StateEffect","StateField","Facet","hoverTooltip","showTooltip","showPanel","getPanel","gutter","GutterMarker","RangeSet","elt","SelectedDiagnostic","constructor","from","to","diagnostic","LintState","diagnostics","panel","selected","init","state","ranges","set","map","d","doc","lineAt","widget","DiagnosticWidget","range","mark","attributes","class","severity","findDiagnostic","after","found","between","spec","maybeEnableLint","effects","field","lintState","concat","appendConfig","of","decorations","compute","none","activeMark","lintTooltip","baseTheme","setDiagnostics","setDiagnosticsEffect","define","togglePanel","movePanelSelection","create","update","value","tr","docChanged","mapped","changes","selPos","mapPos","effect","is","LintPanel","open","provide","f","val","s","diagnosticCount","lint","size","view","pos","side","stackStart","stackEnd","push","Math","min","max","length","end","above","dom","diagnosticsTooltip","renderDiagnostic","openLintPanel","dispatch","querySelector","focus","closeLintPanel","nextDiagnostic","sel","selection","main","next","iter","anchor","head","scrollIntoView","lintKeymap","key","run","lintPlugin","fromClass","timeout","delay","facet","lintSource","lintTime","Date","now","bind","setTimeout","sources","Promise","all","source","resolve","then","annotations","_a","_b","reduce","a","b","error","startState","force","destroy","clearTimeout","combine","input","i","enables","linter","config","forceLinting","plugin","assignKeys","actions","assigned","name","ch","test","some","c","toLowerCase","inPanel","keys","message","action","click","e","preventDefault","apply","keyIndex","indexOf","nameElt","slice","type","onclick","onmousedown","eq","other","toDOM","PanelItem","id","floor","random","toString","setAttribute","items","onkeydown","event","keyCode","moveSelection","selectedIndex","toUpperCase","charCodeAt","contains","target","list","tabIndex","role","phrase","needsSync","newSelectedItem","_start","_end","item","j","splice","hasAttribute","removeAttribute","pop","requestMeasure","read","getBoundingClientRect","write","top","scrollTop","bottom","sync","domPos","firstChild","rm","prev","nextSibling","remove","parentNode","insertBefore","svg","content","attrs","encodeURIComponent","underline","color","padding","marginLeft","display","whiteSpace","borderLeft","font","border","backgroundColor","borderRadius","fontSize","opacity","backgroundPosition","backgroundRepeat","paddingBottom","backgroundImage","margin","position","left","borderRight","borderBottom","borderBottomColor","maxHeight","overflowY","textDecoration","background_fallback","color_fallback","right","background","LintGutterMarker","document","createElement","className","onmouseover","gutterMarkerMouseOver","trackHoverOn","marker","mousemove","rect","clientX","clientY","nodeType","classList","window","removeEventListener","lintGutterTooltip","setLintGutterTooltip","addEventListener","hovered","line","visualLineAtHeight","linePos","coordsAtPos","markerRect","offset","x","y","onmouseout","onmousemove","hoverTimeout","markersForDiagnostics","byLine","Object","markers","lintGutterExtension","lintGutterMarkers","empty","tooltip","assign","t","lintGutterTheme","width","flexDirection","justifyContent","height","lintGutter"],"mappings":"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","sourcesContent":["import { Decoration, EditorView, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField, Facet } from '@codemirror/state';\nimport { hoverTooltip, showTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet } from '@codemirror/rangeset';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        let ranges = Decoration.set(diagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintSource);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintSource);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                var _a, _b;\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc &&\n                    (all.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let source = update.state.facet(lintSource);\n        if (update.docChanged || source != update.startState.facet(lintSource)) {\n            this.lintTime = Date.now() + source.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, source.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintSource = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return { sources: input.map(i => i.source), delay: input.length ? Math.max(...input.map(i => i.delay)) : 750 };\n    },\n    enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    var _a;\n    return lintSource.of({ source, delay: (_a = config.delay) !== null && _a !== void 0 ? _a : 750 });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let click = (e) => {\n            e.preventDefault();\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        elt.onmouseover = () => gutterMarkerMouseOver(view, elt, this.diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&\n            event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.visualLineAtHeight(marker.getBoundingClientRect().top + 5);\n        const linePos = view.coordsAtPos(line.from), markerRect = marker.getBoundingClientRect();\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            offset: { x: markerRect.left - linePos.left, y: 0 }\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        for (let effect of tr.effects)\n            if (effect.is(setDiagnosticsEffect)) {\n                markers = markersForDiagnostics(tr.state.doc, effect.value);\n            }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \"0 .2em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\",\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error:before\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter() {\n    return [lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n"]},"metadata":{},"sourceType":"module"}