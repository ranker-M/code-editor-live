{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\pages\\\\LoginPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useMessageBox } from \"../contexts/MessageBox\";\nimport '../styles/register-page.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginPage = () => {\n  _s();\n\n  const [email, setEmail] = useState('');\n  const [password, setPasword] = useState('');\n  const {\n    login,\n    signInWithGoogle\n  } = useAuth();\n  const errBox = document.getElementById(\"error-box\");\n  const navigate = useNavigate();\n  const button = document.getElementById(\"create-account\");\n  const {\n    state\n  } = useLocation();\n  const {\n    setMessageBox\n  } = useMessageBox();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    button.disabled = true;\n    login(email, password).then(res => {\n      errBox.style.display = \"none\";\n      errBox.innerHTML = \"\"; // console.log(\"login:\", state);\n      // navigate(state?.path || \"/profile\");\n    }).catch(err => {\n      console.log(err.message);\n\n      if (err.message.indexOf(\"wrong-password\") != -1) {\n        errBox.innerHTML = \"Wrong password\";\n      } else if (err.message.indexOf(\"user-not-found\") != -1) {\n        errBox.innerHTML = \"User not found\";\n      } else errBox.innerHTML = err.message;\n\n      errBox.style.display = \"block\";\n      button.disabled = false;\n    });\n  };\n\n  function handleGoogleSignIn() {\n    signInWithGoogle().then(user => {\n      var _user$_tokenResponse;\n\n      // console.log(user);\n      if ((_user$_tokenResponse = user._tokenResponse) !== null && _user$_tokenResponse !== void 0 && _user$_tokenResponse.isNewUser) {\n        axios.get(\"/add-user/\" + user.user.email).then(res => {\n          setMessageBox(\"User successfully created\", \"lightgreen\");\n          navigate((state === null || state === void 0 ? void 0 : state.path) || \"/profile\");\n        }).catch(err => {\n          // console.log(err.response.data);\n          if (err.response.data.indexOf(\"duplicate key error\") != -1) {\n            setMessageBox(\"Login successful\", \"lightgreen\");\n          } else setMessageBox(err.response.data, \"red\");\n        });\n      } else setMessageBox(\"Login successful\", \"lightgreen\");\n    }).catch(err => {\n      // console.log(err);\n      setMessageBox(err.message, \"red\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"register-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          type: \"email\",\n          name: \"email\",\n          id: \"email-input\",\n          autoComplete: \"email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: password,\n          onChange: e => setPasword(e.target.value),\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          autoComplete: \"password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"error-box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"click-btn-div\",\n          children: [/*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/forgot-password\",\n            className: \"forgot-password click-btn\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/register\",\n            state: {\n              path: state === null || state === void 0 ? void 0 : state.path\n            },\n            className: \"register click-btn\",\n            children: \"Don't have an account? Create new\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"create-account\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"line-between-login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleGoogleSignIn,\n          id: \"google-register-btn\",\n          children: \"Sign in with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginPage, \"PFaWjrszXlKpBaG2QLWVbt6mvjk=\", false, function () {\n  return [useAuth, useNavigate, useLocation, useMessageBox];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/pages/LoginPage.js"],"names":["useState","NavLink","useLocation","useNavigate","useAuth","useMessageBox","axios","LoginPage","email","setEmail","password","setPasword","login","signInWithGoogle","errBox","document","getElementById","navigate","button","state","setMessageBox","handleSubmit","e","preventDefault","disabled","then","res","style","display","innerHTML","catch","err","console","log","message","indexOf","handleGoogleSignIn","user","_tokenResponse","isNewUser","get","path","response","data","target","value"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport { NavLink, useLocation, useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { useMessageBox } from \"../contexts/MessageBox\";\nimport '../styles/register-page.css'\nimport axios from 'axios';\n\nconst LoginPage = () => {\n    const [email, setEmail] = useState('')\n    const [password, setPasword] = useState('')\n    const { login, signInWithGoogle } = useAuth();\n    const errBox = document.getElementById(\"error-box\");\n    const navigate = useNavigate();\n    const button = document.getElementById(\"create-account\");\n    const { state } = useLocation();\n    const { setMessageBox } = useMessageBox();\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        button.disabled = true;\n        login(email, password)\n            .then((res) => {\n                errBox.style.display = \"none\";\n                errBox.innerHTML = \"\";\n                // console.log(\"login:\", state);\n                // navigate(state?.path || \"/profile\");\n            })\n            .catch((err) => {\n                console.log(err.message);\n                if (err.message.indexOf(\"wrong-password\") != -1) {\n                    errBox.innerHTML = \"Wrong password\";\n                } else if (err.message.indexOf(\"user-not-found\") != -1) {\n                    errBox.innerHTML = \"User not found\";\n                } else errBox.innerHTML = err.message;\n                errBox.style.display = \"block\";\n                button.disabled = false;\n            })\n    }\n\n    function handleGoogleSignIn() {\n        signInWithGoogle()\n            .then(user => {\n                // console.log(user);\n                if (user._tokenResponse?.isNewUser) {\n                    axios.get(\"/add-user/\" + user.user.email).then(\n                        res => {\n                            setMessageBox(\"User successfully created\", \"lightgreen\");\n                            navigate(state?.path || \"/profile\");\n                        }).\n                        catch(err => {\n                            // console.log(err.response.data);\n                            if (err.response.data.indexOf(\"duplicate key error\") != -1) {\n                                setMessageBox(\"Login successful\", \"lightgreen\");\n                            } else setMessageBox(err.response.data, \"red\");\n                        });\n                } else setMessageBox(\"Login successful\", \"lightgreen\");\n            })\n            .catch(err => {\n                // console.log(err);\n                setMessageBox(err.message, \"red\");\n            });\n    }\n\n    return (\n        <div id=\"register-main\">\n            <h1>Login</h1>\n            <div id=\"register-wrapper\" >\n                <form onSubmit={e => handleSubmit(e)}>\n                    <label htmlFor=\"email\">E-mail</label>\n                    <input\n                        value={email}\n                        onChange={e => setEmail(e.target.value)}\n                        type=\"email\" name=\"email\" id=\"email-input\" autoComplete=\"email\" required />\n                    <label htmlFor=\"password\">Password </label>\n                    <input\n                        value={password}\n                        onChange={e => setPasword(e.target.value)}\n                        type=\"password\" name=\"password\" id=\"password\"\n                        autoComplete=\"password\"\n                        required />\n                    <div id=\"error-box\"></div>\n                    <div className=\"click-btn-div\">\n                        <NavLink to=\"/forgot-password\" className=\"forgot-password click-btn\">Forgot password?</NavLink>\n                        <NavLink to=\"/register\" state={{ path: state?.path }} className=\"register click-btn\">Don't have an account? Create new</NavLink>\n                    </div>\n                    <button type=\"submit\" id=\"create-account\">Login</button>\n                    <div id=\"line-between-login\"></div>\n                    <button\n                        onClick={handleGoogleSignIn}\n                        id=\"google-register-btn\">Sign in with Google</button>\n                </form>\n            </div >\n        </div>\n    );\n}\n\n\nexport default LoginPage;"]},"metadata":{},"sourceType":"module"}