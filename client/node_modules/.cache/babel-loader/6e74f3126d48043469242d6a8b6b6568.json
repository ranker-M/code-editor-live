{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\components\\\\CreateProjectWindow.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useEffect, useState } from 'react';\nimport { optionList, exampleCode } from \"../components/CodeEditorImports\";\nimport { useMessageBox } from '../contexts/MessageBox';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateProjectWindow = props => {\n  _s();\n\n  const [language, setLanguage] = useState('cpp');\n  const [projectName, setProjectName] = useState(\"\");\n  const {\n    user,\n    showSelf\n  } = props;\n  const {\n    setMessageBox\n  } = useMessageBox();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (showSelf !== \"first\") {\n      let element = document.getElementById(\"project-window-wrapper\");\n      element.style.display = \"flex\";\n    }\n  }, [showSelf]);\n\n  function handleOuterClick(e) {\n    if (e.target.id == \"project-window-wrapper\") {\n      let element = document.getElementById(\"project-window-wrapper\");\n      element.style.display = \"none\";\n    }\n  }\n\n  function handleCreateProject() {\n    // Empty project title rejection\n    if (projectName == \"\") {\n      setMessageBox(\"Project title can't be empty\", \"red\");\n      return;\n    } // Project creation request\n\n\n    const data = {\n      username: user.email,\n      language: language,\n      projectName: projectName,\n      code: exampleCode[language]\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify(data),\n      url: \"/add-project\"\n    };\n    axios(options).then(result => {\n      // console.log(result);\n      setMessageBox(\"Project succesfully created\", \"lightgreen\");\n      navigate(\"/playground/\" + result.data._id, {\n        state: {\n          projectName: projectName,\n          language: language,\n          code: data.code\n        }\n      });\n    }).catch(err => {\n      // console.log(err.response)\n      setMessageBox(err.response.data, \"red\");\n    });\n  }\n\n  const selectLanguage = e => {\n    setLanguage(e.target.value);\n  };\n\n  const selectProjectName = e => {\n    setProjectName(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"project-window-wrapper\",\n    onClick: handleOuterClick,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"create-project-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Project Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"project-name\",\n        onChange: selectProjectName,\n        id: \"create-new-project-name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Lanuage:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        defaultValue: \"cpp\",\n        onChange: selectLanguage,\n        className: \"lang-select editor-options\",\n        children: Object.keys(optionList.languages).map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: el\n        }, el, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateProject,\n        children: \"Create Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateProjectWindow, \"d6Y462sPV7z322MgByIrBbCGyYo=\", false, function () {\n  return [useMessageBox, useNavigate];\n});\n\n_c = CreateProjectWindow;\nexport default CreateProjectWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateProjectWindow\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/components/CreateProjectWindow.js"],"names":["axios","qs","useEffect","useState","optionList","exampleCode","useMessageBox","useNavigate","CreateProjectWindow","props","language","setLanguage","projectName","setProjectName","user","showSelf","setMessageBox","navigate","element","document","getElementById","style","display","handleOuterClick","e","target","id","handleCreateProject","data","username","email","code","options","method","headers","stringify","url","then","result","_id","state","catch","err","response","selectLanguage","value","selectProjectName","Object","keys","languages","map","el"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport qs from 'qs';\r\nimport { useEffect, useState } from 'react';\r\nimport { optionList, exampleCode } from \"../components/CodeEditorImports\"\r\nimport { useMessageBox } from '../contexts/MessageBox';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst CreateProjectWindow = (props) => {\r\n    const [language, setLanguage] = useState('cpp');\r\n    const [projectName, setProjectName] = useState(\"\");\r\n    const { user, showSelf } = props;\r\n    const { setMessageBox } = useMessageBox();\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        if (showSelf !== \"first\") {\r\n            let element = document.getElementById(\"project-window-wrapper\");\r\n            element.style.display = \"flex\";\r\n        }\r\n    }, [showSelf]);\r\n\r\n    function handleOuterClick(e) {\r\n        if (e.target.id == \"project-window-wrapper\") {\r\n            let element = document.getElementById(\"project-window-wrapper\");\r\n            element.style.display = \"none\";\r\n        }\r\n    }\r\n\r\n    function handleCreateProject() {\r\n        // Empty project title rejection\r\n        if (projectName == \"\") {\r\n            setMessageBox(\"Project title can't be empty\", \"red\");\r\n            return;\r\n        }\r\n        // Project creation request\r\n        const data = { username: user.email, language: language, projectName: projectName, code: exampleCode[language] };\r\n        const options = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            data: qs.stringify(data),\r\n            url: \"/add-project\"\r\n        };\r\n        axios(options).then(\r\n            result => {\r\n                // console.log(result);\r\n                setMessageBox(\"Project succesfully created\", \"lightgreen\");\r\n                navigate(\"/playground/\" + result.data._id, {\r\n                    state: { projectName: projectName, language: language, code: data.code }\r\n                });\r\n            }).\r\n            catch(err => {\r\n                // console.log(err.response)\r\n                setMessageBox(err.response.data, \"red\");\r\n            });\r\n    }\r\n\r\n\r\n    const selectLanguage = (e) => {\r\n        setLanguage(e.target.value);\r\n    }\r\n\r\n    const selectProjectName = (e) => {\r\n        setProjectName(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div id=\"project-window-wrapper\" onClick={handleOuterClick}>\r\n            <div id=\"create-project-window\">\r\n                <label >Project Name:</label>\r\n                <input type=\"text\" name=\"project-name\" onChange={selectProjectName} id=\"create-new-project-name\" />\r\n                <label>Lanuage:</label>\r\n                <select defaultValue=\"cpp\" onChange={selectLanguage} className=\"lang-select editor-options\">\r\n                    {Object.keys(optionList.languages).map(el =>\r\n                        <option key={el}>{el}</option>\r\n                    )}\r\n                </select>\r\n                <button onClick={handleCreateProject}>Create Project</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProjectWindow;"]},"metadata":{},"sourceType":"module"}