{"ast":null,"code":"import { ViewPlugin, Direction, EditorView, logException } from '@codemirror/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/state';\nconst ios = typeof navigator != \"undefined\" && ! /*@__PURE__*/ /Edge\\/(\\d+)/.exec(navigator.userAgent) && /*@__PURE__*/ /Apple Computer/.test(navigator.vendor) && ( /*@__PURE__*/ /Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\nconst Outside = \"-10000px\";\n\nclass TooltipViewManager {\n  constructor(view, facet, createTooltipView) {\n    this.facet = facet;\n    this.createTooltipView = createTooltipView;\n    this.input = view.state.facet(facet);\n    this.tooltips = this.input.filter(t => t);\n    this.tooltipViews = this.tooltips.map(createTooltipView);\n  }\n\n  update(update) {\n    let input = update.state.facet(this.facet);\n    let tooltips = input.filter(x => x);\n\n    if (input === this.input) {\n      for (let t of this.tooltipViews) if (t.update) t.update(update);\n\n      return false;\n    }\n\n    let tooltipViews = [];\n\n    for (let i = 0; i < tooltips.length; i++) {\n      let tip = tooltips[i],\n          known = -1;\n      if (!tip) continue;\n\n      for (let i = 0; i < this.tooltips.length; i++) {\n        let other = this.tooltips[i];\n        if (other && other.create == tip.create) known = i;\n      }\n\n      if (known < 0) {\n        tooltipViews[i] = this.createTooltipView(tip);\n      } else {\n        let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n        if (tooltipView.update) tooltipView.update(update);\n      }\n    }\n\n    for (let t of this.tooltipViews) if (tooltipViews.indexOf(t) < 0) t.dom.remove();\n\n    this.input = input;\n    this.tooltips = tooltips;\n    this.tooltipViews = tooltipViews;\n    return true;\n  }\n\n}\n/**\nReturn an extension that configures tooltip behavior.\n*/\n\n\nfunction tooltips() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return tooltipConfig.of(config);\n}\n\nfunction windowSpace() {\n  return {\n    top: 0,\n    left: 0,\n    bottom: innerHeight,\n    right: innerWidth\n  };\n}\n\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n  combine: values => {\n    var _a, _b, _c;\n\n    return {\n      position: ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n      parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n      tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace\n    };\n  }\n});\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    var _a;\n\n    this.view = view;\n    this.inView = true;\n    this.lastTransaction = 0;\n    this.measureTimeout = -1;\n    let config = view.state.facet(tooltipConfig);\n    this.position = config.position;\n    this.parent = config.parent;\n    this.classes = view.themeClasses;\n    this.createContainer();\n    this.measureReq = {\n      read: this.readMeasure.bind(this),\n      write: this.writeMeasure.bind(this),\n      key: this\n    };\n    this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n    this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n      if (Date.now() > this.lastTransaction - 50 && entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1) this.measureSoon();\n    }, {\n      threshold: [1]\n    }) : null;\n    this.observeIntersection();\n    (_a = view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n    this.maybeMeasure();\n  }\n\n  createContainer() {\n    if (this.parent) {\n      this.container = document.createElement(\"div\");\n      this.container.style.position = \"relative\";\n      this.container.className = this.view.themeClasses;\n      this.parent.appendChild(this.container);\n    } else {\n      this.container = this.view.dom;\n    }\n  }\n\n  observeIntersection() {\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n\n      for (let tooltip of this.manager.tooltipViews) this.intersectionObserver.observe(tooltip.dom);\n    }\n  }\n\n  measureSoon() {\n    if (this.measureTimeout < 0) this.measureTimeout = setTimeout(() => {\n      this.measureTimeout = -1;\n      this.maybeMeasure();\n    }, 50);\n  }\n\n  update(update) {\n    if (update.transactions.length) this.lastTransaction = Date.now();\n    let updated = this.manager.update(update);\n    if (updated) this.observeIntersection();\n    let shouldMeasure = updated || update.geometryChanged;\n    let newConfig = update.state.facet(tooltipConfig);\n\n    if (newConfig.position != this.position) {\n      this.position = newConfig.position;\n\n      for (let t of this.manager.tooltipViews) t.dom.style.position = this.position;\n\n      shouldMeasure = true;\n    }\n\n    if (newConfig.parent != this.parent) {\n      if (this.parent) this.container.remove();\n      this.parent = newConfig.parent;\n      this.createContainer();\n\n      for (let t of this.manager.tooltipViews) this.container.appendChild(t.dom);\n\n      shouldMeasure = true;\n    } else if (this.parent && this.view.themeClasses != this.classes) {\n      this.classes = this.container.className = this.view.themeClasses;\n    }\n\n    if (shouldMeasure) this.maybeMeasure();\n  }\n\n  createTooltip(tooltip) {\n    let tooltipView = tooltip.create(this.view);\n    tooltipView.dom.classList.add(\"cm-tooltip\");\n\n    if (tooltip.arrow && !tooltipView.dom.querySelector(\"cm-tooltip > cm-tooltip-arrow\")) {\n      let arrow = document.createElement(\"div\");\n      arrow.className = \"cm-tooltip-arrow\";\n      tooltipView.dom.appendChild(arrow);\n    }\n\n    tooltipView.dom.style.position = this.position;\n    tooltipView.dom.style.top = Outside;\n    this.container.appendChild(tooltipView.dom);\n    if (tooltipView.mount) tooltipView.mount(this.view);\n    return tooltipView;\n  }\n\n  destroy() {\n    var _a, _b;\n\n    (_a = this.view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"resize\", this.measureSoon);\n\n    for (let {\n      dom\n    } of this.manager.tooltipViews) dom.remove();\n\n    (_b = this.intersectionObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n    clearTimeout(this.measureTimeout);\n  }\n\n  readMeasure() {\n    let editor = this.view.dom.getBoundingClientRect();\n    return {\n      editor,\n      parent: this.parent ? this.container.getBoundingClientRect() : editor,\n      pos: this.manager.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n      size: this.manager.tooltipViews.map(_ref => {\n        let {\n          dom\n        } = _ref;\n        return dom.getBoundingClientRect();\n      }),\n      space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view)\n    };\n  }\n\n  writeMeasure(measured) {\n    let {\n      editor,\n      space\n    } = measured;\n    let others = [];\n\n    for (let i = 0; i < this.manager.tooltips.length; i++) {\n      let tooltip = this.manager.tooltips[i],\n          tView = this.manager.tooltipViews[i],\n          {\n        dom\n      } = tView;\n      let pos = measured.pos[i],\n          size = measured.size[i]; // Hide tooltips that are outside of the editor.\n\n      if (!pos || pos.bottom <= Math.max(editor.top, space.top) || pos.top >= Math.min(editor.bottom, space.bottom) || pos.right <= Math.max(editor.left, space.left) || pos.left >= Math.min(editor.right, space.right)) {\n        dom.style.top = Outside;\n        continue;\n      }\n\n      let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n      let arrowHeight = arrow ? 7\n      /* Size */\n      : 0;\n      let width = size.right - size.left,\n          height = size.bottom - size.top;\n      let offset = tView.offset || noOffset,\n          ltr = this.view.textDirection == Direction.LTR;\n      let left = size.width > space.right - space.left ? ltr ? space.left : space.right - size.width : ltr ? Math.min(pos.left - (arrow ? 14\n      /* Offset */\n      : 0) + offset.x, space.right - width) : Math.max(space.left, pos.left - width + (arrow ? 14\n      /* Offset */\n      : 0) - offset.x);\n      let above = !!tooltip.above;\n      if (!tooltip.strictSide && (above ? pos.top - (size.bottom - size.top) - offset.y < space.top : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) && above == space.bottom - pos.bottom > pos.top - space.top) above = !above;\n      let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n      let right = left + width;\n      if (tView.overlap !== true) for (let r of others) if (r.left < right && r.right > left && r.top < top + height && r.bottom > top) top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n\n      if (this.position == \"absolute\") {\n        dom.style.top = top - measured.parent.top + \"px\";\n        dom.style.left = left - measured.parent.left + \"px\";\n      } else {\n        dom.style.top = top + \"px\";\n        dom.style.left = left + \"px\";\n      }\n\n      if (arrow) arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14\n      /* Offset */\n      - 7\n      /* Size */\n      )}px`;\n      if (tView.overlap !== true) others.push({\n        left,\n        top,\n        right,\n        bottom: top + height\n      });\n      dom.classList.toggle(\"cm-tooltip-above\", above);\n      dom.classList.toggle(\"cm-tooltip-below\", !above);\n      if (tView.positioned) tView.positioned();\n    }\n  }\n\n  maybeMeasure() {\n    if (this.manager.tooltips.length) {\n      if (this.view.inView) this.view.requestMeasure(this.measureReq);\n\n      if (this.inView != this.view.inView) {\n        this.inView = this.view.inView;\n        if (!this.inView) for (let tv of this.manager.tooltipViews) tv.dom.style.top = Outside;\n      }\n    }\n  }\n\n}, {\n  eventHandlers: {\n    scroll() {\n      this.maybeMeasure();\n    }\n\n  }\n});\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n  \".cm-tooltip\": {\n    zIndex: 100\n  },\n  \"&light .cm-tooltip\": {\n    border: \"1px solid #bbb\",\n    backgroundColor: \"#f5f5f5\"\n  },\n  \"&light .cm-tooltip-section:not(:first-child)\": {\n    borderTop: \"1px solid #bbb\"\n  },\n  \"&dark .cm-tooltip\": {\n    backgroundColor: \"#333338\",\n    color: \"white\"\n  },\n  \".cm-tooltip-arrow\": {\n    height: `${7\n    /* Size */\n    }px`,\n    width: `${7\n    /* Size */\n    * 2}px`,\n    position: \"absolute\",\n    zIndex: -1,\n    overflow: \"hidden\",\n    \"&:before, &:after\": {\n      content: \"''\",\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      borderLeft: `${7\n      /* Size */\n      }px solid transparent`,\n      borderRight: `${7\n      /* Size */\n      }px solid transparent`\n    },\n    \".cm-tooltip-above &\": {\n      bottom: `-${7\n      /* Size */\n      }px`,\n      \"&:before\": {\n        borderTop: `${7\n        /* Size */\n        }px solid #bbb`\n      },\n      \"&:after\": {\n        borderTop: `${7\n        /* Size */\n        }px solid #f5f5f5`,\n        bottom: \"1px\"\n      }\n    },\n    \".cm-tooltip-below &\": {\n      top: `-${7\n      /* Size */\n      }px`,\n      \"&:before\": {\n        borderBottom: `${7\n        /* Size */\n        }px solid #bbb`\n      },\n      \"&:after\": {\n        borderBottom: `${7\n        /* Size */\n        }px solid #f5f5f5`,\n        top: \"1px\"\n      }\n    }\n  },\n  \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n    \"&:before\": {\n      borderTopColor: \"#333338\",\n      borderBottomColor: \"#333338\"\n    },\n    \"&:after\": {\n      borderTopColor: \"transparent\",\n      borderBottomColor: \"transparent\"\n    }\n  }\n});\nconst noOffset = {\n  x: 0,\n  y: 0\n};\n/**\nBehavior by which an extension can provide a tooltip to be shown.\n*/\n\nconst showTooltip = /*@__PURE__*/Facet.define({\n  enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define();\n\nclass HoverTooltipHost {\n  constructor(view) {\n    this.view = view;\n    this.mounted = false;\n    this.dom = document.createElement(\"div\");\n    this.dom.classList.add(\"cm-tooltip-hover\");\n    this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));\n  } // Needs to be static so that host tooltip instances always match\n\n\n  static create(view) {\n    return new HoverTooltipHost(view);\n  }\n\n  createHostedView(tooltip) {\n    let hostedView = tooltip.create(this.view);\n    hostedView.dom.classList.add(\"cm-tooltip-section\");\n    this.dom.appendChild(hostedView.dom);\n    if (this.mounted && hostedView.mount) hostedView.mount(this.view);\n    return hostedView;\n  }\n\n  mount(view) {\n    for (let hostedView of this.manager.tooltipViews) {\n      if (hostedView.mount) hostedView.mount(view);\n    }\n\n    this.mounted = true;\n  }\n\n  positioned() {\n    for (let hostedView of this.manager.tooltipViews) {\n      if (hostedView.positioned) hostedView.positioned();\n    }\n  }\n\n  update(update) {\n    this.manager.update(update);\n  }\n\n}\n\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n  let tooltips = state.facet(showHoverTooltip).filter(t => t);\n  if (tooltips.length === 0) return null;\n  return {\n    pos: Math.min(...tooltips.map(t => t.pos)),\n    end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),\n    create: HoverTooltipHost.create,\n    above: tooltips[0].above,\n    arrow: tooltips.some(t => t.arrow)\n  };\n});\n\nclass HoverPlugin {\n  constructor(view, source, field, setHover, hoverTime) {\n    this.view = view;\n    this.source = source;\n    this.field = field;\n    this.setHover = setHover;\n    this.hoverTime = hoverTime;\n    this.hoverTimeout = -1;\n    this.restartTimeout = -1;\n    this.pending = null;\n    this.lastMove = {\n      x: 0,\n      y: 0,\n      target: view.dom,\n      time: 0\n    };\n    this.checkHover = this.checkHover.bind(this);\n    view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n    view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n  }\n\n  update() {\n    if (this.pending) {\n      this.pending = null;\n      clearTimeout(this.restartTimeout);\n      this.restartTimeout = setTimeout(() => this.startHover(), 20);\n    }\n  }\n\n  get active() {\n    return this.view.state.field(this.field);\n  }\n\n  checkHover() {\n    this.hoverTimeout = -1;\n    if (this.active) return;\n    let hovered = Date.now() - this.lastMove.time;\n    if (hovered < this.hoverTime) this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);else this.startHover();\n  }\n\n  startHover() {\n    var _a;\n\n    clearTimeout(this.restartTimeout);\n    let {\n      lastMove\n    } = this;\n    let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;\n    if (pos == null) return;\n    let posCoords = this.view.coordsAtPos(pos);\n    if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom || lastMove.x < posCoords.left - this.view.defaultCharacterWidth || lastMove.x > posCoords.right + this.view.defaultCharacterWidth) return;\n    let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n    let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n    let open = this.source(this.view, pos, lastMove.x < posCoords.left ? -rtl : rtl);\n\n    if ((_a = open) === null || _a === void 0 ? void 0 : _a.then) {\n      let pending = this.pending = {\n        pos\n      };\n      open.then(result => {\n        if (this.pending == pending) {\n          this.pending = null;\n          if (result) this.view.dispatch({\n            effects: this.setHover.of(result)\n          });\n        }\n      }, e => logException(this.view.state, e, \"hover tooltip\"));\n    } else if (open) {\n      this.view.dispatch({\n        effects: this.setHover.of(open)\n      });\n    }\n  }\n\n  mousemove(event) {\n    var _a;\n\n    this.lastMove = {\n      x: event.clientX,\n      y: event.clientY,\n      target: event.target,\n      time: Date.now()\n    };\n    if (this.hoverTimeout < 0) this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n    let tooltip = this.active;\n\n    if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {\n      let {\n        pos\n      } = tooltip || this.pending,\n          end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;\n\n      if (pos == end ? this.view.posAtCoords(this.lastMove) != pos : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6\n      /* MaxDist */\n      )) {\n        this.view.dispatch({\n          effects: this.setHover.of(null)\n        });\n        this.pending = null;\n      }\n    }\n  }\n\n  mouseleave() {\n    clearTimeout(this.hoverTimeout);\n    this.hoverTimeout = -1;\n    if (this.active) this.view.dispatch({\n      effects: this.setHover.of(null)\n    });\n  }\n\n  destroy() {\n    clearTimeout(this.hoverTimeout);\n    this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n    this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n  }\n\n}\n\nfunction isInTooltip(elt) {\n  for (let cur = elt; cur; cur = cur.parentNode) if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\")) return true;\n\n  return false;\n}\n\nfunction isOverRange(view, from, to, x, y, margin) {\n  let range = document.createRange();\n  let fromDOM = view.domAtPos(from),\n      toDOM = view.domAtPos(to);\n  range.setEnd(toDOM.node, toDOM.offset);\n  range.setStart(fromDOM.node, fromDOM.offset);\n  let rects = range.getClientRects();\n  range.detach();\n\n  for (let i = 0; i < rects.length; i++) {\n    let rect = rects[i];\n    let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n    if (dist <= margin) return true;\n  }\n\n  return false;\n}\n/**\nEnable a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos` return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/\n\n\nfunction hoverTooltip(source) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let setHover = StateEffect.define();\n  let hoverState = StateField.define({\n    create() {\n      return null;\n    },\n\n    update(value, tr) {\n      if (value && options.hideOnChange && (tr.docChanged || tr.selection)) return null;\n\n      for (let effect of tr.effects) {\n        if (effect.is(setHover)) return effect.value;\n        if (effect.is(closeHoverTooltipEffect)) return null;\n      }\n\n      if (value && tr.docChanged) {\n        let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n        if (newPos == null) return null;\n        let copy = Object.assign(Object.create(null), value);\n        copy.pos = newPos;\n        if (value.end != null) copy.end = tr.changes.mapPos(value.end);\n        return copy;\n      }\n\n      return value;\n    },\n\n    provide: f => showHoverTooltip.from(f)\n  });\n  let hoverTime = options.hoverTime || 600\n  /* Time */\n  ;\n  return [hoverState, ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, hoverTime)), showHoverTooltipHost];\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\n\n\nfunction getTooltip(view, tooltip) {\n  let plugin = view.plugin(tooltipPlugin);\n  if (!plugin) return null;\n  let found = plugin.manager.tooltips.indexOf(tooltip);\n  return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\n\n\nfunction hasHoverTooltips(state) {\n  return state.facet(showHoverTooltip).some(x => x);\n}\n\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\n\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\n\nfunction repositionTooltips(view) {\n  var _a;\n\n  (_a = view.plugin(tooltipPlugin)) === null || _a === void 0 ? void 0 : _a.maybeMeasure();\n}\n\nexport { closeHoverTooltips, getTooltip, hasHoverTooltips, hoverTooltip, repositionTooltips, showTooltip, tooltips };","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/node_modules/@codemirror/tooltip/dist/index.js"],"names":["ViewPlugin","Direction","EditorView","logException","Facet","StateEffect","StateField","MapMode","ios","navigator","exec","userAgent","test","vendor","maxTouchPoints","Outside","TooltipViewManager","constructor","view","facet","createTooltipView","input","state","tooltips","filter","t","tooltipViews","map","update","x","i","length","tip","known","other","create","tooltipView","indexOf","dom","remove","config","tooltipConfig","of","windowSpace","top","left","bottom","innerHeight","right","innerWidth","define","combine","values","_a","_b","_c","position","find","conf","parent","tooltipSpace","tooltipPlugin","fromClass","inView","lastTransaction","measureTimeout","classes","themeClasses","createContainer","measureReq","read","readMeasure","bind","write","writeMeasure","key","manager","showTooltip","createTooltip","intersectionObserver","IntersectionObserver","entries","Date","now","intersectionRatio","measureSoon","threshold","observeIntersection","ownerDocument","defaultView","addEventListener","maybeMeasure","container","document","createElement","style","className","appendChild","disconnect","tooltip","observe","setTimeout","transactions","updated","shouldMeasure","geometryChanged","newConfig","classList","add","arrow","querySelector","mount","destroy","removeEventListener","clearTimeout","editor","getBoundingClientRect","pos","coordsAtPos","size","space","measured","others","tView","Math","max","min","arrowHeight","width","height","offset","noOffset","ltr","textDirection","LTR","above","strictSide","y","overlap","r","push","toggle","positioned","requestMeasure","tv","eventHandlers","scroll","baseTheme","zIndex","border","backgroundColor","borderTop","color","overflow","content","borderLeft","borderRight","borderBottom","borderTopColor","borderBottomColor","enables","showHoverTooltip","HoverTooltipHost","mounted","createHostedView","hostedView","showHoverTooltipHost","compute","end","some","HoverPlugin","source","field","setHover","hoverTime","hoverTimeout","restartTimeout","pending","lastMove","target","time","checkHover","mouseleave","mousemove","startHover","active","hovered","contentDOM","contains","posAtCoords","posCoords","defaultCharacterWidth","bidi","bidiSpans","doc","lineAt","s","from","to","rtl","dir","RTL","open","then","result","dispatch","effects","e","event","clientX","clientY","isInTooltip","isOverRange","elt","cur","parentNode","nodeType","margin","range","createRange","fromDOM","domAtPos","toDOM","setEnd","node","setStart","rects","getClientRects","detach","rect","dist","hoverTooltip","options","hoverState","value","tr","hideOnChange","docChanged","selection","effect","is","closeHoverTooltipEffect","newPos","changes","mapPos","TrackDel","copy","Object","assign","provide","f","getTooltip","plugin","found","hasHoverTooltips","closeHoverTooltips","repositionTooltips"],"mappings":"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","sourcesContent":["import { ViewPlugin, Direction, EditorView, logException } from '@codemirror/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/state';\n\nconst ios = typeof navigator != \"undefined\" &&\n    !/*@__PURE__*//Edge\\/(\\d+)/.exec(navigator.userAgent) && /*@__PURE__*//Apple Computer/.test(navigator.vendor) &&\n    (/*@__PURE__*//Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        this.tooltipViews = this.tooltips.map(createTooltipView);\n    }\n    update(update) {\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [];\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip);\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0)\n                t.dom.remove();\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nReturn an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace() {\n    return { top: 0, left: 0, bottom: innerHeight, right: innerWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        var _a;\n        this.view = view;\n        this.inView = true;\n        this.lastTransaction = 0;\n        this.measureTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.measureSoon();\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        (_a = view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.addEventListener(\"resize\", this.measureSoon = this.measureSoon.bind(this));\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    measureSoon() {\n        if (this.measureTimeout < 0)\n            this.measureTimeout = setTimeout(() => {\n                this.measureTimeout = -1;\n                this.maybeMeasure();\n            }, 50);\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\"cm-tooltip > cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        this.container.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        var _a, _b;\n        (_a = this.view.dom.ownerDocument.defaultView) === null || _a === void 0 ? void 0 : _a.removeEventListener(\"resize\", this.measureSoon);\n        for (let { dom } of this.manager.tooltipViews)\n            dom.remove();\n        (_b = this.intersectionObserver) === null || _b === void 0 ? void 0 : _b.disconnect();\n        clearTimeout(this.measureTimeout);\n    }\n    readMeasure() {\n        let editor = this.view.dom.getBoundingClientRect();\n        return {\n            editor,\n            parent: this.parent ? this.container.getBoundingClientRect() : editor,\n            pos: this.manager.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n        };\n    }\n    writeMeasure(measured) {\n        let { editor, space } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||\n                pos.top >= Math.min(editor.bottom, space.bottom) ||\n                pos.right <= Math.max(editor.left, space.left) ||\n                pos.left >= Math.min(editor.right, space.right)) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Size */ : 0;\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.min(pos.left - (arrow ? 14 /* Offset */ : 0) + offset.x, space.right - width)\n                    : Math.max(space.left, pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset.x);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide && (above\n                ? pos.top - (size.bottom - size.top) - offset.y < space.top\n                : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = !above;\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            if (tView.overlap !== true)\n                for (let r of others)\n                    if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                        top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) + \"px\";\n                dom.style.left = (left - measured.parent.left) + \"px\";\n            }\n            else {\n                dom.style.top = top + \"px\";\n                dom.style.left = left + \"px\";\n            }\n            if (arrow)\n                arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;\n            if (tView.overlap !== true)\n                others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 100\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Size */}px`,\n        width: `${7 /* Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Size */}px solid transparent`,\n            borderRight: `${7 /* Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nBehavior by which an extension can provide a tooltip to be shown.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define();\nclass HoverTooltipHost {\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));\n    }\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    createHostedView(tooltip) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.appendChild(hostedView.dom);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned() {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned();\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip).filter(t => t);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        var _a;\n        clearTimeout(this.restartTimeout);\n        let { lastMove } = this;\n        let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;\n        if (pos == null)\n            return;\n        let posCoords = this.view.coordsAtPos(pos);\n        if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n            lastMove.x < posCoords.left - this.view.defaultCharacterWidth ||\n            lastMove.x > posCoords.right + this.view.defaultCharacterWidth)\n            return;\n        let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n        let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n        let open = this.source(this.view, pos, (lastMove.x < posCoords.left ? -rtl : rtl));\n        if ((_a = open) === null || _a === void 0 ? void 0 : _a.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result)\n                        this.view.dispatch({ effects: this.setHover.of(result) });\n                }\n            }, e => logException(this.view.state, e, \"hover tooltip\"));\n        }\n        else if (open) {\n            this.view.dispatch({ effects: this.setHover.of(open) });\n        }\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {\n            let { pos } = tooltip || this.pending, end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6 /* MaxDist */))) {\n                this.view.dispatch({ effects: this.setHover.of(null) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave() {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    range.detach();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/**\nEnable a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos` return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    return effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    return null;\n            }\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    let hoverTime = options.hoverTime || 600 /* Time */;\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, hoverTime)),\n        showHoverTooltipHost\n    ];\n}\n/**\nGet the active tooltip view for a given tooltip, if available.\n*/\nfunction getTooltip(view, tooltip) {\n    let plugin = view.plugin(tooltipPlugin);\n    if (!plugin)\n        return null;\n    let found = plugin.manager.tooltips.indexOf(tooltip);\n    return found < 0 ? null : plugin.manager.tooltipViews[found];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    var _a;\n    (_a = view.plugin(tooltipPlugin)) === null || _a === void 0 ? void 0 : _a.maybeMeasure();\n}\n\nexport { closeHoverTooltips, getTooltip, hasHoverTooltips, hoverTooltip, repositionTooltips, showTooltip, tooltips };\n"]},"metadata":{},"sourceType":"module"}