{"ast":null,"code":"import { MapMode, Text as Text$1, Facet, StateEffect, ChangeSet, EditorSelection, CharCategory, EditorState, Transaction, Prec, combineConfig, StateField } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeSet, RangeValue, RangeSetBuilder } from '@codemirror/rangeset';\nexport { Range } from '@codemirror/rangeset';\nimport { Text, findClusterBreak, findColumn, codePointAt, countColumn } from '@codemirror/text';\nimport { keyName, base } from 'w3c-keyname';\n\nfunction getSelection(root) {\n  let target; // Browsers differ on whether shadow roots have a getSelection\n  // method. If it exists, use that, otherwise, call it on the\n  // document.\n\n  if (root.nodeType == 11) {\n    // Shadow root\n    target = root.getSelection ? root : root.ownerDocument;\n  } else {\n    target = root;\n  }\n\n  return target.getSelection();\n}\n\nfunction contains(dom, node) {\n  return node ? dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\n\nfunction deepActiveElement() {\n  let elt = document.activeElement;\n\n  while (elt && elt.shadowRoot) elt = elt.shadowRoot.activeElement;\n\n  return elt;\n}\n\nfunction hasSelection(dom, selection) {\n  if (!selection.anchorNode) return false;\n\n  try {\n    // Firefox will raise 'permission denied' errors when accessing\n    // properties of `sel.anchorNode` when it's in a generated CSS\n    // element.\n    return contains(dom, selection.anchorNode);\n  } catch (_) {\n    return false;\n  }\n}\n\nfunction clientRectsFor(dom) {\n  if (dom.nodeType == 3) return textRange(dom, 0, dom.nodeValue.length).getClientRects();else if (dom.nodeType == 1) return dom.getClientRects();else return [];\n} // Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\n\n\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n  return targetNode ? scanFor(node, off, targetNode, targetOff, -1) || scanFor(node, off, targetNode, targetOff, 1) : false;\n}\n\nfunction domIndex(node) {\n  for (var index = 0;; index++) {\n    node = node.previousSibling;\n    if (!node) return index;\n  }\n}\n\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n  for (;;) {\n    if (node == targetNode && off == targetOff) return true;\n\n    if (off == (dir < 0 ? 0 : maxOffset(node))) {\n      if (node.nodeName == \"DIV\") return false;\n      let parent = node.parentNode;\n      if (!parent || parent.nodeType != 1) return false;\n      off = domIndex(node) + (dir < 0 ? 0 : 1);\n      node = parent;\n    } else if (node.nodeType == 1) {\n      node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n      if (node.nodeType == 1 && node.contentEditable == \"false\") return false;\n      off = dir < 0 ? maxOffset(node) : 0;\n    } else {\n      return false;\n    }\n  }\n}\n\nfunction maxOffset(node) {\n  return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\n\nconst Rect0 = {\n  left: 0,\n  right: 0,\n  top: 0,\n  bottom: 0\n};\n\nfunction flattenRect(rect, left) {\n  let x = left ? rect.left : rect.right;\n  return {\n    left: x,\n    right: x,\n    top: rect.top,\n    bottom: rect.bottom\n  };\n}\n\nfunction windowRect(win) {\n  return {\n    left: 0,\n    right: win.innerWidth,\n    top: 0,\n    bottom: win.innerHeight\n  };\n}\n\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n  let doc = dom.ownerDocument,\n      win = doc.defaultView;\n\n  for (let cur = dom; cur;) {\n    if (cur.nodeType == 1) {\n      // Element\n      let bounding,\n          top = cur == doc.body;\n\n      if (top) {\n        bounding = windowRect(win);\n      } else {\n        if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n          cur = cur.parentNode;\n          continue;\n        }\n\n        let rect = cur.getBoundingClientRect(); // Make sure scrollbar width isn't included in the rectangle\n\n        bounding = {\n          left: rect.left,\n          right: rect.left + cur.clientWidth,\n          top: rect.top,\n          bottom: rect.top + cur.clientHeight\n        };\n      }\n\n      let moveX = 0,\n          moveY = 0;\n\n      if (y == \"nearest\") {\n        if (rect.top < bounding.top) {\n          moveY = -(bounding.top - rect.top + yMargin);\n          if (side > 0 && rect.bottom > bounding.bottom + moveY) moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n        } else if (rect.bottom > bounding.bottom) {\n          moveY = rect.bottom - bounding.bottom + yMargin;\n          if (side < 0 && rect.top - moveY < bounding.top) moveY = -(bounding.top + moveY - rect.top + yMargin);\n        }\n      } else {\n        let rectHeight = rect.bottom - rect.top,\n            boundingHeight = bounding.bottom - bounding.top;\n        let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 : y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin : rect.bottom - boundingHeight + yMargin;\n        moveY = targetTop - bounding.top;\n      }\n\n      if (x == \"nearest\") {\n        if (rect.left < bounding.left) {\n          moveX = -(bounding.left - rect.left + xMargin);\n          if (side > 0 && rect.right > bounding.right + moveX) moveX = rect.right - bounding.right + moveX + xMargin;\n        } else if (rect.right > bounding.right) {\n          moveX = rect.right - bounding.right + xMargin;\n          if (side < 0 && rect.left < bounding.left + moveX) moveX = -(bounding.left + moveX - rect.left + xMargin);\n        }\n      } else {\n        let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 : x == \"start\" == ltr ? rect.left - xMargin : rect.right - (bounding.right - bounding.left) + xMargin;\n        moveX = targetLeft - bounding.left;\n      }\n\n      if (moveX || moveY) {\n        if (top) {\n          win.scrollBy(moveX, moveY);\n        } else {\n          if (moveY) {\n            let start = cur.scrollTop;\n            cur.scrollTop += moveY;\n            moveY = cur.scrollTop - start;\n          }\n\n          if (moveX) {\n            let start = cur.scrollLeft;\n            cur.scrollLeft += moveX;\n            moveX = cur.scrollLeft - start;\n          }\n\n          rect = {\n            left: rect.left - moveX,\n            top: rect.top - moveY,\n            right: rect.right - moveX,\n            bottom: rect.bottom - moveY\n          };\n        }\n      }\n\n      if (top) break;\n      cur = cur.assignedSlot || cur.parentNode;\n      x = y = \"nearest\";\n    } else if (cur.nodeType == 11) {\n      // A shadow root\n      cur = cur.host;\n    } else {\n      break;\n    }\n  }\n}\n\nclass DOMSelectionState {\n  constructor() {\n    this.anchorNode = null;\n    this.anchorOffset = 0;\n    this.focusNode = null;\n    this.focusOffset = 0;\n  }\n\n  eq(domSel) {\n    return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset && this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n  }\n\n  setRange(range) {\n    this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);\n  }\n\n  set(anchorNode, anchorOffset, focusNode, focusOffset) {\n    this.anchorNode = anchorNode;\n    this.anchorOffset = anchorOffset;\n    this.focusNode = focusNode;\n    this.focusOffset = focusOffset;\n  }\n\n}\n\nlet preventScrollSupported = null; // Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\n\nfunction focusPreventScroll(dom) {\n  if (dom.setActive) return dom.setActive(); // in IE\n\n  if (preventScrollSupported) return dom.focus(preventScrollSupported);\n  let stack = [];\n\n  for (let cur = dom; cur; cur = cur.parentNode) {\n    stack.push(cur, cur.scrollTop, cur.scrollLeft);\n    if (cur == cur.ownerDocument) break;\n  }\n\n  dom.focus(preventScrollSupported == null ? {\n    get preventScroll() {\n      preventScrollSupported = {\n        preventScroll: true\n      };\n      return true;\n    }\n\n  } : undefined);\n\n  if (!preventScrollSupported) {\n    preventScrollSupported = false;\n\n    for (let i = 0; i < stack.length;) {\n      let elt = stack[i++],\n          top = stack[i++],\n          left = stack[i++];\n      if (elt.scrollTop != top) elt.scrollTop = top;\n      if (elt.scrollLeft != left) elt.scrollLeft = left;\n    }\n  }\n}\n\nlet scratchRange;\n\nfunction textRange(node, from) {\n  let to = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : from;\n  let range = scratchRange || (scratchRange = document.createRange());\n  range.setEnd(node, to);\n  range.setStart(node, from);\n  return range;\n}\n\nfunction dispatchKey(elt, name, code) {\n  let options = {\n    key: name,\n    code: name,\n    keyCode: code,\n    which: code,\n    cancelable: true\n  };\n  let down = new KeyboardEvent(\"keydown\", options);\n  down.synthetic = true;\n  elt.dispatchEvent(down);\n  let up = new KeyboardEvent(\"keyup\", options);\n  up.synthetic = true;\n  elt.dispatchEvent(up);\n  return down.defaultPrevented || up.defaultPrevented;\n}\n\nfunction getRoot(node) {\n  while (node) {\n    if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host)) return node;\n    node = node.assignedSlot || node.parentNode;\n  }\n\n  return null;\n}\n\nfunction clearAttributes(node) {\n  while (node.attributes.length) node.removeAttributeNode(node.attributes[0]);\n}\n\nclass DOMPos {\n  constructor(node, offset) {\n    let precise = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    this.node = node;\n    this.offset = offset;\n    this.precise = precise;\n  }\n\n  static before(dom, precise) {\n    return new DOMPos(dom.parentNode, domIndex(dom), precise);\n  }\n\n  static after(dom, precise) {\n    return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise);\n  }\n\n}\n\nconst noChildren = [];\n\nclass ContentView {\n  constructor() {\n    this.parent = null;\n    this.dom = null;\n    this.dirty = 2\n    /* Node */\n    ;\n  }\n\n  get editorView() {\n    if (!this.parent) throw new Error(\"Accessing view in orphan content view\");\n    return this.parent.editorView;\n  }\n\n  get overrideDOMText() {\n    return null;\n  }\n\n  get posAtStart() {\n    return this.parent ? this.parent.posBefore(this) : 0;\n  }\n\n  get posAtEnd() {\n    return this.posAtStart + this.length;\n  }\n\n  posBefore(view) {\n    let pos = this.posAtStart;\n\n    for (let child of this.children) {\n      if (child == view) return pos;\n      pos += child.length + child.breakAfter;\n    }\n\n    throw new RangeError(\"Invalid child in posBefore\");\n  }\n\n  posAfter(view) {\n    return this.posBefore(view) + view.length;\n  } // Will return a rectangle directly before (when side < 0), after\n  // (side > 0) or directly on (when the browser supports it) the\n  // given position.\n\n\n  coordsAt(_pos, _side) {\n    return null;\n  }\n\n  sync(track) {\n    if (this.dirty & 2\n    /* Node */\n    ) {\n      let parent = this.dom;\n      let pos = parent.firstChild;\n\n      for (let child of this.children) {\n        if (child.dirty) {\n          if (!child.dom && pos) {\n            let contentView = ContentView.get(pos);\n            if (!contentView || !contentView.parent && contentView.constructor == child.constructor) child.reuseDOM(pos);\n          }\n\n          child.sync(track);\n          child.dirty = 0\n          /* Not */\n          ;\n        }\n\n        if (track && !track.written && track.node == parent && pos != child.dom) track.written = true;\n\n        if (child.dom.parentNode == parent) {\n          while (pos && pos != child.dom) pos = rm(pos);\n\n          pos = child.dom.nextSibling;\n        } else {\n          parent.insertBefore(child.dom, pos);\n        }\n      }\n\n      if (pos && track && track.node == parent) track.written = true;\n\n      while (pos) pos = rm(pos);\n    } else if (this.dirty & 1\n    /* Child */\n    ) {\n      for (let child of this.children) if (child.dirty) {\n        child.sync(track);\n        child.dirty = 0\n        /* Not */\n        ;\n      }\n    }\n  }\n\n  reuseDOM(_dom) {}\n\n  localPosFromDOM(node, offset) {\n    let after;\n\n    if (node == this.dom) {\n      after = this.dom.childNodes[offset];\n    } else {\n      let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n\n      for (;;) {\n        let parent = node.parentNode;\n        if (parent == this.dom) break;\n\n        if (bias == 0 && parent.firstChild != parent.lastChild) {\n          if (node == parent.firstChild) bias = -1;else bias = 1;\n        }\n\n        node = parent;\n      }\n\n      if (bias < 0) after = node;else after = node.nextSibling;\n    }\n\n    if (after == this.dom.firstChild) return 0;\n\n    while (after && !ContentView.get(after)) after = after.nextSibling;\n\n    if (!after) return this.length;\n\n    for (let i = 0, pos = 0;; i++) {\n      let child = this.children[i];\n      if (child.dom == after) return pos;\n      pos += child.length + child.breakAfter;\n    }\n  }\n\n  domBoundsAround(from, to) {\n    let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let fromI = -1,\n        fromStart = -1,\n        toI = -1,\n        toEnd = -1;\n\n    for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n      let child = this.children[i],\n          end = pos + child.length;\n      if (pos < from && end > to) return child.domBoundsAround(from, to, pos);\n\n      if (end >= from && fromI == -1) {\n        fromI = i;\n        fromStart = pos;\n      }\n\n      if (pos > to && child.dom.parentNode == this.dom) {\n        toI = i;\n        toEnd = prevEnd;\n        break;\n      }\n\n      prevEnd = end;\n      pos = end + child.breakAfter;\n    }\n\n    return {\n      from: fromStart,\n      to: toEnd < 0 ? offset + this.length : toEnd,\n      startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n      endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null\n    };\n  }\n\n  markDirty() {\n    let andParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    this.dirty |= 2\n    /* Node */\n    ;\n    this.markParentsDirty(andParent);\n  }\n\n  markParentsDirty(childList) {\n    for (let parent = this.parent; parent; parent = parent.parent) {\n      if (childList) parent.dirty |= 2\n      /* Node */\n      ;\n      if (parent.dirty & 1\n      /* Child */\n      ) return;\n      parent.dirty |= 1\n      /* Child */\n      ;\n      childList = false;\n    }\n  }\n\n  setParent(parent) {\n    if (this.parent != parent) {\n      this.parent = parent;\n      if (this.dirty) this.markParentsDirty(true);\n    }\n  }\n\n  setDOM(dom) {\n    if (this.dom) this.dom.cmView = null;\n    this.dom = dom;\n    dom.cmView = this;\n  }\n\n  get rootView() {\n    for (let v = this;;) {\n      let parent = v.parent;\n      if (!parent) return v;\n      v = parent;\n    }\n  }\n\n  replaceChildren(from, to) {\n    let children = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : noChildren;\n    this.markDirty();\n\n    for (let i = from; i < to; i++) {\n      let child = this.children[i];\n      if (child.parent == this) child.destroy();\n    }\n\n    this.children.splice(from, to - from, ...children);\n\n    for (let i = 0; i < children.length; i++) children[i].setParent(this);\n  }\n\n  ignoreMutation(_rec) {\n    return false;\n  }\n\n  ignoreEvent(_event) {\n    return false;\n  }\n\n  childCursor() {\n    let pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.length;\n    return new ChildCursor(this.children, pos, this.children.length);\n  }\n\n  childPos(pos) {\n    let bias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    return this.childCursor().findPos(pos, bias);\n  }\n\n  toString() {\n    let name = this.constructor.name.replace(\"View\", \"\");\n    return name + (this.children.length ? \"(\" + this.children.join() + \")\" : this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") + (this.breakAfter ? \"#\" : \"\");\n  }\n\n  static get(node) {\n    return node.cmView;\n  }\n\n  get isEditable() {\n    return true;\n  }\n\n  merge(from, to, source, hasStart, openStart, openEnd) {\n    return false;\n  }\n\n  become(other) {\n    return false;\n  } // When this is a zero-length view with a side, this should return a\n  // number <= 0 to indicate it is before its position, or a\n  // number > 0 when after its position.\n\n\n  getSide() {\n    return 0;\n  }\n\n  destroy() {\n    this.parent = null;\n  }\n\n}\n\nContentView.prototype.breakAfter = 0; // Remove a DOM node and return its next sibling.\n\nfunction rm(dom) {\n  let next = dom.nextSibling;\n  dom.parentNode.removeChild(dom);\n  return next;\n}\n\nclass ChildCursor {\n  constructor(children, pos, i) {\n    this.children = children;\n    this.pos = pos;\n    this.i = i;\n    this.off = 0;\n  }\n\n  findPos(pos) {\n    let bias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n    for (;;) {\n      if (pos > this.pos || pos == this.pos && (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n        this.off = pos - this.pos;\n        return this;\n      }\n\n      let next = this.children[--this.i];\n      this.pos -= next.length + next.breakAfter;\n    }\n  }\n\n}\n\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n  let {\n    children\n  } = parent;\n  let before = children.length ? children[fromI] : null;\n  let last = insert.length ? insert[insert.length - 1] : null;\n  let breakAtEnd = last ? last.breakAfter : breakAtStart; // Change within a single child\n\n  if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 && before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd)) return;\n\n  if (toI < children.length) {\n    let after = children[toI]; // Make sure the end of the child after the update is preserved in `after`\n\n    if (after && toOff < after.length) {\n      // If we're splitting a child, separate part of it to avoid that\n      // being mangled when updating the child before the update.\n      if (fromI == toI) {\n        after = after.split(toOff);\n        toOff = 0;\n      } // If the element after the replacement should be merged with\n      // the last replacing element, update `content`\n\n\n      if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n        insert[insert.length - 1] = after;\n      } else {\n        // Remove the start of the after element, if necessary, and\n        // add it to `content`.\n        if (toOff) after.merge(0, toOff, null, false, 0, openEnd);\n        insert.push(after);\n      }\n    } else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n      // The element at `toI` is entirely covered by this range.\n      // Preserve its line break, if any.\n      if (last) last.breakAfter = 1;else breakAtStart = 1;\n    } // Since we've handled the next element from the current elements\n    // now, make sure `toI` points after that.\n\n\n    toI++;\n  }\n\n  if (before) {\n    before.breakAfter = breakAtStart;\n\n    if (fromOff > 0) {\n      if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n        before.breakAfter = insert.shift().breakAfter;\n      } else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n        before.merge(fromOff, before.length, null, false, openStart, 0);\n      }\n\n      fromI++;\n    }\n  } // Try to merge widgets on the boundaries of the replacement\n\n\n  while (fromI < toI && insert.length) {\n    if (children[toI - 1].become(insert[insert.length - 1])) {\n      toI--;\n      insert.pop();\n      openEnd = insert.length ? 0 : openStart;\n    } else if (children[fromI].become(insert[0])) {\n      fromI++;\n      insert.shift();\n      openStart = insert.length ? 0 : openEnd;\n    } else {\n      break;\n    }\n  }\n\n  if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter && children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd)) fromI--;\n  if (fromI < toI || insert.length) parent.replaceChildren(fromI, toI, insert);\n}\n\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n  let cur = parent.childCursor();\n  let {\n    i: toI,\n    off: toOff\n  } = cur.findPos(to, 1);\n  let {\n    i: fromI,\n    off: fromOff\n  } = cur.findPos(from, -1);\n  let dLen = from - to;\n\n  for (let view of insert) dLen += view.length;\n\n  parent.length += dLen;\n  replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet [nav, doc] = typeof navigator != \"undefined\" ? [navigator, document] : [{\n  userAgent: \"\",\n  vendor: \"\",\n  platform: \"\"\n}, {\n  documentElement: {\n    style: {}\n  }\n}];\nconst ie_edge = /*@__PURE__*/ /Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*/ /MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*/ /Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*/ /gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*/ /Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = (\"webkitFontSmoothing\" in doc.documentElement.style);\nconst safari = !ie && /*@__PURE__*/ /Apple Computer/.test(nav.vendor);\nconst ios = safari && ( /*@__PURE__*/ /Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n  mac: ios || /*@__PURE__*/ /Mac/.test(nav.platform),\n  windows: /*@__PURE__*/ /Win/.test(nav.platform),\n  linux: /*@__PURE__*/ /Linux|X11/.test(nav.platform),\n  ie,\n  ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n  gecko,\n  gecko_version: gecko ? +( /*@__PURE__*/ /Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n  chrome: !!chrome,\n  chrome_version: chrome ? +chrome[1] : 0,\n  ios,\n  android: /*@__PURE__*/ /Android\\b/.test(nav.userAgent),\n  webkit,\n  safari,\n  webkit_version: webkit ? +( /*@__PURE__*/ /\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n  tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\nconst MaxJoinLen = 256;\n\nclass TextView extends ContentView {\n  constructor(text) {\n    super();\n    this.text = text;\n  }\n\n  get length() {\n    return this.text.length;\n  }\n\n  createDOM(textDOM) {\n    this.setDOM(textDOM || document.createTextNode(this.text));\n  }\n\n  sync(track) {\n    if (!this.dom) this.createDOM();\n\n    if (this.dom.nodeValue != this.text) {\n      if (track && track.node == this.dom) track.written = true;\n      this.dom.nodeValue = this.text;\n    }\n  }\n\n  reuseDOM(dom) {\n    if (dom.nodeType == 3) this.createDOM(dom);\n  }\n\n  merge(from, to, source) {\n    if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen)) return false;\n    this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n    this.markDirty();\n    return true;\n  }\n\n  split(from) {\n    let result = new TextView(this.text.slice(from));\n    this.text = this.text.slice(0, from);\n    this.markDirty();\n    return result;\n  }\n\n  localPosFromDOM(node, offset) {\n    return node == this.dom ? offset : offset ? this.text.length : 0;\n  }\n\n  domAtPos(pos) {\n    return new DOMPos(this.dom, pos);\n  }\n\n  domBoundsAround(_from, _to, offset) {\n    return {\n      from: offset,\n      to: offset + this.length,\n      startDOM: this.dom,\n      endDOM: this.dom.nextSibling\n    };\n  }\n\n  coordsAt(pos, side) {\n    return textCoords(this.dom, pos, side);\n  }\n\n}\n\nclass MarkView extends ContentView {\n  constructor(mark) {\n    let children = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let length = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    super();\n    this.mark = mark;\n    this.children = children;\n    this.length = length;\n\n    for (let ch of children) ch.setParent(this);\n  }\n\n  setAttrs(dom) {\n    clearAttributes(dom);\n    if (this.mark.class) dom.className = this.mark.class;\n    if (this.mark.attrs) for (let name in this.mark.attrs) dom.setAttribute(name, this.mark.attrs[name]);\n    return dom;\n  }\n\n  reuseDOM(node) {\n    if (node.nodeName == this.mark.tagName.toUpperCase()) {\n      this.setDOM(node);\n      this.dirty |= 4\n      /* Attrs */\n      | 2\n      /* Node */\n      ;\n    }\n  }\n\n  sync(track) {\n    if (!this.dom) this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));else if (this.dirty & 4\n    /* Attrs */\n    ) this.setAttrs(this.dom);\n    super.sync(track);\n  }\n\n  merge(from, to, source, _hasStart, openStart, openEnd) {\n    if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) || from && openStart <= 0 || to < this.length && openEnd <= 0)) return false;\n    mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n    this.markDirty();\n    return true;\n  }\n\n  split(from) {\n    let result = [],\n        off = 0,\n        detachFrom = -1,\n        i = 0;\n\n    for (let elt of this.children) {\n      let end = off + elt.length;\n      if (end > from) result.push(off < from ? elt.split(from - off) : elt);\n      if (detachFrom < 0 && off >= from) detachFrom = i;\n      off = end;\n      i++;\n    }\n\n    let length = this.length - from;\n    this.length = from;\n\n    if (detachFrom > -1) {\n      this.children.length = detachFrom;\n      this.markDirty();\n    }\n\n    return new MarkView(this.mark, result, length);\n  }\n\n  domAtPos(pos) {\n    return inlineDOMAtPos(this.dom, this.children, pos);\n  }\n\n  coordsAt(pos, side) {\n    return coordsInChildren(this, pos, side);\n  }\n\n}\n\nfunction textCoords(text, pos, side) {\n  let length = text.nodeValue.length;\n  if (pos > length) pos = length;\n  let from = pos,\n      to = pos,\n      flatten = 0;\n\n  if (pos == 0 && side < 0 || pos == length && side >= 0) {\n    if (!(browser.chrome || browser.gecko)) {\n      // These browsers reliably return valid rectangles for empty ranges\n      if (pos) {\n        from--;\n        flatten = 1;\n      } // FIXME this is wrong in RTL text\n      else {\n        to++;\n        flatten = -1;\n      }\n    }\n  } else {\n    if (side < 0) from--;else to++;\n  }\n\n  let rects = textRange(text, from, to).getClientRects();\n  if (!rects.length) return Rect0;\n  let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n  if (browser.safari && !flatten && rect.width == 0) rect = Array.prototype.find.call(rects, r => r.width) || rect;\n  return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n} // Also used for collapsed ranges that don't have a placeholder widget!\n\n\nclass WidgetView extends ContentView {\n  constructor(widget, length, side) {\n    super();\n    this.widget = widget;\n    this.length = length;\n    this.side = side;\n  }\n\n  static create(widget, length, side) {\n    return new (widget.customView || WidgetView)(widget, length, side);\n  }\n\n  split(from) {\n    let result = WidgetView.create(this.widget, this.length - from, this.side);\n    this.length -= from;\n    return result;\n  }\n\n  sync() {\n    if (!this.dom || !this.widget.updateDOM(this.dom)) {\n      this.setDOM(this.widget.toDOM(this.editorView));\n      this.dom.contentEditable = \"false\";\n    }\n  }\n\n  getSide() {\n    return this.side;\n  }\n\n  merge(from, to, source, hasStart, openStart, openEnd) {\n    if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) || from > 0 && openStart <= 0 || to < this.length && openEnd <= 0)) return false;\n    this.length = from + (source ? source.length : 0) + (this.length - to);\n    return true;\n  }\n\n  become(other) {\n    if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n      if (this.widget.constructor == other.widget.constructor) {\n        if (!this.widget.eq(other.widget)) this.markDirty(true);\n        this.widget = other.widget;\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  ignoreMutation() {\n    return true;\n  }\n\n  ignoreEvent(event) {\n    return this.widget.ignoreEvent(event);\n  }\n\n  get overrideDOMText() {\n    if (this.length == 0) return Text.empty;\n    let top = this;\n\n    while (top.parent) top = top.parent;\n\n    let view = top.editorView,\n        text = view && view.state.doc,\n        start = this.posAtStart;\n    return text ? text.slice(start, start + this.length) : Text.empty;\n  }\n\n  domAtPos(pos) {\n    return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n  }\n\n  domBoundsAround() {\n    return null;\n  }\n\n  coordsAt(pos, side) {\n    let rects = this.dom.getClientRects(),\n        rect = null;\n    if (!rects.length) return Rect0;\n\n    for (let i = pos > 0 ? rects.length - 1 : 0;; i += pos > 0 ? -1 : 1) {\n      rect = rects[i];\n      if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom) break;\n    }\n\n    return pos == 0 && side > 0 || pos == this.length && side <= 0 ? rect : flattenRect(rect, pos == 0);\n  }\n\n  get isEditable() {\n    return false;\n  }\n\n  destroy() {\n    super.destroy();\n    if (this.dom) this.widget.destroy(this.dom);\n  }\n\n}\n\nclass CompositionView extends WidgetView {\n  domAtPos(pos) {\n    return new DOMPos(this.widget.text, pos);\n  }\n\n  sync() {\n    this.setDOM(this.widget.toDOM());\n  }\n\n  localPosFromDOM(node, offset) {\n    return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n  }\n\n  ignoreMutation() {\n    return false;\n  }\n\n  get overrideDOMText() {\n    return null;\n  }\n\n  coordsAt(pos, side) {\n    return textCoords(this.widget.text, pos, side);\n  }\n\n  get isEditable() {\n    return true;\n  }\n\n} // Use two characters on Android, to prevent Chrome from closing the\n// virtual keyboard when backspacing after a widget (#602).\n\n\nconst ZeroWidthSpace = browser.android ? \"\\u200b\\u200b\" : \"\\u200b\"; // These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\n\nclass WidgetBufferView extends ContentView {\n  constructor(side) {\n    super();\n    this.side = side;\n  }\n\n  get length() {\n    return 0;\n  }\n\n  merge() {\n    return false;\n  }\n\n  become(other) {\n    return other instanceof WidgetBufferView && other.side == this.side;\n  }\n\n  split() {\n    return new WidgetBufferView(this.side);\n  }\n\n  sync() {\n    if (!this.dom) this.setDOM(document.createTextNode(ZeroWidthSpace));else if (this.dirty && this.dom.nodeValue != ZeroWidthSpace) this.dom.nodeValue = ZeroWidthSpace;\n  }\n\n  getSide() {\n    return this.side;\n  }\n\n  domAtPos(pos) {\n    return DOMPos.before(this.dom);\n  }\n\n  localPosFromDOM() {\n    return 0;\n  }\n\n  domBoundsAround() {\n    return null;\n  }\n\n  coordsAt(pos) {\n    let rects = clientRectsFor(this.dom);\n    return rects[rects.length - 1] || null;\n  }\n\n  get overrideDOMText() {\n    return Text.of([this.dom.nodeValue.replace(/\\u200b/g, \"\")]);\n  }\n\n}\n\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\n\nfunction inlineDOMAtPos(dom, children, pos) {\n  let i = 0;\n\n  for (let off = 0; i < children.length; i++) {\n    let child = children[i],\n        end = off + child.length;\n    if (end == off && child.getSide() <= 0) continue;\n    if (pos > off && pos < end && child.dom.parentNode == dom) return child.domAtPos(pos - off);\n    if (pos <= off) break;\n    off = end;\n  }\n\n  for (; i > 0; i--) {\n    let before = children[i - 1].dom;\n    if (before.parentNode == dom) return DOMPos.after(before);\n  }\n\n  return new DOMPos(dom, 0);\n} // Assumes `view`, if a mark view, has precisely 1 child.\n\n\nfunction joinInlineInto(parent, view, open) {\n  let last,\n      {\n    children\n  } = parent;\n\n  if (open > 0 && view instanceof MarkView && children.length && (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n    joinInlineInto(last, view.children[0], open - 1);\n  } else {\n    children.push(view);\n    view.setParent(parent);\n  }\n\n  parent.length += view.length;\n}\n\nfunction coordsInChildren(view, pos, side) {\n  for (let off = 0, i = 0; i < view.children.length; i++) {\n    let child = view.children[i],\n        end = off + child.length,\n        next;\n\n    if ((side <= 0 || end == view.length || child.getSide() > 0 ? end >= pos : end > pos) && (pos < end || i + 1 == view.children.length || (next = view.children[i + 1]).length || next.getSide() > 0)) {\n      let flatten = 0;\n\n      if (end == off) {\n        if (child.getSide() <= 0) continue;\n        flatten = side = -child.getSide();\n      }\n\n      let rect = child.coordsAt(pos - off, side);\n      return flatten && rect ? flattenRect(rect, side < 0) : rect;\n    }\n\n    off = end;\n  }\n\n  let last = view.dom.lastChild;\n  if (!last) return view.dom.getBoundingClientRect();\n  let rects = clientRectsFor(last);\n  return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n  for (let name in source) {\n    if (name == \"class\" && target.class) target.class += \" \" + source.class;else if (name == \"style\" && target.style) target.style += \";\" + source.style;else target[name] = source[name];\n  }\n\n  return target;\n}\n\nfunction attrsEq(a, b) {\n  if (a == b) return true;\n  if (!a || !b) return false;\n  let keysA = Object.keys(a),\n      keysB = Object.keys(b);\n  if (keysA.length != keysB.length) return false;\n\n  for (let key of keysA) {\n    if (keysB.indexOf(key) == -1 || a[key] !== b[key]) return false;\n  }\n\n  return true;\n}\n\nfunction updateAttrs(dom, prev, attrs) {\n  if (prev) for (let name in prev) if (!(attrs && name in attrs)) dom.removeAttribute(name);\n  if (attrs) for (let name in attrs) if (!(prev && prev[name] == attrs[name])) dom.setAttribute(name, attrs[name]);\n}\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even when the decorations\nthat define them are recreated.\n*/\n\n\nclass WidgetType {\n  /**\n  Compare this instance to another instance of the same type.\n  (TypeScript can't express this, but only instances of the same\n  specific class will be passed to this method.) This is used to\n  avoid redrawing widgets when they are replaced by a new\n  decoration of the same type. The default implementation just\n  returns `false`, which will cause new instances of the widget to\n  always be redrawn.\n  */\n  eq(_widget) {\n    return false;\n  }\n  /**\n  Update a DOM element created by a widget of the same type (but\n  different, non-`eq` content) to reflect this widget. May return\n  true to indicate that it could update, false to indicate it\n  couldn't (in which case the widget will be redrawn). The default\n  implementation just returns false.\n  */\n\n\n  updateDOM(_dom) {\n    return false;\n  }\n  /**\n  @internal\n  */\n\n\n  compare(other) {\n    return this == other || this.constructor == other.constructor && this.eq(other);\n  }\n  /**\n  The estimated height this widget will have, to be used when\n  estimating the height of content that hasn't been drawn. May\n  return -1 to indicate you don't know. The default implementation\n  returns -1.\n  */\n\n\n  get estimatedHeight() {\n    return -1;\n  }\n  /**\n  Can be used to configure which kinds of events inside the widget\n  should be ignored by the editor. The default is to ignore all\n  events.\n  */\n\n\n  ignoreEvent(_event) {\n    return true;\n  }\n  /**\n  @internal\n  */\n\n\n  get customView() {\n    return null;\n  }\n  /**\n  This is called when the an instance of the widget is removed\n  from the editor view.\n  */\n\n\n  destroy(_dom) {}\n\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\n\n\nvar BlockType = /*@__PURE__*/function (BlockType) {\n  /**\n  A line of text.\n  */\n  BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n  /**\n  A block widget associated with the position after it.\n  */\n\n  BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n  /**\n  A block widget associated with the position before it.\n  */\n\n  BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n  /**\n  A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n  */\n\n  BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\n  return BlockType;\n}(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#rangeset.Range), which adds a start and end position.\n*/\n\n\nclass Decoration extends RangeValue {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  @internal\n  */\n  startSide,\n  /**\n  @internal\n  */\n  endSide,\n  /**\n  @internal\n  */\n  widget,\n  /**\n  The config object used to create this decoration. You can\n  include additional properties in there to store metadata about\n  your decoration.\n  */\n  spec) {\n    super();\n    this.startSide = startSide;\n    this.endSide = endSide;\n    this.widget = widget;\n    this.spec = spec;\n  }\n  /**\n  @internal\n  */\n\n\n  get heightRelevant() {\n    return false;\n  }\n  /**\n  Create a mark decoration, which influences the styling of the\n  content in its range. Nested mark decorations will cause nested\n  DOM elements to be created. Nesting order is determined by\n  precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) or\n  (below the facet-provided decorations) [view\n  plugin](https://codemirror.net/6/docs/ref/#view.PluginSpec.decorations). Such elements are split\n  on line boundaries and on the boundaries of higher-precedence\n  decorations.\n  */\n\n\n  static mark(spec) {\n    return new MarkDecoration(spec);\n  }\n  /**\n  Create a widget decoration, which adds an element at the given\n  position.\n  */\n\n\n  static widget(spec) {\n    let side = spec.side || 0,\n        block = !!spec.block;\n    side += block ? side > 0 ? 300000000\n    /* BlockAfter */\n    : -400000000\n    /* BlockBefore */\n    : side > 0 ? 100000000\n    /* InlineAfter */\n    : -100000000\n    /* InlineBefore */\n    ;\n    return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n  }\n  /**\n  Create a replace decoration which replaces the given range with\n  a widget, or simply hides it.\n  */\n\n\n  static replace(spec) {\n    let block = !!spec.block;\n    let {\n      start,\n      end\n    } = getInclusive(spec, block);\n    let startSide = block ? start ? -300000000\n    /* BlockIncStart */\n    : -1\n    /* InlineIncStart */\n    : 400000000\n    /* NonIncStart */\n    ;\n    let endSide = block ? end ? 200000000\n    /* BlockIncEnd */\n    : 1\n    /* InlineIncEnd */\n    : -500000000\n    /* NonIncEnd */\n    ;\n    return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n  }\n  /**\n  Create a line decoration, which can add DOM attributes to the\n  line starting at the given position.\n  */\n\n\n  static line(spec) {\n    return new LineDecoration(spec);\n  }\n  /**\n  Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n  decorated range or ranges. If the ranges aren't already sorted,\n  pass `true` for `sort` to make the library sort them for you.\n  */\n\n\n  static set(of) {\n    let sort = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    return RangeSet.of(of, sort);\n  }\n  /**\n  @internal\n  */\n\n\n  hasHeight() {\n    return this.widget ? this.widget.estimatedHeight > -1 : false;\n  }\n\n}\n/**\nThe empty set of decorations.\n*/\n\n\nDecoration.none = RangeSet.empty;\n\nclass MarkDecoration extends Decoration {\n  constructor(spec) {\n    let {\n      start,\n      end\n    } = getInclusive(spec);\n    super(start ? -1\n    /* InlineIncStart */\n    : 400000000\n    /* NonIncStart */\n    , end ? 1\n    /* InlineIncEnd */\n    : -500000000\n    /* NonIncEnd */\n    , null, spec);\n    this.tagName = spec.tagName || \"span\";\n    this.class = spec.class || \"\";\n    this.attrs = spec.attributes || null;\n  }\n\n  eq(other) {\n    return this == other || other instanceof MarkDecoration && this.tagName == other.tagName && this.class == other.class && attrsEq(this.attrs, other.attrs);\n  }\n\n  range(from) {\n    let to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : from;\n    if (from >= to) throw new RangeError(\"Mark decorations may not be empty\");\n    return super.range(from, to);\n  }\n\n}\n\nMarkDecoration.prototype.point = false;\n\nclass LineDecoration extends Decoration {\n  constructor(spec) {\n    super(-200000000\n    /* Line */\n    , -200000000\n    /* Line */\n    , null, spec);\n  }\n\n  eq(other) {\n    return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n  }\n\n  range(from) {\n    let to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : from;\n    if (to != from) throw new RangeError(\"Line decoration ranges must be zero-length\");\n    return super.range(from, to);\n  }\n\n}\n\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\n\nclass PointDecoration extends Decoration {\n  constructor(spec, startSide, endSide, block, widget, isReplace) {\n    super(startSide, endSide, widget, spec);\n    this.block = block;\n    this.isReplace = isReplace;\n    this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n  } // Only relevant when this.block == true\n\n\n  get type() {\n    return this.startSide < this.endSide ? BlockType.WidgetRange : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n  }\n\n  get heightRelevant() {\n    return this.block || !!this.widget && this.widget.estimatedHeight >= 5;\n  }\n\n  eq(other) {\n    return other instanceof PointDecoration && widgetsEq(this.widget, other.widget) && this.block == other.block && this.startSide == other.startSide && this.endSide == other.endSide;\n  }\n\n  range(from) {\n    let to = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : from;\n    if (this.isReplace && (from > to || from == to && this.startSide > 0 && this.endSide <= 0)) throw new RangeError(\"Invalid range for replacement decoration\");\n    if (!this.isReplace && to != from) throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n    return super.range(from, to);\n  }\n\n}\n\nPointDecoration.prototype.point = true;\n\nfunction getInclusive(spec) {\n  let block = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let {\n    inclusiveStart: start,\n    inclusiveEnd: end\n  } = spec;\n  if (start == null) start = spec.inclusive;\n  if (end == null) end = spec.inclusive;\n  return {\n    start: start !== null && start !== void 0 ? start : block,\n    end: end !== null && end !== void 0 ? end : block\n  };\n}\n\nfunction widgetsEq(a, b) {\n  return a == b || !!(a && b && a.compare(b));\n}\n\nfunction addRange(from, to, ranges) {\n  let margin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n  let last = ranges.length - 1;\n  if (last >= 0 && ranges[last] + margin >= from) ranges[last] = Math.max(ranges[last], to);else ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n  constructor() {\n    super(...arguments);\n    this.children = [];\n    this.length = 0;\n    this.prevAttrs = undefined;\n    this.attrs = null;\n    this.breakAfter = 0;\n  } // Consumes source\n\n\n  merge(from, to, source, hasStart, openStart, openEnd) {\n    if (source) {\n      if (!(source instanceof LineView)) return false;\n      if (!this.dom) source.transferDOM(this); // Reuse source.dom when appropriate\n    }\n\n    if (hasStart) this.setDeco(source ? source.attrs : null);\n    mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n    return true;\n  }\n\n  split(at) {\n    let end = new LineView();\n    end.breakAfter = this.breakAfter;\n    if (this.length == 0) return end;\n    let {\n      i,\n      off\n    } = this.childPos(at);\n\n    if (off) {\n      end.append(this.children[i].split(off), 0);\n      this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n      i++;\n    }\n\n    for (let j = i; j < this.children.length; j++) end.append(this.children[j], 0);\n\n    while (i > 0 && this.children[i - 1].length == 0) this.children[--i].destroy();\n\n    this.children.length = i;\n    this.markDirty();\n    this.length = at;\n    return end;\n  }\n\n  transferDOM(other) {\n    if (!this.dom) return;\n    other.setDOM(this.dom);\n    other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n    this.prevAttrs = undefined;\n    this.dom = null;\n  }\n\n  setDeco(attrs) {\n    if (!attrsEq(this.attrs, attrs)) {\n      if (this.dom) {\n        this.prevAttrs = this.attrs;\n        this.markDirty();\n      }\n\n      this.attrs = attrs;\n    }\n  }\n\n  append(child, openStart) {\n    joinInlineInto(this, child, openStart);\n  } // Only called when building a line view in ContentBuilder\n\n\n  addLineDeco(deco) {\n    let attrs = deco.spec.attributes,\n        cls = deco.spec.class;\n    if (attrs) this.attrs = combineAttrs(attrs, this.attrs || {});\n    if (cls) this.attrs = combineAttrs({\n      class: cls\n    }, this.attrs || {});\n  }\n\n  domAtPos(pos) {\n    return inlineDOMAtPos(this.dom, this.children, pos);\n  }\n\n  reuseDOM(node) {\n    if (node.nodeName == \"DIV\") {\n      this.setDOM(node);\n      this.dirty |= 4\n      /* Attrs */\n      | 2\n      /* Node */\n      ;\n    }\n  }\n\n  sync(track) {\n    var _a;\n\n    if (!this.dom) {\n      this.setDOM(document.createElement(\"div\"));\n      this.dom.className = \"cm-line\";\n      this.prevAttrs = this.attrs ? null : undefined;\n    } else if (this.dirty & 4\n    /* Attrs */\n    ) {\n      clearAttributes(this.dom);\n      this.dom.className = \"cm-line\";\n      this.prevAttrs = this.attrs ? null : undefined;\n    }\n\n    if (this.prevAttrs !== undefined) {\n      updateAttrs(this.dom, this.prevAttrs, this.attrs);\n      this.dom.classList.add(\"cm-line\");\n      this.prevAttrs = undefined;\n    }\n\n    super.sync(track);\n    let last = this.dom.lastChild;\n\n    while (last && ContentView.get(last) instanceof MarkView) last = last.lastChild;\n\n    if (!last || last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false && (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n      let hack = document.createElement(\"BR\");\n      hack.cmIgnore = true;\n      this.dom.appendChild(hack);\n    }\n  }\n\n  measureTextSize() {\n    if (this.children.length == 0 || this.length > 20) return null;\n    let totalWidth = 0;\n\n    for (let child of this.children) {\n      if (!(child instanceof TextView)) return null;\n      let rects = clientRectsFor(child.dom);\n      if (rects.length != 1) return null;\n      totalWidth += rects[0].width;\n    }\n\n    return {\n      lineHeight: this.dom.getBoundingClientRect().height,\n      charWidth: totalWidth / this.length\n    };\n  }\n\n  coordsAt(pos, side) {\n    return coordsInChildren(this, pos, side);\n  }\n\n  become(_other) {\n    return false;\n  }\n\n  get type() {\n    return BlockType.Text;\n  }\n\n  static find(docView, pos) {\n    for (let i = 0, off = 0; i < docView.children.length; i++) {\n      let block = docView.children[i],\n          end = off + block.length;\n\n      if (end >= pos) {\n        if (block instanceof LineView) return block;\n        if (end > pos) break;\n      }\n\n      off = end + block.breakAfter;\n    }\n\n    return null;\n  }\n\n}\n\nclass BlockWidgetView extends ContentView {\n  constructor(widget, length, type) {\n    super();\n    this.widget = widget;\n    this.length = length;\n    this.type = type;\n    this.breakAfter = 0;\n  }\n\n  merge(from, to, source, _takeDeco, openStart, openEnd) {\n    if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) || from > 0 && openStart <= 0 || to < this.length && openEnd <= 0)) return false;\n    this.length = from + (source ? source.length : 0) + (this.length - to);\n    return true;\n  }\n\n  domAtPos(pos) {\n    return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n  }\n\n  split(at) {\n    let len = this.length - at;\n    this.length = at;\n    let end = new BlockWidgetView(this.widget, len, this.type);\n    end.breakAfter = this.breakAfter;\n    return end;\n  }\n\n  get children() {\n    return noChildren;\n  }\n\n  sync() {\n    if (!this.dom || !this.widget.updateDOM(this.dom)) {\n      this.setDOM(this.widget.toDOM(this.editorView));\n      this.dom.contentEditable = \"false\";\n    }\n  }\n\n  get overrideDOMText() {\n    return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n  }\n\n  domBoundsAround() {\n    return null;\n  }\n\n  become(other) {\n    if (other instanceof BlockWidgetView && other.type == this.type && other.widget.constructor == this.widget.constructor) {\n      if (!other.widget.eq(this.widget)) this.markDirty(true);\n      this.widget = other.widget;\n      this.length = other.length;\n      this.breakAfter = other.breakAfter;\n      return true;\n    }\n\n    return false;\n  }\n\n  ignoreMutation() {\n    return true;\n  }\n\n  ignoreEvent(event) {\n    return this.widget.ignoreEvent(event);\n  }\n\n  destroy() {\n    super.destroy();\n    if (this.dom) this.widget.destroy(this.dom);\n  }\n\n}\n\nclass ContentBuilder {\n  constructor(doc, pos, end, disallowBlockEffectsBelow) {\n    this.doc = doc;\n    this.pos = pos;\n    this.end = end;\n    this.disallowBlockEffectsBelow = disallowBlockEffectsBelow;\n    this.content = [];\n    this.curLine = null;\n    this.breakAtStart = 0;\n    this.pendingBuffer = 0\n    /* No */\n    ; // Set to false directly after a widget that covers the position after it\n\n    this.atCursorPos = true;\n    this.openStart = -1;\n    this.openEnd = -1;\n    this.text = \"\";\n    this.textOff = 0;\n    this.cursor = doc.iter();\n    this.skip = pos;\n  }\n\n  posCovered() {\n    if (this.content.length == 0) return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n    let last = this.content[this.content.length - 1];\n    return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n  }\n\n  getLine() {\n    if (!this.curLine) {\n      this.content.push(this.curLine = new LineView());\n      this.atCursorPos = true;\n    }\n\n    return this.curLine;\n  }\n\n  flushBuffer(active) {\n    if (this.pendingBuffer) {\n      this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n      this.pendingBuffer = 0\n      /* No */\n      ;\n    }\n  }\n\n  addBlockWidget(view) {\n    this.flushBuffer([]);\n    this.curLine = null;\n    this.content.push(view);\n  }\n\n  finish(openEnd) {\n    if (!openEnd) this.flushBuffer([]);else this.pendingBuffer = 0\n    /* No */\n    ;\n    if (!this.posCovered()) this.getLine();\n  }\n\n  buildText(length, active, openStart) {\n    while (length > 0) {\n      if (this.textOff == this.text.length) {\n        let {\n          value,\n          lineBreak,\n          done\n        } = this.cursor.next(this.skip);\n        this.skip = 0;\n        if (done) throw new Error(\"Ran out of text content when drawing inline views\");\n\n        if (lineBreak) {\n          if (!this.posCovered()) this.getLine();\n          if (this.content.length) this.content[this.content.length - 1].breakAfter = 1;else this.breakAtStart = 1;\n          this.flushBuffer([]);\n          this.curLine = null;\n          length--;\n          continue;\n        } else {\n          this.text = value;\n          this.textOff = 0;\n        }\n      }\n\n      let take = Math.min(this.text.length - this.textOff, length, 512\n      /* Chunk */\n      );\n      this.flushBuffer(active.slice(0, openStart));\n      this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n      this.atCursorPos = true;\n      this.textOff += take;\n      length -= take;\n      openStart = 0;\n    }\n  }\n\n  span(from, to, active, openStart) {\n    this.buildText(to - from, active, openStart);\n    this.pos = to;\n    if (this.openStart < 0) this.openStart = openStart;\n  }\n\n  point(from, to, deco, active, openStart) {\n    let len = to - from;\n\n    if (deco instanceof PointDecoration) {\n      if (deco.block) {\n        let {\n          type\n        } = deco;\n        if (type == BlockType.WidgetAfter && !this.posCovered()) this.getLine();\n        this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n      } else {\n        let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide);\n        let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length && (from < to || deco.startSide > 0);\n        let cursorAfter = !view.isEditable && (from < to || deco.startSide <= 0);\n        let line = this.getLine();\n        if (this.pendingBuffer == 2\n        /* IfCursor */\n        && !cursorBefore) this.pendingBuffer = 0\n        /* No */\n        ;\n        this.flushBuffer(active);\n\n        if (cursorBefore) {\n          line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n          openStart = active.length + Math.max(0, openStart - active.length);\n        }\n\n        line.append(wrapMarks(view, active), openStart);\n        this.atCursorPos = cursorAfter;\n        this.pendingBuffer = !cursorAfter ? 0\n        /* No */\n        : from < to ? 1\n        /* Yes */\n        : 2\n        /* IfCursor */\n        ;\n      }\n    } else if (this.doc.lineAt(this.pos).from == this.pos) {\n      // Line decoration\n      this.getLine().addLineDeco(deco);\n    }\n\n    if (len) {\n      // Advance the iterator past the replaced content\n      if (this.textOff + len <= this.text.length) {\n        this.textOff += len;\n      } else {\n        this.skip += len - (this.text.length - this.textOff);\n        this.text = \"\";\n        this.textOff = 0;\n      }\n\n      this.pos = to;\n    }\n\n    if (this.openStart < 0) this.openStart = openStart;\n  }\n\n  filterPoint(from, to, value, index) {\n    if (index >= this.disallowBlockEffectsBelow || !(value instanceof PointDecoration)) return true;\n    if (value.block) throw new RangeError(\"Block decorations may not be specified via plugins\");\n    return to <= this.doc.lineAt(this.pos).to;\n  }\n\n  static build(text, from, to, decorations, pluginDecorationLength) {\n    let builder = new ContentBuilder(text, from, to, pluginDecorationLength);\n    builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n    if (builder.openStart < 0) builder.openStart = builder.openEnd;\n    builder.finish(builder.openEnd);\n    return builder;\n  }\n\n}\n\nfunction wrapMarks(view, active) {\n  for (let mark of active) view = new MarkView(mark, [view], view.length);\n\n  return view;\n}\n\nclass NullWidget extends WidgetType {\n  constructor(tag) {\n    super();\n    this.tag = tag;\n  }\n\n  eq(other) {\n    return other.tag == this.tag;\n  }\n\n  toDOM() {\n    return document.createElement(this.tag);\n  }\n\n  updateDOM(elt) {\n    return elt.nodeName.toLowerCase() == this.tag;\n  }\n\n}\n\nconst none = [];\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define(); // FIXME remove\n\nconst scrollTo = /*@__PURE__*/StateEffect.define({\n  map: (range, changes) => range.map(changes)\n}); // FIXME remove\n\nconst centerOn = /*@__PURE__*/StateEffect.define({\n  map: (range, changes) => range.map(changes)\n});\n\nclass ScrollTarget {\n  constructor(range) {\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"nearest\";\n    let x = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"nearest\";\n    let yMargin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n    let xMargin = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 5;\n    this.range = range;\n    this.y = y;\n    this.x = x;\n    this.yMargin = yMargin;\n    this.xMargin = xMargin;\n  }\n\n  map(changes) {\n    return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n  }\n\n}\n\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({\n  map: (t, ch) => t.map(ch)\n});\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\n\nfunction logException(state, exception, context) {\n  let handler = state.facet(exceptionSink);\n  if (handler.length) handler[0](exception);else if (window.onerror) window.onerror(String(exception), context, undefined, undefined, exception);else if (context) console.error(context + \":\", exception);else console.error(exception);\n}\n\nconst editable = /*@__PURE__*/Facet.define({\n  combine: values => values.length ? values[0] : true\n});\n/**\nUsed to [declare](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide) which\n[fields](https://codemirror.net/6/docs/ref/#view.PluginValue) a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin)\nprovides.\n*/\n\nclass PluginFieldProvider {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  @internal\n  */\n  field,\n  /**\n  @internal\n  */\n  get) {\n    this.field = field;\n    this.get = get;\n  }\n\n}\n/**\nPlugin fields are a mechanism for allowing plugins to provide\nvalues that can be retrieved through the\n[`pluginField`](https://codemirror.net/6/docs/ref/#view.EditorView.pluginField) view method.\n*/\n\n\nclass PluginField {\n  /**\n  Create a [provider](https://codemirror.net/6/docs/ref/#view.PluginFieldProvider) for this field,\n  to use with a plugin's [provide](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide)\n  option.\n  */\n  from(get) {\n    return new PluginFieldProvider(this, get);\n  }\n  /**\n  Define a new plugin field.\n  */\n\n\n  static define() {\n    return new PluginField();\n  }\n\n}\n/**\nThis field can be used by plugins to provide\n[decorations](https://codemirror.net/6/docs/ref/#view.Decoration).\n\n**Note**: For reasons of data flow (plugins are only updated\nafter the viewport is computed), decorations produced by plugins\nare _not_ taken into account when predicting the vertical layout\nstructure of the editor. They **must not** introduce block\nwidgets (that will raise an error) or replacing decorations that\ncover line breaks (these will be ignored if they occur). Such\ndecorations, or others that cause a large amount of vertical\nsize shift compared to the undecorated content, should be\nprovided through the state-level [`decorations`\nfacet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) instead.\n*/\n\n\nPluginField.decorations = /*@__PURE__*/PluginField.define();\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\n\nPluginField.atomicRanges = /*@__PURE__*/PluginField.define();\n/**\nPlugins can provide additional scroll margins (space around the\nsides of the scrolling element that should be considered\ninvisible) through this field. This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\n\nPluginField.scrollMargins = /*@__PURE__*/PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\n\nclass ViewPlugin {\n  constructor(\n  /**\n  @internal\n  */\n  id,\n  /**\n  @internal\n  */\n  create,\n  /**\n  @internal\n  */\n  fields) {\n    this.id = id;\n    this.create = create;\n    this.fields = fields;\n    this.extension = viewPlugin.of(this);\n  }\n  /**\n  Define a plugin from a constructor function that creates the\n  plugin's value, given an editor view.\n  */\n\n\n  static define(create, spec) {\n    let {\n      eventHandlers,\n      provide,\n      decorations\n    } = spec || {};\n    let fields = [];\n    if (provide) for (let provider of Array.isArray(provide) ? provide : [provide]) fields.push(provider);\n    if (eventHandlers) fields.push(domEventHandlers.from(value => ({\n      plugin: value,\n      handlers: eventHandlers\n    })));\n    if (decorations) fields.push(PluginField.decorations.from(decorations));\n    return new ViewPlugin(nextPluginID++, create, fields);\n  }\n  /**\n  Create a plugin for a class whose constructor takes a single\n  editor view as argument.\n  */\n\n\n  static fromClass(cls, spec) {\n    return ViewPlugin.define(view => new cls(view), spec);\n  }\n\n}\n\nconst domEventHandlers = /*@__PURE__*/PluginField.define();\n\nclass PluginInstance {\n  constructor(spec) {\n    this.spec = spec; // When starting an update, all plugins have this field set to the\n    // update object, indicating they need to be updated. When finished\n    // updating, it is set to `false`. Retrieving a plugin that needs to\n    // be updated with `view.plugin` forces an eager update.\n\n    this.mustUpdate = null; // This is null when the plugin is initially created, but\n    // initialized on the first update.\n\n    this.value = null;\n  }\n\n  takeField(type, target) {\n    if (this.spec) for (let {\n      field,\n      get\n    } of this.spec.fields) if (field == type) target.push(get(this.value));\n  }\n\n  update(view) {\n    if (!this.value) {\n      if (this.spec) {\n        try {\n          this.value = this.spec.create(view);\n        } catch (e) {\n          logException(view.state, e, \"CodeMirror plugin crashed\");\n          this.deactivate();\n        }\n      }\n    } else if (this.mustUpdate) {\n      let update = this.mustUpdate;\n      this.mustUpdate = null;\n\n      if (this.value.update) {\n        try {\n          this.value.update(update);\n        } catch (e) {\n          logException(update.state, e, \"CodeMirror plugin crashed\");\n          if (this.value.destroy) try {\n            this.value.destroy();\n          } catch (_) {}\n          this.deactivate();\n        }\n      }\n    }\n\n    return this;\n  }\n\n  destroy(view) {\n    var _a;\n\n    if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n      try {\n        this.value.destroy();\n      } catch (e) {\n        logException(view.state, e, \"CodeMirror plugin crashed\");\n      }\n    }\n  }\n\n  deactivate() {\n    this.spec = this.value = null;\n  }\n\n}\n\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define(); // Provide decorations\n\nconst decorations = /*@__PURE__*/Facet.define();\nconst styleModule = /*@__PURE__*/Facet.define();\n\nclass ChangedRange {\n  constructor(fromA, toA, fromB, toB) {\n    this.fromA = fromA;\n    this.toA = toA;\n    this.fromB = fromB;\n    this.toB = toB;\n  }\n\n  join(other) {\n    return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n  }\n\n  addToSet(set) {\n    let i = set.length,\n        me = this;\n\n    for (; i > 0; i--) {\n      let range = set[i - 1];\n      if (range.fromA > me.toA) continue;\n      if (range.toA < me.fromA) break;\n      me = me.join(range);\n      set.splice(i - 1, 1);\n    }\n\n    set.splice(i, 0, me);\n    return set;\n  }\n\n  static extendWithRanges(diff, ranges) {\n    if (ranges.length == 0) return diff;\n    let result = [];\n\n    for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n      let next = dI == diff.length ? null : diff[dI],\n          off = posA - posB;\n      let end = next ? next.fromB : 1e9;\n\n      while (rI < ranges.length && ranges[rI] < end) {\n        let from = ranges[rI],\n            to = ranges[rI + 1];\n        let fromB = Math.max(posB, from),\n            toB = Math.min(end, to);\n        if (fromB <= toB) new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n        if (to > end) break;else rI += 2;\n      }\n\n      if (!next) return result;\n      new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n      posA = next.toA;\n      posB = next.toB;\n    }\n  }\n\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\n\n\nclass ViewUpdate {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  The editor view that the update is associated with.\n  */\n  view,\n  /**\n  The new editor state.\n  */\n  state) {\n    let transactions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : none;\n    this.view = view;\n    this.state = state;\n    this.transactions = transactions;\n    /**\n    @internal\n    */\n\n    this.flags = 0;\n    this.startState = view.state;\n    this.changes = ChangeSet.empty(this.startState.doc.length);\n\n    for (let tr of transactions) this.changes = this.changes.compose(tr.changes);\n\n    let changedRanges = [];\n    this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n    this.changedRanges = changedRanges;\n    let focus = view.hasFocus;\n\n    if (focus != view.inputState.notifiedFocused) {\n      view.inputState.notifiedFocused = focus;\n      this.flags |= 1\n      /* Focus */\n      ;\n    }\n  }\n  /**\n  Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n  [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n  update.\n  */\n\n\n  get viewportChanged() {\n    return (this.flags & 4\n    /* Viewport */\n    ) > 0;\n  }\n  /**\n  Indicates whether the height of an element in the editor changed\n  in this update.\n  */\n\n\n  get heightChanged() {\n    return (this.flags & 2\n    /* Height */\n    ) > 0;\n  }\n  /**\n  Returns true when the document was modified or the size of the\n  editor, or elements within the editor, changed.\n  */\n\n\n  get geometryChanged() {\n    return this.docChanged || (this.flags & (8\n    /* Geometry */\n    | 2\n    /* Height */\n    )) > 0;\n  }\n  /**\n  True when this update indicates a focus change.\n  */\n\n\n  get focusChanged() {\n    return (this.flags & 1\n    /* Focus */\n    ) > 0;\n  }\n  /**\n  Whether the document changed in this update.\n  */\n\n\n  get docChanged() {\n    return !this.changes.empty;\n  }\n  /**\n  Whether the selection was explicitly set in this update.\n  */\n\n\n  get selectionSet() {\n    return this.transactions.some(tr => tr.selection);\n  }\n  /**\n  @internal\n  */\n\n\n  get empty() {\n    return this.flags == 0 && this.transactions.length == 0;\n  }\n\n}\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\n\n\nvar Direction = /*@__PURE__*/function (Direction) {\n  // (These are chosen to match the base levels, in bidi algorithm\n  // terms, of spans in that direction.)\n\n  /**\n  Left-to-right.\n  */\n  Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n  /**\n  Right-to-left.\n  */\n\n  Direction[Direction[\"RTL\"] = 1] = \"RTL\";\n  return Direction;\n}(Direction || (Direction = {}));\n\nconst LTR = Direction.LTR,\n      RTL = Direction.RTL; // Decode a string with each type encoded as log2(type)\n\nfunction dec(str) {\n  let result = [];\n\n  for (let i = 0; i < str.length; i++) result.push(1 << +str[i]);\n\n  return result;\n} // Character types for codepoints 0 to 0xf8\n\n\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\"); // Character types for codepoints 0x600 to 0x6f9\n\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null),\n      BracketStack = []; // There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\n\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n  let l = /*@__PURE__*/p.charCodeAt(0),\n      r = /*@__PURE__*/p.charCodeAt(1);\n  Brackets[l] = r;\n  Brackets[r] = -l;\n}\n\nfunction charType(ch) {\n  return ch <= 0xf7 ? LowTypes[ch] : 0x590 <= ch && ch <= 0x5f4 ? 2\n  /* R */\n  : 0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] : 0x6ee <= ch && ch <= 0x8ac ? 4\n  /* AL */\n  : 0x2000 <= ch && ch <= 0x200b ? 256\n  /* NI */\n  : ch == 0x200c ? 256\n  /* NI */\n  : 1\n  /* L */\n  ;\n}\n\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\n\nclass BidiSpan {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  The start of the span (relative to the start of the line).\n  */\n  from,\n  /**\n  The end of the span.\n  */\n  to,\n  /**\n  The [\"bidi\n  level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n  of the span (in this context, 0 means\n  left-to-right, 1 means right-to-left, 2 means left-to-right\n  number inside right-to-left text).\n  */\n  level) {\n    this.from = from;\n    this.to = to;\n    this.level = level;\n  }\n  /**\n  The direction of this span.\n  */\n\n\n  get dir() {\n    return this.level % 2 ? RTL : LTR;\n  }\n  /**\n  @internal\n  */\n\n\n  side(end, dir) {\n    return this.dir == dir == end ? this.to : this.from;\n  }\n  /**\n  @internal\n  */\n\n\n  static find(order, index, level, assoc) {\n    let maybe = -1;\n\n    for (let i = 0; i < order.length; i++) {\n      let span = order[i];\n\n      if (span.from <= index && span.to >= index) {\n        if (span.level == level) return i; // When multiple spans match, if assoc != 0, take the one that\n        // covers that side, otherwise take the one with the minimum\n        // level.\n\n        if (maybe < 0 || (assoc != 0 ? assoc < 0 ? span.from < index : span.to > index : order[maybe].level > span.level)) maybe = i;\n      }\n    }\n\n    if (maybe < 0) throw new RangeError(\"Index out of range\");\n    return maybe;\n  }\n\n} // Reused array of character types\n\n\nconst types = [];\n\nfunction computeOrder(line, direction) {\n  let len = line.length,\n      outerType = direction == LTR ? 1\n  /* L */\n  : 2\n  /* R */\n  ,\n      oppositeType = direction == LTR ? 2\n  /* R */\n  : 1\n  /* L */\n  ;\n  if (!line || outerType == 1\n  /* L */\n  && !BidiRE.test(line)) return trivialOrder(len); // W1. Examine each non-spacing mark (NSM) in the level run, and\n  // change the type of the NSM to the type of the previous\n  // character. If the NSM is at the start of the level run, it will\n  // get the type of sor.\n  // W2. Search backwards from each instance of a European number\n  // until the first strong type (R, L, AL, or sor) is found. If an\n  // AL is found, change the type of the European number to Arabic\n  // number.\n  // W3. Change all ALs to R.\n  // (Left after this: L, R, EN, AN, ET, CS, NI)\n\n  for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n    let type = charType(line.charCodeAt(i));\n    if (type == 512\n    /* NSM */\n    ) type = prev;else if (type == 8\n    /* EN */\n    && prevStrong == 4\n    /* AL */\n    ) type = 16\n    /* AN */\n    ;\n    types[i] = type == 4\n    /* AL */\n    ? 2\n    /* R */\n    : type;\n    if (type & 7\n    /* Strong */\n    ) prevStrong = type;\n    prev = type;\n  } // W5. A sequence of European terminators adjacent to European\n  // numbers changes to all European numbers.\n  // W6. Otherwise, separators and terminators change to Other\n  // Neutral.\n  // W7. Search backwards from each instance of a European number\n  // until the first strong type (R, L, or sor) is found. If an L is\n  // found, then change the type of the European number to L.\n  // (Left after this: L, R, EN+AN, NI)\n\n\n  for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n    let type = types[i];\n\n    if (type == 128\n    /* CS */\n    ) {\n      if (i < len - 1 && prev == types[i + 1] && prev & 24\n      /* Num */\n      ) type = types[i] = prev;else types[i] = 256\n      /* NI */\n      ;\n    } else if (type == 64\n    /* ET */\n    ) {\n      let end = i + 1;\n\n      while (end < len && types[end] == 64\n      /* ET */\n      ) end++;\n\n      let replace = i && prev == 8\n      /* EN */\n      || end < len && types[end] == 8\n      /* EN */\n      ? prevStrong == 1\n      /* L */\n      ? 1\n      /* L */\n      : 8\n      /* EN */\n      : 256\n      /* NI */\n      ;\n\n      for (let j = i; j < end; j++) types[j] = replace;\n\n      i = end - 1;\n    } else if (type == 8\n    /* EN */\n    && prevStrong == 1\n    /* L */\n    ) {\n      types[i] = 1\n      /* L */\n      ;\n    }\n\n    prev = type;\n    if (type & 7\n    /* Strong */\n    ) prevStrong = type;\n  } // N0. Process bracket pairs in an isolating run sequence\n  // sequentially in the logical order of the text positions of the\n  // opening paired brackets using the logic given below. Within this\n  // scope, bidirectional types EN and AN are treated as R.\n\n\n  for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n    // Keeps [startIndex, type, strongSeen] triples for each open\n    // bracket on BracketStack.\n    if (br = Brackets[ch = line.charCodeAt(i)]) {\n      if (br < 0) {\n        // Closing bracket\n        for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n          if (BracketStack[sJ + 1] == -br) {\n            let flags = BracketStack[sJ + 2];\n            let type = flags & 2\n            /* EmbedInside */\n            ? outerType : !(flags & 4\n            /* OppositeInside */\n            ) ? 0 : flags & 1\n            /* OppositeBefore */\n            ? oppositeType : outerType;\n            if (type) types[i] = types[BracketStack[sJ]] = type;\n            sI = sJ;\n            break;\n          }\n        }\n      } else if (BracketStack.length == 189\n      /* MaxDepth */\n      ) {\n        break;\n      } else {\n        BracketStack[sI++] = i;\n        BracketStack[sI++] = ch;\n        BracketStack[sI++] = context;\n      }\n    } else if ((type = types[i]) == 2\n    /* R */\n    || type == 1\n    /* L */\n    ) {\n      let embed = type == outerType;\n      context = embed ? 0 : 1\n      /* OppositeBefore */\n      ;\n\n      for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n        let cur = BracketStack[sJ + 2];\n        if (cur & 2\n        /* EmbedInside */\n        ) break;\n\n        if (embed) {\n          BracketStack[sJ + 2] |= 2\n          /* EmbedInside */\n          ;\n        } else {\n          if (cur & 4\n          /* OppositeInside */\n          ) break;\n          BracketStack[sJ + 2] |= 4\n          /* OppositeInside */\n          ;\n        }\n      }\n    }\n  } // N1. A sequence of neutrals takes the direction of the\n  // surrounding strong text if the text on both sides has the same\n  // direction. European and Arabic numbers act as if they were R in\n  // terms of their influence on neutrals. Start-of-level-run (sor)\n  // and end-of-level-run (eor) are used at level run boundaries.\n  // N2. Any remaining neutrals take the embedding direction.\n  // (Left after this: L, R, EN+AN)\n\n\n  for (let i = 0; i < len; i++) {\n    if (types[i] == 256\n    /* NI */\n    ) {\n      let end = i + 1;\n\n      while (end < len && types[end] == 256\n      /* NI */\n      ) end++;\n\n      let beforeL = (i ? types[i - 1] : outerType) == 1\n      /* L */\n      ;\n      let afterL = (end < len ? types[end] : outerType) == 1\n      /* L */\n      ;\n      let replace = beforeL == afterL ? beforeL ? 1\n      /* L */\n      : 2\n      /* R */\n      : outerType;\n\n      for (let j = i; j < end; j++) types[j] = replace;\n\n      i = end - 1;\n    }\n  } // Here we depart from the documented algorithm, in order to avoid\n  // building up an actual levels array. Since there are only three\n  // levels (0, 1, 2) in an implementation that doesn't take\n  // explicit embedding into account, we can build up the order on\n  // the fly, without following the level-based algorithm.\n\n\n  let order = [];\n\n  if (outerType == 1\n  /* L */\n  ) {\n    for (let i = 0; i < len;) {\n      let start = i,\n          rtl = types[i++] != 1\n      /* L */\n      ;\n\n      while (i < len && rtl == (types[i] != 1\n      /* L */\n      )) i++;\n\n      if (rtl) {\n        for (let j = i; j > start;) {\n          let end = j,\n              l = types[--j] != 2\n          /* R */\n          ;\n\n          while (j > start && l == (types[j - 1] != 2\n          /* R */\n          )) j--;\n\n          order.push(new BidiSpan(j, end, l ? 2 : 1));\n        }\n      } else {\n        order.push(new BidiSpan(start, i, 0));\n      }\n    }\n  } else {\n    for (let i = 0; i < len;) {\n      let start = i,\n          rtl = types[i++] == 2\n      /* R */\n      ;\n\n      while (i < len && rtl == (types[i] == 2\n      /* R */\n      )) i++;\n\n      order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n    }\n  }\n\n  return order;\n}\n\nfunction trivialOrder(length) {\n  return [new BidiSpan(0, length, 0)];\n}\n\nlet movedOver = \"\";\n\nfunction moveVisually(line, order, dir, start, forward) {\n  var _a;\n\n  let startIndex = start.head - line.from,\n      spanI = -1;\n\n  if (startIndex == 0) {\n    if (!forward || !line.length) return null;\n\n    if (order[0].level != dir) {\n      startIndex = order[0].side(false, dir);\n      spanI = 0;\n    }\n  } else if (startIndex == line.length) {\n    if (forward) return null;\n    let last = order[order.length - 1];\n\n    if (last.level != dir) {\n      startIndex = last.side(true, dir);\n      spanI = order.length - 1;\n    }\n  }\n\n  if (spanI < 0) spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n  let span = order[spanI]; // End of span. (But not end of line--that was checked for above.)\n\n  if (startIndex == span.side(forward, dir)) {\n    span = order[spanI += forward ? 1 : -1];\n    startIndex = span.side(!forward, dir);\n  }\n\n  let indexForward = forward == (span.dir == dir);\n  let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n  movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n  if (nextIndex != span.side(forward, dir)) return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n  let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n  if (!nextSpan && span.level != dir) return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n  if (nextSpan && nextSpan.level < span.level) return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n  return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nclass DOMReader {\n  constructor(points, view) {\n    this.points = points;\n    this.view = view;\n    this.text = \"\";\n    this.lineBreak = view.state.lineBreak;\n  }\n\n  readRange(start, end) {\n    if (!start) return this;\n    let parent = start.parentNode;\n\n    for (let cur = start;;) {\n      this.findPointBefore(parent, cur);\n      this.readNode(cur);\n      let next = cur.nextSibling;\n      if (next == end) break;\n      let view = ContentView.get(cur),\n          nextView = ContentView.get(next);\n      if (view && nextView ? view.breakAfter : (view ? view.breakAfter : isBlockElement(cur)) || isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore)) this.text += this.lineBreak;\n      cur = next;\n    }\n\n    this.findPointBefore(parent, end);\n    return this;\n  }\n\n  readTextNode(node) {\n    var _a, _b;\n\n    let text = node.nodeValue;\n    if (/^\\u200b/.test(text) && ((_a = node.previousSibling) === null || _a === void 0 ? void 0 : _a.contentEditable) == \"false\") text = text.slice(1);\n    if (/\\u200b$/.test(text) && ((_b = node.nextSibling) === null || _b === void 0 ? void 0 : _b.contentEditable) == \"false\") text = text.slice(0, text.length - 1);\n    return text;\n  }\n\n  readNode(node) {\n    if (node.cmIgnore) return;\n    let view = ContentView.get(node);\n    let fromView = view && view.overrideDOMText;\n    let text;\n    if (fromView != null) text = fromView.sliceString(0, undefined, this.lineBreak);else if (node.nodeType == 3) text = this.readTextNode(node);else if (node.nodeName == \"BR\") text = node.nextSibling ? this.lineBreak : \"\";else if (node.nodeType == 1) this.readRange(node.firstChild, null);\n\n    if (text != null) {\n      this.findPointIn(node, text.length);\n      this.text += text; // Chrome inserts two newlines when pressing shift-enter at the\n      // end of a line. This drops one of those.\n\n      if (browser.chrome && this.view.inputState.lastKeyCode == 13 && !node.nextSibling && /\\n\\n$/.test(this.text)) this.text = this.text.slice(0, -1);\n    }\n  }\n\n  findPointBefore(node, next) {\n    for (let point of this.points) if (point.node == node && node.childNodes[point.offset] == next) point.pos = this.text.length;\n  }\n\n  findPointIn(node, maxLen) {\n    for (let point of this.points) if (point.node == node) point.pos = this.text.length + Math.min(point.offset, maxLen);\n  }\n\n}\n\nfunction isBlockElement(node) {\n  return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\n\nclass DOMPoint {\n  constructor(node, offset) {\n    this.node = node;\n    this.offset = offset;\n    this.pos = -1;\n  }\n\n}\n\nclass DocView extends ContentView {\n  constructor(view) {\n    super();\n    this.view = view;\n    this.compositionDeco = Decoration.none;\n    this.decorations = [];\n    this.pluginDecorationLength = 0; // Track a minimum width for the editor. When measuring sizes in\n    // measureVisibleLineHeights, this is updated to point at the width\n    // of a given element and its extent in the document. When a change\n    // happens in that range, these are reset. That way, once we've seen\n    // a line/element of a given length, we keep the editor wide enough\n    // to fit at least that element, until it is changed, at which point\n    // we forget it again.\n\n    this.minWidth = 0;\n    this.minWidthFrom = 0;\n    this.minWidthTo = 0; // Track whether the DOM selection was set in a lossy way, so that\n    // we don't mess it up when reading it back it\n\n    this.impreciseAnchor = null;\n    this.impreciseHead = null;\n    this.forceSelection = false; // Used by the resize observer to ignore resizes that we caused\n    // ourselves\n\n    this.lastUpdate = Date.now();\n    this.setDOM(view.contentDOM);\n    this.children = [new LineView()];\n    this.children[0].setParent(this);\n    this.updateDeco();\n    this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n  }\n\n  get root() {\n    return this.view.root;\n  }\n\n  get editorView() {\n    return this.view;\n  }\n\n  get length() {\n    return this.view.state.doc.length;\n  } // Update the document view to a given state. scrollIntoView can be\n  // used as a hint to compute a new viewport that includes that\n  // position, if we know the editor is going to scroll that position\n  // into view.\n\n\n  update(update) {\n    let changedRanges = update.changedRanges;\n\n    if (this.minWidth > 0 && changedRanges.length) {\n      if (!changedRanges.every(_ref => {\n        let {\n          fromA,\n          toA\n        } = _ref;\n        return toA < this.minWidthFrom || fromA > this.minWidthTo;\n      })) {\n        this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n      } else {\n        this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n        this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n      }\n    }\n\n    if (this.view.inputState.composing < 0) this.compositionDeco = Decoration.none;else if (update.transactions.length || this.dirty) this.compositionDeco = computeCompositionDeco(this.view, update.changes); // When the DOM nodes around the selection are moved to another\n    // parent, Chrome sometimes reports a different selection through\n    // getSelection than the one that it actually shows to the user.\n    // This forces a selection update when lines are joined to work\n    // around that. Issue #54\n\n    if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update && update.state.doc.lines != update.startState.doc.lines) this.forceSelection = true;\n    let prevDeco = this.decorations,\n        deco = this.updateDeco();\n    let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n    changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n\n    if (this.dirty == 0\n    /* Not */\n    && changedRanges.length == 0) {\n      return false;\n    } else {\n      this.updateInner(changedRanges, update.startState.doc.length);\n      if (update.transactions.length) this.lastUpdate = Date.now();\n      return true;\n    }\n  } // Used by update and the constructor do perform the actual DOM\n  // update\n\n\n  updateInner(changes, oldLength) {\n    this.view.viewState.mustMeasureContent = true;\n    this.updateChildren(changes, oldLength);\n    let {\n      observer\n    } = this.view;\n    observer.ignore(() => {\n      // Lock the height during redrawing, since Chrome sometimes\n      // messes with the scroll position during DOM mutation (though\n      // no relayout is triggered and I cannot imagine how it can\n      // recompute the scroll position without a layout)\n      this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n      this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\"; // Chrome will sometimes, when DOM mutations occur directly\n      // around the selection, get confused and report a different\n      // selection from the one it displays (issue #218). This tries\n      // to detect that situation.\n\n      let track = browser.chrome || browser.ios ? {\n        node: observer.selectionRange.focusNode,\n        written: false\n      } : undefined;\n      this.sync(track);\n      this.dirty = 0\n      /* Not */\n      ;\n      if (track && (track.written || observer.selectionRange.focusNode != track.node)) this.forceSelection = true;\n      this.dom.style.height = \"\";\n    });\n    let gaps = [];\n    if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length) for (let child of this.children) if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget) gaps.push(child.dom);\n    observer.updateGaps(gaps);\n  }\n\n  updateChildren(changes, oldLength) {\n    let cursor = this.childCursor(oldLength);\n\n    for (let i = changes.length - 1;; i--) {\n      let next = i >= 0 ? changes[i] : null;\n      if (!next) break;\n      let {\n        fromA,\n        toA,\n        fromB,\n        toB\n      } = next;\n      let {\n        content,\n        breakAtStart,\n        openStart,\n        openEnd\n      } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.pluginDecorationLength);\n      let {\n        i: toI,\n        off: toOff\n      } = cursor.findPos(toA, 1);\n      let {\n        i: fromI,\n        off: fromOff\n      } = cursor.findPos(fromA, -1);\n      replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n    }\n  } // Sync the DOM selection to this.state.selection\n\n\n  updateSelection() {\n    let mustRead = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    let fromPointer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (mustRead) this.view.observer.readSelectionRange();\n    if (!(fromPointer || this.mayControlSelection()) || browser.ios && this.view.inputState.rapidCompositionStart) return;\n    let force = this.forceSelection;\n    this.forceSelection = false;\n    let main = this.view.state.selection.main; // FIXME need to handle the case where the selection falls inside a block range\n\n    let anchor = this.domAtPos(main.anchor);\n    let head = main.empty ? anchor : this.domAtPos(main.head); // Always reset on Firefox when next to an uneditable node to\n    // avoid invisible cursor bugs (#111)\n\n    if (browser.gecko && main.empty && betweenUneditable(anchor)) {\n      let dummy = document.createTextNode(\"\");\n      this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n      anchor = head = new DOMPos(dummy, 0);\n      force = true;\n    }\n\n    let domSel = this.view.observer.selectionRange; // If the selection is already here, or in an equivalent position, don't touch it\n\n    if (force || !domSel.focusNode || !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) || !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n      this.view.observer.ignore(() => {\n        // Chrome Android will hide the virtual keyboard when tapping\n        // inside an uneditable node, and not bring it back when we\n        // move the cursor to its proper position. This tries to\n        // restore the keyboard by cycling focus.\n        if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) && inUneditable(domSel.focusNode, this.dom)) {\n          this.dom.blur();\n          this.dom.focus({\n            preventScroll: true\n          });\n        }\n\n        let rawSel = getSelection(this.root);\n\n        if (main.empty) {\n          // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n          if (browser.gecko) {\n            let nextTo = nextToUneditable(anchor.node, anchor.offset);\n\n            if (nextTo && nextTo != (1\n            /* Before */\n            | 2\n            /* After */\n            )) {\n              let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1\n              /* Before */\n              ? 1 : -1);\n              if (text) anchor = new DOMPos(text, nextTo == 1\n              /* Before */\n              ? 0 : text.nodeValue.length);\n            }\n          }\n\n          rawSel.collapse(anchor.node, anchor.offset);\n          if (main.bidiLevel != null && domSel.cursorBidiLevel != null) domSel.cursorBidiLevel = main.bidiLevel;\n        } else if (rawSel.extend) {\n          // Selection.extend can be used to create an 'inverted' selection\n          // (one where the focus is before the anchor), but not all\n          // browsers support it yet.\n          rawSel.collapse(anchor.node, anchor.offset);\n          rawSel.extend(head.node, head.offset);\n        } else {\n          // Primitive (IE) way\n          let range = document.createRange();\n          if (main.anchor > main.head) [anchor, head] = [head, anchor];\n          range.setEnd(head.node, head.offset);\n          range.setStart(anchor.node, anchor.offset);\n          rawSel.removeAllRanges();\n          rawSel.addRange(range);\n        }\n      });\n      this.view.observer.setSelectionRange(anchor, head);\n    }\n\n    this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n    this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n  }\n\n  enforceCursorAssoc() {\n    if (this.compositionDeco.size) return;\n    let cursor = this.view.state.selection.main;\n    let sel = getSelection(this.root);\n    if (!cursor.empty || !cursor.assoc || !sel.modify) return;\n    let line = LineView.find(this, cursor.head);\n    if (!line) return;\n    let lineStart = line.posAtStart;\n    if (cursor.head == lineStart || cursor.head == lineStart + line.length) return;\n    let before = this.coordsAt(cursor.head, -1),\n        after = this.coordsAt(cursor.head, 1);\n    if (!before || !after || before.bottom > after.top) return;\n    let dom = this.domAtPos(cursor.head + cursor.assoc);\n    sel.collapse(dom.node, dom.offset);\n    sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n  }\n\n  mayControlSelection() {\n    return this.view.state.facet(editable) ? this.root.activeElement == this.dom : hasSelection(this.dom, this.view.observer.selectionRange);\n  }\n\n  nearest(dom) {\n    for (let cur = dom; cur;) {\n      let domView = ContentView.get(cur);\n      if (domView && domView.rootView == this) return domView;\n      cur = cur.parentNode;\n    }\n\n    return null;\n  }\n\n  posFromDOM(node, offset) {\n    let view = this.nearest(node);\n    if (!view) throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n    return view.localPosFromDOM(node, offset) + view.posAtStart;\n  }\n\n  domAtPos(pos) {\n    let {\n      i,\n      off\n    } = this.childCursor().findPos(pos, -1);\n\n    for (; i < this.children.length - 1;) {\n      let child = this.children[i];\n      if (off < child.length || child instanceof LineView) break;\n      i++;\n      off = 0;\n    }\n\n    return this.children[i].domAtPos(off);\n  }\n\n  coordsAt(pos, side) {\n    for (let off = this.length, i = this.children.length - 1;; i--) {\n      let child = this.children[i],\n          start = off - child.breakAfter - child.length;\n      if (pos > start || pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter && (!i || side == 2 || this.children[i - 1].breakAfter || this.children[i - 1].type == BlockType.WidgetBefore && side > -2)) return child.coordsAt(pos - start, side);\n      off = start;\n    }\n  }\n\n  measureVisibleLineHeights() {\n    let result = [],\n        {\n      from,\n      to\n    } = this.view.viewState.viewport;\n    let contentWidth = this.view.contentDOM.clientWidth;\n    let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n    let widest = -1;\n\n    for (let pos = 0, i = 0; i < this.children.length; i++) {\n      let child = this.children[i],\n          end = pos + child.length;\n      if (end > to) break;\n\n      if (pos >= from) {\n        let childRect = child.dom.getBoundingClientRect();\n        result.push(childRect.height);\n\n        if (isWider) {\n          let last = child.dom.lastChild;\n          let rects = last ? clientRectsFor(last) : [];\n\n          if (rects.length) {\n            let rect = rects[rects.length - 1];\n            let width = this.view.textDirection == Direction.LTR ? rect.right - childRect.left : childRect.right - rect.left;\n\n            if (width > widest) {\n              widest = width;\n              this.minWidth = contentWidth;\n              this.minWidthFrom = pos;\n              this.minWidthTo = end;\n            }\n          }\n        }\n      }\n\n      pos = end + child.breakAfter;\n    }\n\n    return result;\n  }\n\n  measureTextSize() {\n    for (let child of this.children) {\n      if (child instanceof LineView) {\n        let measure = child.measureTextSize();\n        if (measure) return measure;\n      }\n    } // If no workable line exists, force a layout of a measurable element\n\n\n    let dummy = document.createElement(\"div\"),\n        lineHeight,\n        charWidth;\n    dummy.className = \"cm-line\";\n    dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n    this.view.observer.ignore(() => {\n      this.dom.appendChild(dummy);\n      let rect = clientRectsFor(dummy.firstChild)[0];\n      lineHeight = dummy.getBoundingClientRect().height;\n      charWidth = rect ? rect.width / 27 : 7;\n      dummy.remove();\n    });\n    return {\n      lineHeight,\n      charWidth\n    };\n  }\n\n  childCursor() {\n    let pos = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.length;\n    // Move back to start of last element when possible, so that\n    // `ChildCursor.findPos` doesn't have to deal with the edge case\n    // of being after the last element.\n    let i = this.children.length;\n    if (i) pos -= this.children[--i].length;\n    return new ChildCursor(this.children, pos, i);\n  }\n\n  computeBlockGapDeco() {\n    let deco = [],\n        vs = this.view.viewState;\n\n    for (let pos = 0, i = 0;; i++) {\n      let next = i == vs.viewports.length ? null : vs.viewports[i];\n      let end = next ? next.from - 1 : this.length;\n\n      if (end > pos) {\n        let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n        deco.push(Decoration.replace({\n          widget: new BlockGapWidget(height),\n          block: true,\n          inclusive: true\n        }).range(pos, end));\n      }\n\n      if (!next) break;\n      pos = next.to + 1;\n    }\n\n    return Decoration.set(deco);\n  }\n\n  updateDeco() {\n    let pluginDecorations = this.view.pluginField(PluginField.decorations);\n    this.pluginDecorationLength = pluginDecorations.length;\n    return this.decorations = [...pluginDecorations, ...this.view.state.facet(decorations), this.compositionDeco, this.computeBlockGapDeco(), this.view.viewState.lineGapDeco];\n  }\n\n  scrollIntoView(target) {\n    let {\n      range\n    } = target;\n    let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1),\n        other;\n    if (!rect) return;\n    if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1))) rect = {\n      left: Math.min(rect.left, other.left),\n      top: Math.min(rect.top, other.top),\n      right: Math.max(rect.right, other.right),\n      bottom: Math.max(rect.bottom, other.bottom)\n    };\n    let mLeft = 0,\n        mRight = 0,\n        mTop = 0,\n        mBottom = 0;\n\n    for (let margins of this.view.pluginField(PluginField.scrollMargins)) if (margins) {\n      let {\n        left,\n        right,\n        top,\n        bottom\n      } = margins;\n      if (left != null) mLeft = Math.max(mLeft, left);\n      if (right != null) mRight = Math.max(mRight, right);\n      if (top != null) mTop = Math.max(mTop, top);\n      if (bottom != null) mBottom = Math.max(mBottom, bottom);\n    }\n\n    let targetRect = {\n      left: rect.left - mLeft,\n      top: rect.top - mTop,\n      right: rect.right + mRight,\n      bottom: rect.bottom + mBottom\n    };\n    scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n  }\n\n}\n\nfunction betweenUneditable(pos) {\n  return pos.node.nodeType == 1 && pos.node.firstChild && (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") && (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\n\nclass BlockGapWidget extends WidgetType {\n  constructor(height) {\n    super();\n    this.height = height;\n  }\n\n  toDOM() {\n    let elt = document.createElement(\"div\");\n    this.updateDOM(elt);\n    return elt;\n  }\n\n  eq(other) {\n    return other.height == this.height;\n  }\n\n  updateDOM(elt) {\n    elt.style.height = this.height + \"px\";\n    return true;\n  }\n\n  get estimatedHeight() {\n    return this.height;\n  }\n\n}\n\nfunction compositionSurroundingNode(view) {\n  let sel = view.observer.selectionRange;\n  let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n  if (!textNode) return null;\n  let cView = view.docView.nearest(textNode);\n  if (!cView) return null;\n\n  if (cView instanceof LineView) {\n    let topNode = textNode;\n\n    while (topNode.parentNode != cView.dom) topNode = topNode.parentNode;\n\n    let prev = topNode.previousSibling;\n\n    while (prev && !ContentView.get(prev)) prev = prev.previousSibling;\n\n    let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    return {\n      from: pos,\n      to: pos,\n      node: topNode,\n      text: textNode\n    };\n  } else {\n    for (;;) {\n      let {\n        parent\n      } = cView;\n      if (!parent) return null;\n      if (parent instanceof LineView) break;\n      cView = parent;\n    }\n\n    let from = cView.posAtStart;\n    return {\n      from,\n      to: from + cView.length,\n      node: cView.dom,\n      text: textNode\n    };\n  }\n}\n\nfunction computeCompositionDeco(view, changes) {\n  let surrounding = compositionSurroundingNode(view);\n  if (!surrounding) return Decoration.none;\n  let {\n    from,\n    to,\n    node,\n    text: textNode\n  } = surrounding;\n  let newFrom = changes.mapPos(from, 1),\n      newTo = Math.max(newFrom, changes.mapPos(to, -1));\n  let {\n    state\n  } = view,\n      text = node.nodeType == 3 ? node.nodeValue : new DOMReader([], view).readRange(node.firstChild, null).text;\n\n  if (newTo - newFrom < text.length) {\n    if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text) newTo = newFrom + text.length;else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text) newFrom = newTo - text.length;else return Decoration.none;\n  } else if (state.sliceDoc(newFrom, newTo) != text) {\n    return Decoration.none;\n  }\n\n  return Decoration.set(Decoration.replace({\n    widget: new CompositionWidget(node, textNode)\n  }).range(newFrom, newTo));\n}\n\nclass CompositionWidget extends WidgetType {\n  constructor(top, text) {\n    super();\n    this.top = top;\n    this.text = text;\n  }\n\n  eq(other) {\n    return this.top == other.top && this.text == other.text;\n  }\n\n  toDOM() {\n    return this.top;\n  }\n\n  ignoreEvent() {\n    return false;\n  }\n\n  get customView() {\n    return CompositionView;\n  }\n\n}\n\nfunction nearbyTextNode(node, offset, side) {\n  for (;;) {\n    if (node.nodeType == 3) return node;\n\n    if (node.nodeType == 1 && offset > 0 && side <= 0) {\n      node = node.childNodes[offset - 1];\n      offset = maxOffset(node);\n    } else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n      node = node.childNodes[offset];\n      offset = 0;\n    } else {\n      return null;\n    }\n  }\n}\n\nfunction nextToUneditable(node, offset) {\n  if (node.nodeType != 1) return 0;\n  return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1\n  /* Before */\n  : 0) | (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2\n  /* After */\n  : 0);\n}\n\nclass DecorationComparator$1 {\n  constructor() {\n    this.changes = [];\n  }\n\n  compareRange(from, to) {\n    addRange(from, to, this.changes);\n  }\n\n  comparePoint(from, to) {\n    addRange(from, to, this.changes);\n  }\n\n}\n\nfunction findChangedDeco(a, b, diff) {\n  let comp = new DecorationComparator$1();\n  RangeSet.compare(a, b, diff, comp);\n  return comp.changes;\n}\n\nfunction inUneditable(node, inside) {\n  for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n    if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction groupAt(state, pos) {\n  let bias = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  let categorize = state.charCategorizer(pos);\n  let line = state.doc.lineAt(pos),\n      linePos = pos - line.from;\n  if (line.length == 0) return EditorSelection.cursor(pos);\n  if (linePos == 0) bias = 1;else if (linePos == line.length) bias = -1;\n  let from = linePos,\n      to = linePos;\n  if (bias < 0) from = findClusterBreak(line.text, linePos, false);else to = findClusterBreak(line.text, linePos);\n  let cat = categorize(line.text.slice(from, to));\n\n  while (from > 0) {\n    let prev = findClusterBreak(line.text, from, false);\n    if (categorize(line.text.slice(prev, from)) != cat) break;\n    from = prev;\n  }\n\n  while (to < line.length) {\n    let next = findClusterBreak(line.text, to);\n    if (categorize(line.text.slice(to, next)) != cat) break;\n    to = next;\n  }\n\n  return EditorSelection.range(from + line.from, to + line.from);\n} // Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\n\n\nfunction getdx(x, rect) {\n  return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\n\nfunction getdy(y, rect) {\n  return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\n\nfunction yOverlap(a, b) {\n  return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\n\nfunction upTop(rect, top) {\n  return top < rect.top ? {\n    top,\n    left: rect.left,\n    right: rect.right,\n    bottom: rect.bottom\n  } : rect;\n}\n\nfunction upBot(rect, bottom) {\n  return bottom > rect.bottom ? {\n    top: rect.top,\n    left: rect.left,\n    right: rect.right,\n    bottom\n  } : rect;\n}\n\nfunction domPosAtCoords(parent, x, y) {\n  let closest, closestRect, closestX, closestY;\n  let above, below, aboveRect, belowRect;\n\n  for (let child = parent.firstChild; child; child = child.nextSibling) {\n    let rects = clientRectsFor(child);\n\n    for (let i = 0; i < rects.length; i++) {\n      let rect = rects[i];\n      if (closestRect && yOverlap(closestRect, rect)) rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n      let dx = getdx(x, rect),\n          dy = getdy(y, rect);\n      if (dx == 0 && dy == 0) return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n\n      if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n        closest = child;\n        closestRect = rect;\n        closestX = dx;\n        closestY = dy;\n      }\n\n      if (dx == 0) {\n        if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n          above = child;\n          aboveRect = rect;\n        } else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n          below = child;\n          belowRect = rect;\n        }\n      } else if (aboveRect && yOverlap(aboveRect, rect)) {\n        aboveRect = upBot(aboveRect, rect.bottom);\n      } else if (belowRect && yOverlap(belowRect, rect)) {\n        belowRect = upTop(belowRect, rect.top);\n      }\n    }\n  }\n\n  if (aboveRect && aboveRect.bottom >= y) {\n    closest = above;\n    closestRect = aboveRect;\n  } else if (belowRect && belowRect.top <= y) {\n    closest = below;\n    closestRect = belowRect;\n  }\n\n  if (!closest) return {\n    node: parent,\n    offset: 0\n  };\n  let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n  if (closest.nodeType == 3) return domPosInText(closest, clipX, y);\n  if (!closestX && closest.contentEditable == \"true\") return domPosAtCoords(closest, clipX, y);\n  let offset = Array.prototype.indexOf.call(parent.childNodes, closest) + (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n  return {\n    node: parent,\n    offset\n  };\n}\n\nfunction domPosInText(node, x, y) {\n  let len = node.nodeValue.length;\n  let closestOffset = -1,\n      closestDY = 1e9,\n      generalSide = 0;\n\n  for (let i = 0; i < len; i++) {\n    let rects = textRange(node, i, i + 1).getClientRects();\n\n    for (let j = 0; j < rects.length; j++) {\n      let rect = rects[j];\n      if (rect.top == rect.bottom) continue;\n      if (!generalSide) generalSide = x - rect.left;\n      let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n\n      if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n        let right = x >= (rect.left + rect.right) / 2,\n            after = right;\n\n        if (browser.chrome || browser.gecko) {\n          // Check for RTL on browsers that support getting client\n          // rects for empty ranges.\n          let rectBefore = textRange(node, i).getBoundingClientRect();\n          if (rectBefore.left == rect.right) after = !right;\n        }\n\n        if (dy <= 0) return {\n          node,\n          offset: i + (after ? 1 : 0)\n        };\n        closestOffset = i + (after ? 1 : 0);\n        closestDY = dy;\n      }\n    }\n  }\n\n  return {\n    node,\n    offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0\n  };\n}\n\nfunction posAtCoords(view, _ref2, precise) {\n  let {\n    x,\n    y\n  } = _ref2;\n  let bias = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : -1;\n\n  var _a;\n\n  let content = view.contentDOM.getBoundingClientRect(),\n      docTop = content.top + view.viewState.paddingTop;\n  let block,\n      {\n    docHeight\n  } = view.viewState;\n  let yOffset = y - docTop;\n  if (yOffset < 0) return 0;\n  if (yOffset > docHeight) return view.state.doc.length; // Scan for a text block near the queried y position\n\n  for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n    block = view.elementAtHeight(yOffset);\n    if (block.type == BlockType.Text) break;\n\n    for (;;) {\n      // Move the y position out of this block\n      yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n      if (yOffset >= 0 && yOffset <= docHeight) break; // If the document consists entirely of replaced widgets, we\n      // won't find a text block, so return 0\n\n      if (bounced) return precise ? null : 0;\n      bounced = true;\n      bias = -bias;\n    }\n  }\n\n  y = docTop + yOffset;\n  let lineStart = block.from; // If this is outside of the rendered viewport, we can't determine a position\n\n  if (lineStart < view.viewport.from) return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n  if (lineStart > view.viewport.to) return view.viewport.to == view.state.doc.length ? view.state.doc.length : precise ? null : posAtCoordsImprecise(view, content, block, x, y); // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n\n  let doc = view.dom.ownerDocument;\n  let root = view.root.elementFromPoint ? view.root : doc;\n  let element = root.elementFromPoint(x, y);\n  if (element && !view.contentDOM.contains(element)) element = null; // If the element is unexpected, clip x at the sides of the content area and try again\n\n  if (!element) {\n    x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n    element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element)) element = null;\n  } // There's visible editor content under the point, so we can try\n  // using caret(Position|Range)FromPoint as a shortcut\n\n\n  let node,\n      offset = -1;\n\n  if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n    if (doc.caretPositionFromPoint) {\n      let pos = doc.caretPositionFromPoint(x, y);\n      if (pos) ({\n        offsetNode: node,\n        offset\n      } = pos);\n    } else if (doc.caretRangeFromPoint) {\n      let range = doc.caretRangeFromPoint(x, y);\n\n      if (range) {\n        ({\n          startContainer: node,\n          startOffset: offset\n        } = range);\n        if (browser.safari && isSuspiciousCaretResult(node, offset, x)) node = undefined;\n      }\n    }\n  } // No luck, do our own (potentially expensive) search\n\n\n  if (!node || !view.docView.dom.contains(node)) {\n    let line = LineView.find(view.docView, lineStart);\n    if (!line) return yOffset > block.top + block.height / 2 ? block.to : block.from;\n    ({\n      node,\n      offset\n    } = domPosAtCoords(line.dom, x, y));\n  }\n\n  return view.docView.posFromDOM(node, offset);\n}\n\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n  let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n\n  if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n    let line = Math.floor((y - block.top) / view.defaultLineHeight);\n    into += line * view.viewState.heightOracle.lineLength;\n  }\n\n  let content = view.state.sliceDoc(block.from, block.to);\n  return block.from + findColumn(content, into, view.state.tabSize);\n} // In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\n\n\nfunction isSuspiciousCaretResult(node, offset, x) {\n  let len;\n  if (node.nodeType != 3 || offset != (len = node.nodeValue.length)) return false;\n\n  for (let next = node.nextSibling; next; next = next.nextSibling) if (next.nodeType != 1 || next.nodeName != \"BR\") return false;\n\n  return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\n\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n  let line = view.state.doc.lineAt(start.head);\n  let coords = !includeWrap || !view.lineWrapping ? null : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n\n  if (coords) {\n    let editorRect = view.dom.getBoundingClientRect();\n    let pos = view.posAtCoords({\n      x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n      y: (coords.top + coords.bottom) / 2\n    });\n    if (pos != null) return EditorSelection.cursor(pos, forward ? -1 : 1);\n  }\n\n  let lineView = LineView.find(view.docView, start.head);\n  let end = lineView ? forward ? lineView.posAtEnd : lineView.posAtStart : forward ? line.to : line.from;\n  return EditorSelection.cursor(end, forward ? -1 : 1);\n}\n\nfunction moveByChar(view, start, forward, by) {\n  let line = view.state.doc.lineAt(start.head),\n      spans = view.bidiSpans(line);\n\n  for (let cur = start, check = null;;) {\n    let next = moveVisually(line, spans, view.textDirection, cur, forward),\n        char = movedOver;\n\n    if (!next) {\n      if (line.number == (forward ? view.state.doc.lines : 1)) return cur;\n      char = \"\\n\";\n      line = view.state.doc.line(line.number + (forward ? 1 : -1));\n      spans = view.bidiSpans(line);\n      next = EditorSelection.cursor(forward ? line.from : line.to);\n    }\n\n    if (!check) {\n      if (!by) return next;\n      check = by(char);\n    } else if (!check(char)) {\n      return cur;\n    }\n\n    cur = next;\n  }\n}\n\nfunction byGroup(view, pos, start) {\n  let categorize = view.state.charCategorizer(pos);\n  let cat = categorize(start);\n  return next => {\n    let nextCat = categorize(next);\n    if (cat == CharCategory.Space) cat = nextCat;\n    return cat == nextCat;\n  };\n}\n\nfunction moveVertically(view, start, forward, distance) {\n  let startPos = start.head,\n      dir = forward ? 1 : -1;\n  if (startPos == (forward ? view.state.doc.length : 0)) return EditorSelection.cursor(startPos, start.assoc);\n  let goal = start.goalColumn,\n      startY;\n  let rect = view.contentDOM.getBoundingClientRect();\n  let startCoords = view.coordsAtPos(startPos),\n      docTop = view.documentTop;\n\n  if (startCoords) {\n    if (goal == null) goal = startCoords.left - rect.left;\n    startY = dir < 0 ? startCoords.top : startCoords.bottom;\n  } else {\n    let line = view.viewState.lineBlockAt(startPos - docTop);\n    if (goal == null) goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n    startY = (dir < 0 ? line.top : line.bottom) + docTop;\n  }\n\n  let resolvedGoal = rect.left + goal;\n  let dist = distance !== null && distance !== void 0 ? distance : view.defaultLineHeight >> 1;\n\n  for (let extra = 0;; extra += 10) {\n    let curY = startY + (dist + extra) * dir;\n    let pos = posAtCoords(view, {\n      x: resolvedGoal,\n      y: curY\n    }, false, dir);\n    if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos)) return EditorSelection.cursor(pos, start.assoc, undefined, goal);\n  }\n}\n\nfunction skipAtoms(view, oldPos, pos) {\n  let atoms = view.pluginField(PluginField.atomicRanges);\n\n  for (;;) {\n    let moved = false;\n\n    for (let set of atoms) {\n      set.between(pos.from - 1, pos.from + 1, (from, to, value) => {\n        if (pos.from > from && pos.from < to) {\n          pos = oldPos.from > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);\n          moved = true;\n        }\n      });\n    }\n\n    if (!moved) return pos;\n  }\n} // This will also be where dragging info and such goes\n\n\nclass InputState {\n  constructor(view) {\n    this.lastKeyCode = 0;\n    this.lastKeyTime = 0; // On iOS, some keys need to have their default behavior happen\n    // (after which we retroactively handle them and reset the DOM) to\n    // avoid messing up the virtual keyboard state.\n\n    this.pendingIOSKey = undefined;\n    this.lastSelectionOrigin = null;\n    this.lastSelectionTime = 0;\n    this.lastEscPress = 0;\n    this.lastContextMenu = 0;\n    this.scrollHandlers = [];\n    this.registeredEvents = [];\n    this.customHandlers = []; // -1 means not in a composition. Otherwise, this counts the number\n    // of changes made during the composition. The count is used to\n    // avoid treating the start state of the composition, before any\n    // changes have been made, as part of the composition.\n\n    this.composing = -1; // Tracks whether the next change should be marked as starting the\n    // composition (null means no composition, true means next is the\n    // first, false means first has already been marked for this\n    // composition)\n\n    this.compositionFirstChange = null;\n    this.compositionEndedAt = 0;\n    this.rapidCompositionStart = false;\n    this.mouseSelection = null;\n\n    for (let type in handlers) {\n      let handler = handlers[type];\n      view.contentDOM.addEventListener(type, event => {\n        if (type == \"keydown\" && this.keydown(view, event)) return;\n        if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event)) return;\n        if (this.mustFlushObserver(event)) view.observer.forceFlush();\n        if (this.runCustomHandlers(type, view, event)) event.preventDefault();else handler(view, event);\n      });\n      this.registeredEvents.push(type);\n    }\n\n    this.notifiedFocused = view.hasFocus;\n    this.ensureHandlers(view); // On Safari adding an input event handler somehow prevents an\n    // issue where the composition vanishes when you press enter.\n\n    if (browser.safari) view.contentDOM.addEventListener(\"input\", () => null);\n  }\n\n  setSelectionOrigin(origin) {\n    this.lastSelectionOrigin = origin;\n    this.lastSelectionTime = Date.now();\n  }\n\n  ensureHandlers(view) {\n    let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n\n    for (let set of handlers) {\n      for (let type in set.handlers) if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n        this.registeredEvents.push(type);\n        view.contentDOM.addEventListener(type, event => {\n          if (!eventBelongsToEditor(view, event)) return;\n          if (this.runCustomHandlers(type, view, event)) event.preventDefault();\n        });\n      }\n    }\n  }\n\n  runCustomHandlers(type, view, event) {\n    for (let set of this.customHandlers) {\n      let handler = set.handlers[type];\n\n      if (handler) {\n        try {\n          if (handler.call(set.plugin, event, view) || event.defaultPrevented) return true;\n        } catch (e) {\n          logException(view.state, e);\n        }\n      }\n    }\n\n    return false;\n  }\n\n  runScrollHandlers(view, event) {\n    for (let set of this.customHandlers) {\n      let handler = set.handlers.scroll;\n\n      if (handler) {\n        try {\n          handler.call(set.plugin, event, view);\n        } catch (e) {\n          logException(view.state, e);\n        }\n      }\n    }\n  }\n\n  keydown(view, event) {\n    // Must always run, even if a custom handler handled the event\n    this.lastKeyCode = event.keyCode;\n    this.lastKeyTime = Date.now();\n    if (this.screenKeyEvent(view, event)) return true; // Chrome for Android usually doesn't fire proper key events, but\n    // occasionally does, usually surrounded by a bunch of complicated\n    // composition changes. When an enter or backspace key event is\n    // seen, hold off on handling DOM events for a bit, and then\n    // dispatch it.\n\n    if (browser.android && browser.chrome && !event.synthetic && (event.keyCode == 13 || event.keyCode == 8)) {\n      view.observer.delayAndroidKey(event.key, event.keyCode);\n      return true;\n    } // Prevent the default behavior of Enter on iOS makes the\n    // virtual keyboard get stuck in the wrong (lowercase)\n    // state. So we let it go through, and then, in\n    // applyDOMChange, notify key handlers of it and reset to\n    // the state they produce.\n\n\n    let pending;\n\n    if (browser.ios && (pending = PendingKeys.find(key => key.keyCode == event.keyCode)) && !(event.ctrlKey || event.altKey || event.metaKey) && !event.synthetic) {\n      this.pendingIOSKey = pending;\n      setTimeout(() => this.flushIOSKey(view), 250);\n      return true;\n    }\n\n    return false;\n  }\n\n  flushIOSKey(view) {\n    let key = this.pendingIOSKey;\n    if (!key) return false;\n    this.pendingIOSKey = undefined;\n    return dispatchKey(view.contentDOM, key.key, key.keyCode);\n  }\n\n  ignoreDuringComposition(event) {\n    if (!/^key/.test(event.type)) return false;\n    if (this.composing > 0) return true; // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n    // On some input method editors (IMEs), the Enter key is used to\n    // confirm character selection. On Safari, when Enter is pressed,\n    // compositionend and keydown events are sometimes emitted in the\n    // wrong order. The key event should still be ignored, even when\n    // it happens after the compositionend event.\n\n    if (browser.safari && Date.now() - this.compositionEndedAt < 500) {\n      this.compositionEndedAt = 0;\n      return true;\n    }\n\n    return false;\n  }\n\n  screenKeyEvent(view, event) {\n    let protectedTab = event.keyCode == 9 && Date.now() < this.lastEscPress + 2000;\n    if (event.keyCode == 27) this.lastEscPress = Date.now();else if (modifierCodes.indexOf(event.keyCode) < 0) this.lastEscPress = 0;\n    return protectedTab;\n  }\n\n  mustFlushObserver(event) {\n    return event.type == \"keydown\" && event.keyCode != 229 || event.type == \"compositionend\" && !browser.ios;\n  }\n\n  startMouseSelection(mouseSelection) {\n    if (this.mouseSelection) this.mouseSelection.destroy();\n    this.mouseSelection = mouseSelection;\n  }\n\n  update(update) {\n    if (this.mouseSelection) this.mouseSelection.update(update);\n    if (update.transactions.length) this.lastKeyCode = this.lastSelectionTime = 0;\n  }\n\n  destroy() {\n    if (this.mouseSelection) this.mouseSelection.destroy();\n  }\n\n}\n\nconst PendingKeys = [{\n  key: \"Backspace\",\n  keyCode: 8,\n  inputType: \"deleteContentBackward\"\n}, {\n  key: \"Enter\",\n  keyCode: 13,\n  inputType: \"insertParagraph\"\n}, {\n  key: \"Delete\",\n  keyCode: 46,\n  inputType: \"deleteContentForward\"\n}]; // Key codes for modifier keys\n\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\n\nclass MouseSelection {\n  constructor(view, startEvent, style, mustSelect) {\n    this.view = view;\n    this.style = style;\n    this.mustSelect = mustSelect;\n    this.lastEvent = startEvent;\n    let doc = view.contentDOM.ownerDocument;\n    doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n    doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n    this.extend = startEvent.shiftKey;\n    this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n    this.dragMove = dragMovesSelection(view, startEvent);\n    this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false; // When clicking outside of the selection, immediately apply the\n    // effect of starting the selection\n\n    if (this.dragging === false) {\n      startEvent.preventDefault();\n      this.select(startEvent);\n    }\n  }\n\n  move(event) {\n    if (event.buttons == 0) return this.destroy();\n    if (this.dragging !== false) return;\n    this.select(this.lastEvent = event);\n  }\n\n  up(event) {\n    if (this.dragging == null) this.select(this.lastEvent);\n    if (!this.dragging) event.preventDefault();\n    this.destroy();\n  }\n\n  destroy() {\n    let doc = this.view.contentDOM.ownerDocument;\n    doc.removeEventListener(\"mousemove\", this.move);\n    doc.removeEventListener(\"mouseup\", this.up);\n    this.view.inputState.mouseSelection = null;\n  }\n\n  select(event) {\n    let selection = this.style.get(event, this.extend, this.multiple);\n    if (this.mustSelect || !selection.eq(this.view.state.selection) || selection.main.assoc != this.view.state.selection.main.assoc) this.view.dispatch({\n      selection,\n      userEvent: \"select.pointer\",\n      scrollIntoView: true\n    });\n    this.mustSelect = false;\n  }\n\n  update(update) {\n    if (update.docChanged && this.dragging) this.dragging = this.dragging.map(update.changes);\n    if (this.style.update(update)) setTimeout(() => this.select(this.lastEvent), 20);\n  }\n\n}\n\nfunction addsSelectionRange(view, event) {\n  let facet = view.state.facet(clickAddsSelectionRange);\n  return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\n\nfunction dragMovesSelection(view, event) {\n  let facet = view.state.facet(dragMovesSelection$1);\n  return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\n\nfunction isInPrimarySelection(view, event) {\n  let {\n    main\n  } = view.state.selection;\n  if (main.empty) return false; // On boundary clicks, check whether the coordinates are inside the\n  // selection's client rectangles\n\n  let sel = getSelection(view.root);\n  if (sel.rangeCount == 0) return true;\n  let rects = sel.getRangeAt(0).getClientRects();\n\n  for (let i = 0; i < rects.length; i++) {\n    let rect = rects[i];\n    if (rect.left <= event.clientX && rect.right >= event.clientX && rect.top <= event.clientY && rect.bottom >= event.clientY) return true;\n  }\n\n  return false;\n}\n\nfunction eventBelongsToEditor(view, event) {\n  if (!event.bubbles) return true;\n  if (event.defaultPrevented) return false;\n\n  for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode) if (!node || node.nodeType == 11 || (cView = ContentView.get(node)) && cView.ignoreEvent(event)) return false;\n\n  return true;\n}\n\nconst handlers = /*@__PURE__*/Object.create(null); // This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\n\nconst brokenClipboardAPI = browser.ie && browser.ie_version < 15 || browser.ios && browser.webkit_version < 604;\n\nfunction capturePaste(view) {\n  let parent = view.dom.parentNode;\n  if (!parent) return;\n  let target = parent.appendChild(document.createElement(\"textarea\"));\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.focus();\n  setTimeout(() => {\n    view.focus();\n    target.remove();\n    doPaste(view, target.value);\n  }, 50);\n}\n\nfunction doPaste(view, input) {\n  let {\n    state\n  } = view,\n      changes,\n      i = 1,\n      text = state.toText(input);\n  let byLine = text.lines == state.selection.ranges.length;\n  let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n\n  if (linewise) {\n    let lastLine = -1;\n    changes = state.changeByRange(range => {\n      let line = state.doc.lineAt(range.from);\n      if (line.from == lastLine) return {\n        range\n      };\n      lastLine = line.from;\n      let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n      return {\n        changes: {\n          from: line.from,\n          insert\n        },\n        range: EditorSelection.cursor(range.from + insert.length)\n      };\n    });\n  } else if (byLine) {\n    changes = state.changeByRange(range => {\n      let line = text.line(i++);\n      return {\n        changes: {\n          from: range.from,\n          to: range.to,\n          insert: line.text\n        },\n        range: EditorSelection.cursor(range.from + line.length)\n      };\n    });\n  } else {\n    changes = state.replaceSelection(text);\n  }\n\n  view.dispatch(changes, {\n    userEvent: \"input.paste\",\n    scrollIntoView: true\n  });\n}\n\nhandlers.keydown = (view, event) => {\n  view.inputState.setSelectionOrigin(\"select\");\n};\n\nlet lastTouch = 0;\n\nhandlers.touchstart = (view, e) => {\n  lastTouch = Date.now();\n  view.inputState.setSelectionOrigin(\"select.pointer\");\n};\n\nhandlers.touchmove = view => {\n  view.inputState.setSelectionOrigin(\"select.pointer\");\n};\n\nhandlers.mousedown = (view, event) => {\n  view.observer.flush();\n  if (lastTouch > Date.now() - 2000 && getClickType(event) == 1) return; // Ignore touch interaction\n\n  let style = null;\n\n  for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n    style = makeStyle(view, event);\n    if (style) break;\n  }\n\n  if (!style && event.button == 0) style = basicMouseSelection(view, event);\n\n  if (style) {\n    let mustFocus = view.root.activeElement != view.contentDOM;\n    if (mustFocus) view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n    view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n  }\n};\n\nfunction rangeForClick(view, pos, bias, type) {\n  if (type == 1) {\n    // Single click\n    return EditorSelection.cursor(pos, bias);\n  } else if (type == 2) {\n    // Double click\n    return groupAt(view.state, pos, bias);\n  } else {\n    // Triple click\n    let visual = LineView.find(view.docView, pos),\n        line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n    let from = visual ? visual.posAtStart : line.from,\n        to = visual ? visual.posAtEnd : line.to;\n    if (to < view.state.doc.length && to == line.to) to++;\n    return EditorSelection.range(from, to);\n  }\n}\n\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\n\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right; // Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\n\n\nfunction findPositionSide(view, pos, x, y) {\n  let line = LineView.find(view.docView, pos);\n  if (!line) return 1;\n  let off = pos - line.posAtStart; // Line boundaries point into the line\n\n  if (off == 0) return 1;\n  if (off == line.length) return -1; // Positions on top of an element point at that element\n\n  let before = line.coordsAt(off, -1);\n  if (before && inside(x, y, before)) return -1;\n  let after = line.coordsAt(off, 1);\n  if (after && inside(x, y, after)) return 1; // This is probably a line wrap point. Pick before if the point is\n  // beside it.\n\n  return before && insideY(y, before) ? -1 : 1;\n}\n\nfunction queryPos(view, event) {\n  let pos = view.posAtCoords({\n    x: event.clientX,\n    y: event.clientY\n  }, false);\n  return {\n    pos,\n    bias: findPositionSide(view, pos, event.clientX, event.clientY)\n  };\n}\n\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null,\n    lastMouseDownCount = 0,\n    lastMouseDownTime = 0;\n\nfunction getClickType(event) {\n  if (!BadMouseDetail) return event.detail;\n  let last = lastMouseDown,\n      lastTime = lastMouseDownTime;\n  lastMouseDown = event;\n  lastMouseDownTime = Date.now();\n  return lastMouseDownCount = !last || lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 && Math.abs(last.clientY - event.clientY) < 2 ? (lastMouseDownCount + 1) % 3 : 1;\n}\n\nfunction basicMouseSelection(view, event) {\n  let start = queryPos(view, event),\n      type = getClickType(event);\n  let startSel = view.state.selection;\n  let last = start,\n      lastEvent = event;\n  return {\n    update(update) {\n      if (update.docChanged) {\n        if (start) start.pos = update.changes.mapPos(start.pos);\n        startSel = startSel.map(update.changes);\n        lastEvent = null;\n      }\n    },\n\n    get(event, extend, multiple) {\n      let cur;\n      if (lastEvent && event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY) cur = last;else {\n        cur = last = queryPos(view, event);\n        lastEvent = event;\n      }\n      if (!cur || !start) return startSel;\n      let range = rangeForClick(view, cur.pos, cur.bias, type);\n\n      if (start.pos != cur.pos && !extend) {\n        let startRange = rangeForClick(view, start.pos, start.bias, type);\n        let from = Math.min(startRange.from, range.from),\n            to = Math.max(startRange.to, range.to);\n        range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n      }\n\n      if (extend) return startSel.replaceRange(startSel.main.extend(range.from, range.to));else if (multiple) return startSel.addRange(range);else return EditorSelection.create([range]);\n    }\n\n  };\n}\n\nhandlers.dragstart = (view, event) => {\n  let {\n    selection: {\n      main\n    }\n  } = view.state;\n  let {\n    mouseSelection\n  } = view.inputState;\n  if (mouseSelection) mouseSelection.dragging = main;\n\n  if (event.dataTransfer) {\n    event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n    event.dataTransfer.effectAllowed = \"copyMove\";\n  }\n};\n\nfunction dropText(view, event, text, direct) {\n  if (!text) return;\n  let dropPos = view.posAtCoords({\n    x: event.clientX,\n    y: event.clientY\n  }, false);\n  event.preventDefault();\n  let {\n    mouseSelection\n  } = view.inputState;\n  let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ? {\n    from: mouseSelection.dragging.from,\n    to: mouseSelection.dragging.to\n  } : null;\n  let ins = {\n    from: dropPos,\n    insert: text\n  };\n  let changes = view.state.changes(del ? [del, ins] : ins);\n  view.focus();\n  view.dispatch({\n    changes,\n    selection: {\n      anchor: changes.mapPos(dropPos, -1),\n      head: changes.mapPos(dropPos, 1)\n    },\n    userEvent: del ? \"move.drop\" : \"input.drop\"\n  });\n}\n\nhandlers.drop = (view, event) => {\n  if (!event.dataTransfer) return;\n  if (view.state.readOnly) return event.preventDefault();\n  let files = event.dataTransfer.files;\n\n  if (files && files.length) {\n    // For a file drop, read the file's text.\n    event.preventDefault();\n    let text = Array(files.length),\n        read = 0;\n\n    let finishFile = () => {\n      if (++read == files.length) dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n    };\n\n    for (let i = 0; i < files.length; i++) {\n      let reader = new FileReader();\n      reader.onerror = finishFile;\n\n      reader.onload = () => {\n        if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result)) text[i] = reader.result;\n        finishFile();\n      };\n\n      reader.readAsText(files[i]);\n    }\n  } else {\n    dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n  }\n};\n\nhandlers.paste = (view, event) => {\n  if (view.state.readOnly) return event.preventDefault();\n  view.observer.flush();\n  let data = brokenClipboardAPI ? null : event.clipboardData;\n\n  if (data) {\n    doPaste(view, data.getData(\"text/plain\"));\n    event.preventDefault();\n  } else {\n    capturePaste(view);\n  }\n};\n\nfunction captureCopy(view, text) {\n  // The extra wrapper is somehow necessary on IE/Edge to prevent the\n  // content from being mangled when it is put onto the clipboard\n  let parent = view.dom.parentNode;\n  if (!parent) return;\n  let target = parent.appendChild(document.createElement(\"textarea\"));\n  target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n  target.value = text;\n  target.focus();\n  target.selectionEnd = text.length;\n  target.selectionStart = 0;\n  setTimeout(() => {\n    target.remove();\n    view.focus();\n  }, 50);\n}\n\nfunction copiedRange(state) {\n  let content = [],\n      ranges = [],\n      linewise = false;\n\n  for (let range of state.selection.ranges) if (!range.empty) {\n    content.push(state.sliceDoc(range.from, range.to));\n    ranges.push(range);\n  }\n\n  if (!content.length) {\n    // Nothing selected, do a line-wise copy\n    let upto = -1;\n\n    for (let {\n      from\n    } of state.selection.ranges) {\n      let line = state.doc.lineAt(from);\n\n      if (line.number > upto) {\n        content.push(line.text);\n        ranges.push({\n          from: line.from,\n          to: Math.min(state.doc.length, line.to + 1)\n        });\n      }\n\n      upto = line.number;\n    }\n\n    linewise = true;\n  }\n\n  return {\n    text: content.join(state.lineBreak),\n    ranges,\n    linewise\n  };\n}\n\nlet lastLinewiseCopy = null;\n\nhandlers.copy = handlers.cut = (view, event) => {\n  let {\n    text,\n    ranges,\n    linewise\n  } = copiedRange(view.state);\n  if (!text && !linewise) return;\n  lastLinewiseCopy = linewise ? text : null;\n  let data = brokenClipboardAPI ? null : event.clipboardData;\n\n  if (data) {\n    event.preventDefault();\n    data.clearData();\n    data.setData(\"text/plain\", text);\n  } else {\n    captureCopy(view, text);\n  }\n\n  if (event.type == \"cut\" && !view.state.readOnly) view.dispatch({\n    changes: ranges,\n    scrollIntoView: true,\n    userEvent: \"delete.cut\"\n  });\n};\n\nhandlers.focus = handlers.blur = view => {\n  setTimeout(() => {\n    if (view.hasFocus != view.inputState.notifiedFocused) view.update([]);\n  }, 10);\n};\n\nhandlers.beforeprint = view => {\n  view.viewState.printing = true;\n  view.requestMeasure();\n  setTimeout(() => {\n    view.viewState.printing = false;\n    view.requestMeasure();\n  }, 2000);\n};\n\nfunction forceClearComposition(view, rapid) {\n  if (view.docView.compositionDeco.size) {\n    view.inputState.rapidCompositionStart = rapid;\n\n    try {\n      view.update([]);\n    } finally {\n      view.inputState.rapidCompositionStart = false;\n    }\n  }\n}\n\nhandlers.compositionstart = handlers.compositionupdate = view => {\n  if (view.inputState.compositionFirstChange == null) view.inputState.compositionFirstChange = true;\n\n  if (view.inputState.composing < 0) {\n    // FIXME possibly set a timeout to clear it again on Android\n    view.inputState.composing = 0;\n\n    if (view.docView.compositionDeco.size) {\n      view.observer.flush();\n      forceClearComposition(view, true);\n    }\n  }\n};\n\nhandlers.compositionend = view => {\n  view.inputState.composing = -1;\n  view.inputState.compositionEndedAt = Date.now();\n  view.inputState.compositionFirstChange = null;\n  setTimeout(() => {\n    if (view.inputState.composing < 0) forceClearComposition(view, false);\n  }, 50);\n};\n\nhandlers.contextmenu = view => {\n  view.inputState.lastContextMenu = Date.now();\n};\n\nhandlers.beforeinput = (view, event) => {\n  var _a; // Because Chrome Android doesn't fire useful key events, use\n  // beforeinput to detect backspace (and possibly enter and delete,\n  // but those usually don't even seem to fire beforeinput events at\n  // the moment) and fake a key event for it.\n  //\n  // (preventDefault on beforeinput, though supported in the spec,\n  // seems to do nothing at all on Chrome).\n\n\n  let pending;\n\n  if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n    view.observer.delayAndroidKey(pending.key, pending.keyCode);\n\n    if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n      let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n      setTimeout(() => {\n        var _a; // Backspacing near uneditable nodes on Chrome Android sometimes\n        // closes the virtual keyboard. This tries to crudely detect\n        // that and refocus to get it back.\n\n\n        if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n          view.contentDOM.blur();\n          view.focus();\n        }\n      }, 100);\n    }\n  }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\n\nclass HeightOracle {\n  constructor() {\n    this.doc = Text.empty;\n    this.lineWrapping = false;\n    this.direction = Direction.LTR;\n    this.heightSamples = {};\n    this.lineHeight = 14;\n    this.charWidth = 7;\n    this.lineLength = 30; // Used to track, during updateHeight, if any actual heights changed\n\n    this.heightChanged = false;\n  }\n\n  heightForGap(from, to) {\n    let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n    if (this.lineWrapping) lines += Math.ceil((to - from - lines * this.lineLength * 0.5) / this.lineLength);\n    return this.lineHeight * lines;\n  }\n\n  heightForLine(length) {\n    if (!this.lineWrapping) return this.lineHeight;\n    let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n    return lines * this.lineHeight;\n  }\n\n  setDoc(doc) {\n    this.doc = doc;\n    return this;\n  }\n\n  mustRefreshForStyle(whiteSpace, direction) {\n    return wrappingWhiteSpace.indexOf(whiteSpace) > -1 != this.lineWrapping || this.direction != direction;\n  }\n\n  mustRefreshForHeights(lineHeights) {\n    let newHeight = false;\n\n    for (let i = 0; i < lineHeights.length; i++) {\n      let h = lineHeights[i];\n\n      if (h < 0) {\n        i++;\n      } else if (!this.heightSamples[Math.floor(h * 10)]) {\n        // Round to .1 pixels\n        newHeight = true;\n        this.heightSamples[Math.floor(h * 10)] = true;\n      }\n    }\n\n    return newHeight;\n  }\n\n  refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n    let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n    let changed = Math.round(lineHeight) != Math.round(this.lineHeight) || this.lineWrapping != lineWrapping || this.direction != direction;\n    this.lineWrapping = lineWrapping;\n    this.direction = direction;\n    this.lineHeight = lineHeight;\n    this.charWidth = charWidth;\n    this.lineLength = lineLength;\n\n    if (changed) {\n      this.heightSamples = {};\n\n      for (let i = 0; i < knownHeights.length; i++) {\n        let h = knownHeights[i];\n        if (h < 0) i++;else this.heightSamples[Math.floor(h * 10)] = true;\n      }\n    }\n\n    return changed;\n  }\n\n} // This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\n\n\nclass MeasuredHeights {\n  constructor(from, heights) {\n    this.from = from;\n    this.heights = heights;\n    this.index = 0;\n  }\n\n  get more() {\n    return this.index < this.heights.length;\n  }\n\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\n\n\nclass BlockInfo {\n  /**\n  @internal\n  */\n  constructor(\n  /**\n  The start of the element in the document.\n  */\n  from,\n  /**\n  The length of the element.\n  */\n  length,\n  /**\n  The top position of the element (relative to the top of the\n  document).\n  */\n  top,\n  /**\n  Its height.\n  */\n  height,\n  /**\n  The type of element this is. When querying lines, this may be\n  an array of all the blocks that make up the line.\n  */\n  type) {\n    this.from = from;\n    this.length = length;\n    this.top = top;\n    this.height = height;\n    this.type = type;\n  }\n  /**\n  The end of the element as a document position.\n  */\n\n\n  get to() {\n    return this.from + this.length;\n  }\n  /**\n  The bottom position of the element.\n  */\n\n\n  get bottom() {\n    return this.top + this.height;\n  }\n  /**\n  @internal\n  */\n\n\n  join(other) {\n    let detail = (Array.isArray(this.type) ? this.type : [this]).concat(Array.isArray(other.type) ? other.type : [other]);\n    return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n  }\n  /**\n  FIXME remove on next breaking release @internal\n  */\n\n\n  moveY(offset) {\n    return !offset ? this : new BlockInfo(this.from, this.length, this.top + offset, this.height, Array.isArray(this.type) ? this.type.map(b => b.moveY(offset)) : this.type);\n  }\n\n}\n\nvar QueryType = /*@__PURE__*/function (QueryType) {\n  QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n  QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n  QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\n  return QueryType;\n}(QueryType || (QueryType = {}));\n\nconst Epsilon = 1e-3;\n\nclass HeightMap {\n  constructor(length, // The number of characters covered\n  height) {\n    let flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2;\n    this.length = length;\n    this.height = height;\n    this.flags = flags;\n  }\n\n  get outdated() {\n    return (this.flags & 2\n    /* Outdated */\n    ) > 0;\n  }\n\n  set outdated(value) {\n    this.flags = (value ? 2\n    /* Outdated */\n    : 0) | this.flags & ~2\n    /* Outdated */\n    ;\n  }\n\n  setHeight(oracle, height) {\n    if (this.height != height) {\n      if (Math.abs(this.height - height) > Epsilon) oracle.heightChanged = true;\n      this.height = height;\n    }\n  } // Base case is to replace a leaf node, which simply builds a tree\n  // from the new nodes and returns that (HeightMapBranch and\n  // HeightMapGap override this to actually use from/to)\n\n\n  replace(_from, _to, nodes) {\n    return HeightMap.of(nodes);\n  } // Again, these are base cases, and are overridden for branch and gap nodes.\n\n\n  decomposeLeft(_to, result) {\n    result.push(this);\n  }\n\n  decomposeRight(_from, result) {\n    result.push(this);\n  }\n\n  applyChanges(decorations, oldDoc, oracle, changes) {\n    let me = this;\n\n    for (let i = changes.length - 1; i >= 0; i--) {\n      let {\n        fromA,\n        toA,\n        fromB,\n        toB\n      } = changes[i];\n      let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n      let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n      toB += end.to - toA;\n      toA = end.to;\n\n      while (i > 0 && start.from <= changes[i - 1].toA) {\n        fromA = changes[i - 1].fromA;\n        fromB = changes[i - 1].fromB;\n        i--;\n        if (fromA < start.from) start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n      }\n\n      fromB += start.from - fromA;\n      fromA = start.from;\n      let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n      me = me.replace(fromA, toA, nodes);\n    }\n\n    return me.updateHeight(oracle, 0);\n  }\n\n  static empty() {\n    return new HeightMapText(0, 0);\n  } // nodes uses null values to indicate the position of line breaks.\n  // There are never line breaks at the start or end of the array, or\n  // two line breaks next to each other, and the array isn't allowed\n  // to be empty (same restrictions as return value from the builder).\n\n\n  static of(nodes) {\n    if (nodes.length == 1) return nodes[0];\n    let i = 0,\n        j = nodes.length,\n        before = 0,\n        after = 0;\n\n    for (;;) {\n      if (i == j) {\n        if (before > after * 2) {\n          let split = nodes[i - 1];\n          if (split.break) nodes.splice(--i, 1, split.left, null, split.right);else nodes.splice(--i, 1, split.left, split.right);\n          j += 1 + split.break;\n          before -= split.size;\n        } else if (after > before * 2) {\n          let split = nodes[j];\n          if (split.break) nodes.splice(j, 1, split.left, null, split.right);else nodes.splice(j, 1, split.left, split.right);\n          j += 2 + split.break;\n          after -= split.size;\n        } else {\n          break;\n        }\n      } else if (before < after) {\n        let next = nodes[i++];\n        if (next) before += next.size;\n      } else {\n        let next = nodes[--j];\n        if (next) after += next.size;\n      }\n    }\n\n    let brk = 0;\n\n    if (nodes[i - 1] == null) {\n      brk = 1;\n      i--;\n    } else if (nodes[i] == null) {\n      brk = 1;\n      j++;\n    }\n\n    return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n  }\n\n}\n\nHeightMap.prototype.size = 1;\n\nclass HeightMapBlock extends HeightMap {\n  constructor(length, height, type) {\n    super(length, height);\n    this.type = type;\n  }\n\n  blockAt(_height, _doc, top, offset) {\n    return new BlockInfo(offset, this.length, top, this.height, this.type);\n  }\n\n  lineAt(_value, _type, doc, top, offset) {\n    return this.blockAt(0, doc, top, offset);\n  }\n\n  forEachLine(_from, _to, doc, top, offset, f) {\n    f(this.blockAt(0, doc, top, offset));\n  }\n\n  updateHeight(oracle) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    let _force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    let measured = arguments.length > 3 ? arguments[3] : undefined;\n    if (measured && measured.from <= offset && measured.more) this.setHeight(oracle, measured.heights[measured.index++]);\n    this.outdated = false;\n    return this;\n  }\n\n  toString() {\n    return `block(${this.length})`;\n  }\n\n}\n\nclass HeightMapText extends HeightMapBlock {\n  constructor(length, height) {\n    super(length, height, BlockType.Text);\n    this.collapsed = 0; // Amount of collapsed content in the line\n\n    this.widgetHeight = 0; // Maximum inline widget height\n  }\n\n  replace(_from, _to, nodes) {\n    let node = nodes[0];\n\n    if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && node.flags & 4\n    /* SingleLine */\n    ) && Math.abs(this.length - node.length) < 10) {\n      if (node instanceof HeightMapGap) node = new HeightMapText(node.length, this.height);else node.height = this.height;\n      if (!this.outdated) node.outdated = false;\n      return node;\n    } else {\n      return HeightMap.of(nodes);\n    }\n  }\n\n  updateHeight(oracle) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let measured = arguments.length > 3 ? arguments[3] : undefined;\n    if (measured && measured.from <= offset && measured.more) this.setHeight(oracle, measured.heights[measured.index++]);else if (force || this.outdated) this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n    this.outdated = false;\n    return this;\n  }\n\n  toString() {\n    return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n  }\n\n}\n\nclass HeightMapGap extends HeightMap {\n  constructor(length) {\n    super(length, 0);\n  }\n\n  lines(doc, offset) {\n    let firstLine = doc.lineAt(offset).number,\n        lastLine = doc.lineAt(offset + this.length).number;\n    return {\n      firstLine,\n      lastLine,\n      lineHeight: this.height / (lastLine - firstLine + 1)\n    };\n  }\n\n  blockAt(height, doc, top, offset) {\n    let {\n      firstLine,\n      lastLine,\n      lineHeight\n    } = this.lines(doc, offset);\n    let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n    let {\n      from,\n      length\n    } = doc.line(firstLine + line);\n    return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n  }\n\n  lineAt(value, type, doc, top, offset) {\n    if (type == QueryType.ByHeight) return this.blockAt(value, doc, top, offset);\n\n    if (type == QueryType.ByPosNoHeight) {\n      let {\n        from,\n        to\n      } = doc.lineAt(value);\n      return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n    }\n\n    let {\n      firstLine,\n      lineHeight\n    } = this.lines(doc, offset);\n    let {\n      from,\n      length,\n      number\n    } = doc.lineAt(value);\n    return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n  }\n\n  forEachLine(from, to, doc, top, offset, f) {\n    let {\n      firstLine,\n      lineHeight\n    } = this.lines(doc, offset);\n\n    for (let pos = Math.max(from, offset), end = Math.min(offset + this.length, to); pos <= end;) {\n      let line = doc.lineAt(pos);\n      if (pos == from) top += lineHeight * (line.number - firstLine);\n      f(new BlockInfo(line.from, line.length, top, lineHeight, BlockType.Text));\n      top += lineHeight;\n      pos = line.to + 1;\n    }\n  }\n\n  replace(from, to, nodes) {\n    let after = this.length - to;\n\n    if (after > 0) {\n      let last = nodes[nodes.length - 1];\n      if (last instanceof HeightMapGap) nodes[nodes.length - 1] = new HeightMapGap(last.length + after);else nodes.push(null, new HeightMapGap(after - 1));\n    }\n\n    if (from > 0) {\n      let first = nodes[0];\n      if (first instanceof HeightMapGap) nodes[0] = new HeightMapGap(from + first.length);else nodes.unshift(new HeightMapGap(from - 1), null);\n    }\n\n    return HeightMap.of(nodes);\n  }\n\n  decomposeLeft(to, result) {\n    result.push(new HeightMapGap(to - 1), null);\n  }\n\n  decomposeRight(from, result) {\n    result.push(null, new HeightMapGap(this.length - from - 1));\n  }\n\n  updateHeight(oracle) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let measured = arguments.length > 3 ? arguments[3] : undefined;\n    let end = offset + this.length;\n\n    if (measured && measured.from <= offset + this.length && measured.more) {\n      // Fill in part of this gap with measured lines. We know there\n      // can't be widgets or collapsed ranges in those lines, because\n      // they would already have been added to the heightmap (gaps\n      // only contain plain text).\n      let nodes = [],\n          pos = Math.max(offset, measured.from),\n          singleHeight = -1;\n      let wasChanged = oracle.heightChanged;\n      if (measured.from > offset) nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n\n      while (pos <= end && measured.more) {\n        let len = oracle.doc.lineAt(pos).length;\n        if (nodes.length) nodes.push(null);\n        let height = measured.heights[measured.index++];\n        if (singleHeight == -1) singleHeight = height;else if (Math.abs(height - singleHeight) >= Epsilon) singleHeight = -2;\n        let line = new HeightMapText(len, height);\n        line.outdated = false;\n        nodes.push(line);\n        pos += len + 1;\n      }\n\n      if (pos <= end) nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n      let result = HeightMap.of(nodes);\n      oracle.heightChanged = wasChanged || singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon || Math.abs(singleHeight - this.lines(oracle.doc, offset).lineHeight) >= Epsilon;\n      return result;\n    } else if (force || this.outdated) {\n      this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n      this.outdated = false;\n    }\n\n    return this;\n  }\n\n  toString() {\n    return `gap(${this.length})`;\n  }\n\n}\n\nclass HeightMapBranch extends HeightMap {\n  constructor(left, brk, right) {\n    super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2\n    /* Outdated */\n    : 0));\n    this.left = left;\n    this.right = right;\n    this.size = left.size + right.size;\n  }\n\n  get break() {\n    return this.flags & 1\n    /* Break */\n    ;\n  }\n\n  blockAt(height, doc, top, offset) {\n    let mid = top + this.left.height;\n    return height < mid ? this.left.blockAt(height, doc, top, offset) : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n  }\n\n  lineAt(value, type, doc, top, offset) {\n    let rightTop = top + this.left.height,\n        rightOffset = offset + this.left.length + this.break;\n    let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n    let base = left ? this.left.lineAt(value, type, doc, top, offset) : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n    if (this.break || (left ? base.to < rightOffset : base.from > rightOffset)) return base;\n    let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n    if (left) return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));else return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n  }\n\n  forEachLine(from, to, doc, top, offset, f) {\n    let rightTop = top + this.left.height,\n        rightOffset = offset + this.left.length + this.break;\n\n    if (this.break) {\n      if (from < rightOffset) this.left.forEachLine(from, to, doc, top, offset, f);\n      if (to >= rightOffset) this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n    } else {\n      let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n      if (from < mid.from) this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n      if (mid.to >= from && mid.from <= to) f(mid);\n      if (to > mid.to) this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n    }\n  }\n\n  replace(from, to, nodes) {\n    let rightStart = this.left.length + this.break;\n    if (to < rightStart) return this.balanced(this.left.replace(from, to, nodes), this.right);\n    if (from > this.left.length) return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n    let result = [];\n    if (from > 0) this.decomposeLeft(from, result);\n    let left = result.length;\n\n    for (let node of nodes) result.push(node);\n\n    if (from > 0) mergeGaps(result, left - 1);\n\n    if (to < this.length) {\n      let right = result.length;\n      this.decomposeRight(to, result);\n      mergeGaps(result, right);\n    }\n\n    return HeightMap.of(result);\n  }\n\n  decomposeLeft(to, result) {\n    let left = this.left.length;\n    if (to <= left) return this.left.decomposeLeft(to, result);\n    result.push(this.left);\n\n    if (this.break) {\n      left++;\n      if (to >= left) result.push(null);\n    }\n\n    if (to > left) this.right.decomposeLeft(to - left, result);\n  }\n\n  decomposeRight(from, result) {\n    let left = this.left.length,\n        right = left + this.break;\n    if (from >= right) return this.right.decomposeRight(from - right, result);\n    if (from < left) this.left.decomposeRight(from, result);\n    if (this.break && from < right) result.push(null);\n    result.push(this.right);\n  }\n\n  balanced(left, right) {\n    if (left.size > 2 * right.size || right.size > 2 * left.size) return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n    this.left = left;\n    this.right = right;\n    this.height = left.height + right.height;\n    this.outdated = left.outdated || right.outdated;\n    this.size = left.size + right.size;\n    this.length = left.length + this.break + right.length;\n    return this;\n  }\n\n  updateHeight(oracle) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let measured = arguments.length > 3 ? arguments[3] : undefined;\n    let {\n      left,\n      right\n    } = this,\n        rightStart = offset + left.length + this.break,\n        rebalance = null;\n    if (measured && measured.from <= offset + left.length && measured.more) rebalance = left = left.updateHeight(oracle, offset, force, measured);else left.updateHeight(oracle, offset, force);\n    if (measured && measured.from <= rightStart + right.length && measured.more) rebalance = right = right.updateHeight(oracle, rightStart, force, measured);else right.updateHeight(oracle, rightStart, force);\n    if (rebalance) return this.balanced(left, right);\n    this.height = this.left.height + this.right.height;\n    this.outdated = false;\n    return this;\n  }\n\n  toString() {\n    return this.left + (this.break ? \" \" : \"-\") + this.right;\n  }\n\n}\n\nfunction mergeGaps(nodes, around) {\n  let before, after;\n  if (nodes[around] == null && (before = nodes[around - 1]) instanceof HeightMapGap && (after = nodes[around + 1]) instanceof HeightMapGap) nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\n\nconst relevantWidgetHeight = 5;\n\nclass NodeBuilder {\n  constructor(pos, oracle) {\n    this.pos = pos;\n    this.oracle = oracle;\n    this.nodes = [];\n    this.lineStart = -1;\n    this.lineEnd = -1;\n    this.covering = null;\n    this.writtenTo = pos;\n  }\n\n  get isCovered() {\n    return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n  }\n\n  span(_from, to) {\n    if (this.lineStart > -1) {\n      let end = Math.min(to, this.lineEnd),\n          last = this.nodes[this.nodes.length - 1];\n      if (last instanceof HeightMapText) last.length += end - this.pos;else if (end > this.pos || !this.isCovered) this.nodes.push(new HeightMapText(end - this.pos, -1));\n      this.writtenTo = end;\n\n      if (to > end) {\n        this.nodes.push(null);\n        this.writtenTo++;\n        this.lineStart = -1;\n      }\n    }\n\n    this.pos = to;\n  }\n\n  point(from, to, deco) {\n    if (from < to || deco.heightRelevant) {\n      let height = deco.widget ? deco.widget.estimatedHeight : 0;\n      if (height < 0) height = this.oracle.lineHeight;\n      let len = to - from;\n\n      if (deco.block) {\n        this.addBlock(new HeightMapBlock(len, height, deco.type));\n      } else if (len || height >= relevantWidgetHeight) {\n        this.addLineDeco(height, len);\n      }\n    } else if (to > from) {\n      this.span(from, to);\n    }\n\n    if (this.lineEnd > -1 && this.lineEnd < this.pos) this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n  }\n\n  enterLine() {\n    if (this.lineStart > -1) return;\n    let {\n      from,\n      to\n    } = this.oracle.doc.lineAt(this.pos);\n    this.lineStart = from;\n    this.lineEnd = to;\n\n    if (this.writtenTo < from) {\n      if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null) this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n      this.nodes.push(null);\n    }\n\n    if (this.pos > from) this.nodes.push(new HeightMapText(this.pos - from, -1));\n    this.writtenTo = this.pos;\n  }\n\n  blankContent(from, to) {\n    let gap = new HeightMapGap(to - from);\n    if (this.oracle.doc.lineAt(from).to == to) gap.flags |= 4\n    /* SingleLine */\n    ;\n    return gap;\n  }\n\n  ensureLine() {\n    this.enterLine();\n    let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n    if (last instanceof HeightMapText) return last;\n    let line = new HeightMapText(0, -1);\n    this.nodes.push(line);\n    return line;\n  }\n\n  addBlock(block) {\n    this.enterLine();\n    if (block.type == BlockType.WidgetAfter && !this.isCovered) this.ensureLine();\n    this.nodes.push(block);\n    this.writtenTo = this.pos = this.pos + block.length;\n    if (block.type != BlockType.WidgetBefore) this.covering = block;\n  }\n\n  addLineDeco(height, length) {\n    let line = this.ensureLine();\n    line.length += length;\n    line.collapsed += length;\n    line.widgetHeight = Math.max(line.widgetHeight, height);\n    this.writtenTo = this.pos = this.pos + length;\n  }\n\n  finish(from) {\n    let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n    if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered) this.nodes.push(new HeightMapText(0, -1));else if (this.writtenTo < this.pos || last == null) this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n    let pos = from;\n\n    for (let node of this.nodes) {\n      if (node instanceof HeightMapText) node.updateHeight(this.oracle, pos);\n      pos += node ? node.length : 1;\n    }\n\n    return this.nodes;\n  } // Always called with a region that on both sides either stretches\n  // to a line break or the end of the document.\n  // The returned array uses null to indicate line breaks, but never\n  // starts or ends in a line break, or has multiple line breaks next\n  // to each other.\n\n\n  static build(oracle, decorations, from, to) {\n    let builder = new NodeBuilder(from, oracle);\n    RangeSet.spans(decorations, from, to, builder, 0);\n    return builder.finish(from);\n  }\n\n}\n\nfunction heightRelevantDecoChanges(a, b, diff) {\n  let comp = new DecorationComparator();\n  RangeSet.compare(a, b, diff, comp, 0);\n  return comp.changes;\n}\n\nclass DecorationComparator {\n  constructor() {\n    this.changes = [];\n  }\n\n  compareRange() {}\n\n  comparePoint(from, to, a, b) {\n    if (from < to || a && a.heightRelevant || b && b.heightRelevant) addRange(from, to, this.changes, 5);\n  }\n\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n  let rect = dom.getBoundingClientRect();\n  let left = Math.max(0, rect.left),\n      right = Math.min(innerWidth, rect.right);\n  let top = Math.max(0, rect.top),\n      bottom = Math.min(innerHeight, rect.bottom);\n  let body = dom.ownerDocument.body;\n\n  for (let parent = dom.parentNode; parent && parent != body;) {\n    if (parent.nodeType == 1) {\n      let elt = parent;\n      let style = window.getComputedStyle(elt);\n\n      if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) && style.overflow != \"visible\") {\n        let parentRect = elt.getBoundingClientRect();\n        left = Math.max(left, parentRect.left);\n        right = Math.min(right, parentRect.right);\n        top = Math.max(top, parentRect.top);\n        bottom = Math.min(bottom, parentRect.bottom);\n      }\n\n      parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n    } else if (parent.nodeType == 11) {\n      // Shadow root\n      parent = parent.host;\n    } else {\n      break;\n    }\n  }\n\n  return {\n    left: left - rect.left,\n    right: Math.max(left, right) - rect.left,\n    top: top - (rect.top + paddingTop),\n    bottom: Math.max(top, bottom) - (rect.top + paddingTop)\n  };\n} // Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\n\n\nclass LineGap {\n  constructor(from, to, size) {\n    this.from = from;\n    this.to = to;\n    this.size = size;\n  }\n\n  static same(a, b) {\n    if (a.length != b.length) return false;\n\n    for (let i = 0; i < a.length; i++) {\n      let gA = a[i],\n          gB = b[i];\n      if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size) return false;\n    }\n\n    return true;\n  }\n\n  draw(wrapping) {\n    return Decoration.replace({\n      widget: new LineGapWidget(this.size, wrapping)\n    }).range(this.from, this.to);\n  }\n\n}\n\nclass LineGapWidget extends WidgetType {\n  constructor(size, vertical) {\n    super();\n    this.size = size;\n    this.vertical = vertical;\n  }\n\n  eq(other) {\n    return other.size == this.size && other.vertical == this.vertical;\n  }\n\n  toDOM() {\n    let elt = document.createElement(\"div\");\n\n    if (this.vertical) {\n      elt.style.height = this.size + \"px\";\n    } else {\n      elt.style.width = this.size + \"px\";\n      elt.style.height = \"2px\";\n      elt.style.display = \"inline-block\";\n    }\n\n    return elt;\n  }\n\n  get estimatedHeight() {\n    return this.vertical ? this.size : -1;\n  }\n\n}\n\nclass ViewState {\n  constructor(state) {\n    this.state = state; // These are contentDOM-local coordinates\n\n    this.pixelViewport = {\n      left: 0,\n      right: window.innerWidth,\n      top: 0,\n      bottom: 0\n    };\n    this.inView = true;\n    this.paddingTop = 0;\n    this.paddingBottom = 0;\n    this.contentDOMWidth = 0;\n    this.contentDOMHeight = 0;\n    this.editorHeight = 0;\n    this.editorWidth = 0;\n    this.heightOracle = new HeightOracle(); // See VP.MaxDOMHeight\n\n    this.scaler = IdScaler;\n    this.scrollTarget = null; // Briefly set to true when printing, to disable viewport limiting\n\n    this.printing = false; // Flag set when editor content was redrawn, so that the next\n    // measure stage knows it must read DOM layout\n\n    this.mustMeasureContent = true;\n    this.visibleRanges = []; // Cursor 'assoc' is only significant when the cursor is on a line\n    // wrap point, where it must stick to the character that it is\n    // associated with. Since browsers don't provide a reasonable\n    // interface to set or query this, when a selection is set that\n    // might cause this to be significant, this flag is set. The next\n    // measure phase will check whether the cursor is on a line-wrapping\n    // boundary and, if so, reset it to make sure it is positioned in\n    // the right place.\n\n    this.mustEnforceCursorAssoc = false;\n    this.heightMap = HeightMap.empty().applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n    this.viewport = this.getViewport(0, null);\n    this.updateViewportLines();\n    this.updateForViewport();\n    this.lineGaps = this.ensureLineGaps([]);\n    this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n    this.computeVisibleRanges();\n  }\n\n  updateForViewport() {\n    let viewports = [this.viewport],\n        {\n      main\n    } = this.state.selection;\n\n    for (let i = 0; i <= 1; i++) {\n      let pos = i ? main.head : main.anchor;\n\n      if (!viewports.some(_ref3 => {\n        let {\n          from,\n          to\n        } = _ref3;\n        return pos >= from && pos <= to;\n      })) {\n        let {\n          from,\n          to\n        } = this.lineBlockAt(pos);\n        viewports.push(new Viewport(from, to));\n      }\n    }\n\n    this.viewports = viewports.sort((a, b) => a.from - b.from);\n    this.scaler = this.heightMap.height <= 7000000\n    /* MaxDOMHeight */\n    ? IdScaler : new BigScaler(this.heightOracle.doc, this.heightMap, this.viewports);\n  }\n\n  updateViewportLines() {\n    this.viewportLines = [];\n    this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, block => {\n      this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n    });\n  }\n\n  update(update) {\n    let scrollTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let prev = this.state;\n    this.state = update.state;\n    let newDeco = this.state.facet(decorations);\n    let contentChanges = update.changedRanges;\n    let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.startState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n    let prevHeight = this.heightMap.height;\n    this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n    if (this.heightMap.height != prevHeight) update.flags |= 2\n    /* Height */\n    ;\n    let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n    if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) || !this.viewportIsAppropriate(viewport)) viewport = this.getViewport(0, scrollTarget);\n    let updateLines = !update.changes.empty || update.flags & 2\n    /* Height */\n    || viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n    this.viewport = viewport;\n    this.updateForViewport();\n    if (updateLines) this.updateViewportLines();\n    if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000\n    /* DoubleMargin */\n    ) this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n    update.flags |= this.computeVisibleRanges();\n    if (scrollTarget) this.scrollTarget = scrollTarget;\n    if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping && update.state.selection.main.empty && update.state.selection.main.assoc) this.mustEnforceCursorAssoc = true;\n  }\n\n  measure(view) {\n    let dom = view.contentDOM,\n        style = window.getComputedStyle(dom);\n    let oracle = this.heightOracle;\n    let whiteSpace = style.whiteSpace,\n        direction = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n    let refresh = this.heightOracle.mustRefreshForStyle(whiteSpace, direction);\n    let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != dom.clientHeight;\n    let result = 0,\n        bias = 0;\n\n    if (measureContent) {\n      this.mustMeasureContent = false;\n      this.contentDOMHeight = dom.clientHeight; // Vertical padding\n\n      let paddingTop = parseInt(style.paddingTop) || 0,\n          paddingBottom = parseInt(style.paddingBottom) || 0;\n\n      if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n        result |= 8\n        /* Geometry */\n        ;\n        this.paddingTop = paddingTop;\n        this.paddingBottom = paddingBottom;\n      }\n    } // Pixel viewport\n\n\n    let pixelViewport = this.printing ? {\n      top: -1e8,\n      bottom: 1e8,\n      left: -1e8,\n      right: 1e8\n    } : visiblePixelRange(dom, this.paddingTop);\n    let dTop = pixelViewport.top - this.pixelViewport.top,\n        dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n    this.pixelViewport = pixelViewport;\n    let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n\n    if (inView != this.inView) {\n      this.inView = inView;\n      if (inView) measureContent = true;\n    }\n\n    if (!this.inView) return 0;\n    let contentWidth = dom.clientWidth;\n\n    if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight || this.editorWidth != view.scrollDOM.clientWidth) {\n      this.contentDOMWidth = contentWidth;\n      this.editorHeight = view.scrollDOM.clientHeight;\n      this.editorWidth = view.scrollDOM.clientWidth;\n      result |= 8\n      /* Geometry */\n      ;\n    }\n\n    if (measureContent) {\n      let lineHeights = view.docView.measureVisibleLineHeights();\n      if (oracle.mustRefreshForHeights(lineHeights)) refresh = true;\n\n      if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n        let {\n          lineHeight,\n          charWidth\n        } = view.docView.measureTextSize();\n        refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n\n        if (refresh) {\n          view.docView.minWidth = 0;\n          result |= 8\n          /* Geometry */\n          ;\n        }\n      }\n\n      if (dTop > 0 && dBottom > 0) bias = Math.max(dTop, dBottom);else if (dTop < 0 && dBottom < 0) bias = Math.min(dTop, dBottom);\n      oracle.heightChanged = false;\n      this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n      if (oracle.heightChanged) result |= 2\n      /* Height */\n      ;\n    }\n\n    let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) || this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);\n    if (viewportChange) this.viewport = this.getViewport(bias, this.scrollTarget);\n    this.updateForViewport();\n    if (result & 2\n    /* Height */\n    || viewportChange) this.updateViewportLines();\n    if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000\n    /* DoubleMargin */\n    ) this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n    result |= this.computeVisibleRanges();\n\n    if (this.mustEnforceCursorAssoc) {\n      this.mustEnforceCursorAssoc = false; // This is done in the read stage, because moving the selection\n      // to a line end is going to trigger a layout anyway, so it\n      // can't be a pure write. It should be rare that it does any\n      // writing.\n\n      view.docView.enforceCursorAssoc();\n    }\n\n    return result;\n  }\n\n  get visibleTop() {\n    return this.scaler.fromDOM(this.pixelViewport.top);\n  }\n\n  get visibleBottom() {\n    return this.scaler.fromDOM(this.pixelViewport.bottom);\n  }\n\n  getViewport(bias, scrollTarget) {\n    // This will divide VP.Margin between the top and the\n    // bottom, depending on the bias (the change in viewport position\n    // since the last update). It'll hold a number between 0 and 1\n    let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000\n    /* Margin */\n    / 2));\n    let map = this.heightMap,\n        doc = this.state.doc,\n        {\n      visibleTop,\n      visibleBottom\n    } = this;\n    let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000\n    /* Margin */\n    , QueryType.ByHeight, doc, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000\n    /* Margin */\n    , QueryType.ByHeight, doc, 0, 0).to); // If scrollTarget is given, make sure the viewport includes that position\n\n    if (scrollTarget) {\n      let {\n        head\n      } = scrollTarget.range,\n          viewHeight = this.editorHeight;\n\n      if (head < viewport.from || head > viewport.to) {\n        let block = map.lineAt(head, QueryType.ByPos, doc, 0, 0),\n            topPos;\n        if (scrollTarget.y == \"center\") topPos = (block.top + block.bottom) / 2 - viewHeight / 2;else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from) topPos = block.top;else topPos = block.bottom - viewHeight;\n        viewport = new Viewport(map.lineAt(topPos - 1000\n        /* Margin */\n        / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(topPos + viewHeight + 1000\n        /* Margin */\n        / 2, QueryType.ByHeight, doc, 0, 0).to);\n      }\n    }\n\n    return viewport;\n  }\n\n  mapViewport(viewport, changes) {\n    let from = changes.mapPos(viewport.from, -1),\n        to = changes.mapPos(viewport.to, 1);\n    return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n  } // Checks if a given viewport covers the visible part of the\n  // document and not too much beyond that.\n\n\n  viewportIsAppropriate(_ref4) {\n    let {\n      from,\n      to\n    } = _ref4;\n    let bias = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    if (!this.inView) return true;\n    let {\n      top\n    } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n    let {\n      bottom\n    } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n    let {\n      visibleTop,\n      visibleBottom\n    } = this;\n    return (from == 0 || top <= visibleTop - Math.max(10\n    /* MinCoverMargin */\n    , Math.min(-bias, 250\n    /* MaxCoverMargin */\n    ))) && (to == this.state.doc.length || bottom >= visibleBottom + Math.max(10\n    /* MinCoverMargin */\n    , Math.min(bias, 250\n    /* MaxCoverMargin */\n    ))) && top > visibleTop - 2 * 1000\n    /* Margin */\n    && bottom < visibleBottom + 2 * 1000\n    /* Margin */\n    ;\n  }\n\n  mapLineGaps(gaps, changes) {\n    if (!gaps.length || changes.empty) return gaps;\n    let mapped = [];\n\n    for (let gap of gaps) if (!changes.touchesRange(gap.from, gap.to)) mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n\n    return mapped;\n  } // Computes positions in the viewport where the start or end of a\n  // line should be hidden, trying to reuse existing line gaps when\n  // appropriate to avoid unneccesary redraws.\n  // Uses crude character-counting for the positioning and sizing,\n  // since actual DOM coordinates aren't always available and\n  // predictable. Relies on generous margins (see LG.Margin) to hide\n  // the artifacts this might produce from the user.\n\n\n  ensureLineGaps(current) {\n    let gaps = []; // This won't work at all in predominantly right-to-left text.\n\n    if (this.heightOracle.direction != Direction.LTR) return gaps;\n\n    for (let line of this.viewportLines) {\n      if (line.length < 4000\n      /* DoubleMargin */\n      ) continue;\n      let structure = lineStructure(line.from, line.to, this.state);\n      if (structure.total < 4000\n      /* DoubleMargin */\n      ) continue;\n      let viewFrom, viewTo;\n\n      if (this.heightOracle.lineWrapping) {\n        let marginHeight = 2000\n        /* Margin */\n        / this.heightOracle.lineLength * this.heightOracle.lineHeight;\n        viewFrom = findPosition(structure, (this.visibleTop - line.top - marginHeight) / line.height);\n        viewTo = findPosition(structure, (this.visibleBottom - line.top + marginHeight) / line.height);\n      } else {\n        let totalWidth = structure.total * this.heightOracle.charWidth;\n        let marginWidth = 2000\n        /* Margin */\n        * this.heightOracle.charWidth;\n        viewFrom = findPosition(structure, (this.pixelViewport.left - marginWidth) / totalWidth);\n        viewTo = findPosition(structure, (this.pixelViewport.right + marginWidth) / totalWidth);\n      }\n\n      let outside = [];\n      if (viewFrom > line.from) outside.push({\n        from: line.from,\n        to: viewFrom\n      });\n      if (viewTo < line.to) outside.push({\n        from: viewTo,\n        to: line.to\n      });\n      let sel = this.state.selection.main; // Make sure the gaps don't cover a selection end\n\n      if (sel.from >= line.from && sel.from <= line.to) cutRange(outside, sel.from - 10\n      /* SelectionMargin */\n      , sel.from + 10\n      /* SelectionMargin */\n      );\n      if (!sel.empty && sel.to >= line.from && sel.to <= line.to) cutRange(outside, sel.to - 10\n      /* SelectionMargin */\n      , sel.to + 10\n      /* SelectionMargin */\n      );\n\n      for (let {\n        from,\n        to\n      } of outside) if (to - from > 1000\n      /* HalfMargin */\n      ) {\n        gaps.push(find(current, gap => gap.from >= line.from && gap.to <= line.to && Math.abs(gap.from - from) < 1000\n        /* HalfMargin */\n        && Math.abs(gap.to - to) < 1000\n        /* HalfMargin */\n        ) || new LineGap(from, to, this.gapSize(line, from, to, structure)));\n      }\n    }\n\n    return gaps;\n  }\n\n  gapSize(line, from, to, structure) {\n    let fraction = findFraction(structure, to) - findFraction(structure, from);\n\n    if (this.heightOracle.lineWrapping) {\n      return line.height * fraction;\n    } else {\n      return structure.total * this.heightOracle.charWidth * fraction;\n    }\n  }\n\n  updateLineGaps(gaps) {\n    if (!LineGap.same(gaps, this.lineGaps)) {\n      this.lineGaps = gaps;\n      this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n    }\n  }\n\n  computeVisibleRanges() {\n    let deco = this.state.facet(decorations);\n    if (this.lineGaps.length) deco = deco.concat(this.lineGapDeco);\n    let ranges = [];\n    RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n      span(from, to) {\n        ranges.push({\n          from,\n          to\n        });\n      },\n\n      point() {}\n\n    }, 20);\n    let changed = ranges.length != this.visibleRanges.length || this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n    this.visibleRanges = ranges;\n    return changed ? 4\n    /* Viewport */\n    : 0;\n  }\n\n  lineBlockAt(pos) {\n    return pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos) || scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, 0, 0), this.scaler);\n  }\n\n  lineBlockAtHeight(height) {\n    return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.state.doc, 0, 0), this.scaler);\n  }\n\n  elementAtHeight(height) {\n    return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.state.doc, 0, 0), this.scaler);\n  }\n\n  get docHeight() {\n    return this.scaler.toDOM(this.heightMap.height);\n  }\n\n  get contentHeight() {\n    return this.docHeight + this.paddingTop + this.paddingBottom;\n  }\n\n}\n\nclass Viewport {\n  constructor(from, to) {\n    this.from = from;\n    this.to = to;\n  }\n\n}\n\nfunction lineStructure(from, to, state) {\n  let ranges = [],\n      pos = from,\n      total = 0;\n  RangeSet.spans(state.facet(decorations), from, to, {\n    span() {},\n\n    point(from, to) {\n      if (from > pos) {\n        ranges.push({\n          from: pos,\n          to: from\n        });\n        total += from - pos;\n      }\n\n      pos = to;\n    }\n\n  }, 20); // We're only interested in collapsed ranges of a significant size\n\n  if (pos < to) {\n    ranges.push({\n      from: pos,\n      to\n    });\n    total += to - pos;\n  }\n\n  return {\n    total,\n    ranges\n  };\n}\n\nfunction findPosition(_ref5, ratio) {\n  let {\n    total,\n    ranges\n  } = _ref5;\n  if (ratio <= 0) return ranges[0].from;\n  if (ratio >= 1) return ranges[ranges.length - 1].to;\n  let dist = Math.floor(total * ratio);\n\n  for (let i = 0;; i++) {\n    let {\n      from,\n      to\n    } = ranges[i],\n        size = to - from;\n    if (dist <= size) return from + dist;\n    dist -= size;\n  }\n}\n\nfunction findFraction(structure, pos) {\n  let counted = 0;\n\n  for (let {\n    from,\n    to\n  } of structure.ranges) {\n    if (pos <= to) {\n      counted += pos - from;\n      break;\n    }\n\n    counted += to - from;\n  }\n\n  return counted / structure.total;\n}\n\nfunction cutRange(ranges, from, to) {\n  for (let i = 0; i < ranges.length; i++) {\n    let r = ranges[i];\n\n    if (r.from < to && r.to > from) {\n      let pieces = [];\n      if (r.from < from) pieces.push({\n        from: r.from,\n        to: from\n      });\n      if (r.to > to) pieces.push({\n        from: to,\n        to: r.to\n      });\n      ranges.splice(i, 1, ...pieces);\n      i += pieces.length - 1;\n    }\n  }\n}\n\nfunction find(array, f) {\n  for (let val of array) if (f(val)) return val;\n\n  return undefined;\n} // Don't scale when the document height is within the range of what\n// the DOM can handle.\n\n\nconst IdScaler = {\n  toDOM(n) {\n    return n;\n  },\n\n  fromDOM(n) {\n    return n;\n  },\n\n  scale: 1\n}; // When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\n\nclass BigScaler {\n  constructor(doc, heightMap, viewports) {\n    let vpHeight = 0,\n        base = 0,\n        domBase = 0;\n    this.viewports = viewports.map(_ref6 => {\n      let {\n        from,\n        to\n      } = _ref6;\n      let top = heightMap.lineAt(from, QueryType.ByPos, doc, 0, 0).top;\n      let bottom = heightMap.lineAt(to, QueryType.ByPos, doc, 0, 0).bottom;\n      vpHeight += bottom - top;\n      return {\n        from,\n        to,\n        top,\n        bottom,\n        domTop: 0,\n        domBottom: 0\n      };\n    });\n    this.scale = (7000000\n    /* MaxDOMHeight */\n    - vpHeight) / (heightMap.height - vpHeight);\n\n    for (let obj of this.viewports) {\n      obj.domTop = domBase + (obj.top - base) * this.scale;\n      domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n      base = obj.bottom;\n    }\n  }\n\n  toDOM(n) {\n    for (let i = 0, base = 0, domBase = 0;; i++) {\n      let vp = i < this.viewports.length ? this.viewports[i] : null;\n      if (!vp || n < vp.top) return domBase + (n - base) * this.scale;\n      if (n <= vp.bottom) return vp.domTop + (n - vp.top);\n      base = vp.bottom;\n      domBase = vp.domBottom;\n    }\n  }\n\n  fromDOM(n) {\n    for (let i = 0, base = 0, domBase = 0;; i++) {\n      let vp = i < this.viewports.length ? this.viewports[i] : null;\n      if (!vp || n < vp.domTop) return base + (n - domBase) / this.scale;\n      if (n <= vp.domBottom) return vp.top + (n - vp.domTop);\n      base = vp.bottom;\n      domBase = vp.domBottom;\n    }\n  }\n\n}\n\nfunction scaleBlock(block, scaler) {\n  if (scaler.scale == 1) return block;\n  let bTop = scaler.toDOM(block.top),\n      bBottom = scaler.toDOM(block.bottom);\n  return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);\n}\n\nconst theme = /*@__PURE__*/Facet.define({\n  combine: strs => strs.join(\" \")\n});\nconst darkTheme = /*@__PURE__*/Facet.define({\n  combine: values => values.indexOf(true) > -1\n});\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(),\n      baseLightID = /*@__PURE__*/StyleModule.newName(),\n      baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = {\n  \"&light\": \".\" + baseLightID,\n  \"&dark\": \".\" + baseDarkID\n};\n\nfunction buildTheme(main, spec, scopes) {\n  return new StyleModule(spec, {\n    finish(sel) {\n      return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n        if (m == \"&\") return main;\n        if (!scopes || !scopes[m]) throw new RangeError(`Unsupported selector: ${m}`);\n        return scopes[m];\n      }) : main + \" \" + sel;\n    }\n\n  });\n}\n\nconst baseTheme = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n  \"&.cm-editor\": {\n    position: \"relative !important\",\n    boxSizing: \"border-box\",\n    \"&.cm-focused\": {\n      // Provide a simple default outline to make sure a focused\n      // editor is visually distinct. Can't leave the default behavior\n      // because that will apply to the content element, which is\n      // inside the scrollable container and doesn't include the\n      // gutters. We also can't use an 'auto' outline, since those\n      // are, for some reason, drawn behind the element content, which\n      // will cause things like the active line background to cover\n      // the outline (#297).\n      outline: \"1px dotted #212121\"\n    },\n    display: \"flex !important\",\n    flexDirection: \"column\"\n  },\n  \".cm-scroller\": {\n    display: \"flex !important\",\n    alignItems: \"flex-start !important\",\n    fontFamily: \"monospace\",\n    lineHeight: 1.4,\n    height: \"100%\",\n    overflowX: \"auto\",\n    position: \"relative\",\n    zIndex: 0\n  },\n  \".cm-content\": {\n    margin: 0,\n    flexGrow: 2,\n    minHeight: \"100%\",\n    display: \"block\",\n    whiteSpace: \"pre\",\n    wordWrap: \"normal\",\n    boxSizing: \"border-box\",\n    padding: \"4px 0\",\n    outline: \"none\",\n    \"&[contenteditable=true]\": {\n      WebkitUserModify: \"read-write-plaintext-only\"\n    }\n  },\n  \".cm-lineWrapping\": {\n    whiteSpace_fallback: \"pre-wrap\",\n    whiteSpace: \"break-spaces\",\n    wordBreak: \"break-word\",\n    overflowWrap: \"anywhere\"\n  },\n  \"&light .cm-content\": {\n    caretColor: \"black\"\n  },\n  \"&dark .cm-content\": {\n    caretColor: \"white\"\n  },\n  \".cm-line\": {\n    display: \"block\",\n    padding: \"0 2px 0 4px\"\n  },\n  \".cm-selectionLayer\": {\n    zIndex: -1,\n    contain: \"size style\"\n  },\n  \".cm-selectionBackground\": {\n    position: \"absolute\"\n  },\n  \"&light .cm-selectionBackground\": {\n    background: \"#d9d9d9\"\n  },\n  \"&dark .cm-selectionBackground\": {\n    background: \"#222\"\n  },\n  \"&light.cm-focused .cm-selectionBackground\": {\n    background: \"#d7d4f0\"\n  },\n  \"&dark.cm-focused .cm-selectionBackground\": {\n    background: \"#233\"\n  },\n  \".cm-cursorLayer\": {\n    zIndex: 100,\n    contain: \"size style\",\n    pointerEvents: \"none\"\n  },\n  \"&.cm-focused .cm-cursorLayer\": {\n    animation: \"steps(1) cm-blink 1.2s infinite\"\n  },\n  // Two animations defined so that we can switch between them to\n  // restart the animation without forcing another style\n  // recomputation.\n  \"@keyframes cm-blink\": {\n    \"0%\": {},\n    \"50%\": {\n      visibility: \"hidden\"\n    },\n    \"100%\": {}\n  },\n  \"@keyframes cm-blink2\": {\n    \"0%\": {},\n    \"50%\": {\n      visibility: \"hidden\"\n    },\n    \"100%\": {}\n  },\n  \".cm-cursor, .cm-dropCursor\": {\n    position: \"absolute\",\n    borderLeft: \"1.2px solid black\",\n    marginLeft: \"-0.6px\",\n    pointerEvents: \"none\"\n  },\n  \".cm-cursor\": {\n    display: \"none\"\n  },\n  \"&dark .cm-cursor\": {\n    borderLeftColor: \"#444\"\n  },\n  \"&.cm-focused .cm-cursor\": {\n    display: \"block\"\n  },\n  \"&light .cm-activeLine\": {\n    backgroundColor: \"#f3f9ff\"\n  },\n  \"&dark .cm-activeLine\": {\n    backgroundColor: \"#223039\"\n  },\n  \"&light .cm-specialChar\": {\n    color: \"red\"\n  },\n  \"&dark .cm-specialChar\": {\n    color: \"#f78\"\n  },\n  \".cm-tab\": {\n    display: \"inline-block\",\n    overflow: \"hidden\",\n    verticalAlign: \"bottom\"\n  },\n  \".cm-placeholder\": {\n    color: \"#888\",\n    display: \"inline-block\",\n    verticalAlign: \"top\"\n  },\n  \".cm-button\": {\n    verticalAlign: \"middle\",\n    color: \"inherit\",\n    fontSize: \"70%\",\n    padding: \".2em 1em\",\n    borderRadius: \"1px\"\n  },\n  \"&light .cm-button\": {\n    backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n    border: \"1px solid #888\",\n    \"&:active\": {\n      backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n    }\n  },\n  \"&dark .cm-button\": {\n    backgroundImage: \"linear-gradient(#393939, #111)\",\n    border: \"1px solid #888\",\n    \"&:active\": {\n      backgroundImage: \"linear-gradient(#111, #333)\"\n    }\n  },\n  \".cm-textfield\": {\n    verticalAlign: \"middle\",\n    color: \"inherit\",\n    fontSize: \"70%\",\n    border: \"1px solid silver\",\n    padding: \".2em .5em\"\n  },\n  \"&light .cm-textfield\": {\n    backgroundColor: \"white\"\n  },\n  \"&dark .cm-textfield\": {\n    border: \"1px solid #555\",\n    backgroundColor: \"inherit\"\n  }\n}, lightDarkIDs);\nconst observeOptions = {\n  childList: true,\n  characterData: true,\n  subtree: true,\n  attributes: true,\n  characterDataOldValue: true\n}; // IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\n\nconst useCharData = browser.ie && browser.ie_version <= 11;\n\nclass DOMObserver {\n  constructor(view, onChange, onScrollChanged) {\n    this.view = view;\n    this.onChange = onChange;\n    this.onScrollChanged = onScrollChanged;\n    this.active = false; // The known selection. Kept in our own object, as opposed to just\n    // directly accessing the selection because:\n    //  - Safari doesn't report the right selection in shadow DOM\n    //  - Reading from the selection forces a DOM layout\n    //  - This way, we can ignore selectionchange events if we have\n    //    already seen the 'new' selection\n\n    this.selectionRange = new DOMSelectionState(); // Set when a selection change is detected, cleared on flush\n\n    this.selectionChanged = false;\n    this.delayedFlush = -1;\n    this.resizeTimeout = -1;\n    this.queue = [];\n    this.delayedAndroidKey = null;\n    this.scrollTargets = [];\n    this.intersection = null;\n    this.resize = null;\n    this.intersecting = false;\n    this.gapIntersection = null;\n    this.gaps = []; // Timeout for scheduling check of the parents that need scroll handlers\n\n    this.parentCheck = -1;\n    this.dom = view.contentDOM;\n    this.observer = new MutationObserver(mutations => {\n      for (let mut of mutations) this.queue.push(mut); // IE11 will sometimes (on typing over a selection or\n      // backspacing out a single character text node) call the\n      // observer callback before actually updating the DOM.\n      //\n      // Unrelatedly, iOS Safari will, when ending a composition,\n      // sometimes first clear it, deliver the mutations, and then\n      // reinsert the finished text. CodeMirror's handling of the\n      // deletion will prevent the reinsertion from happening,\n      // breaking composition.\n\n\n      if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) && mutations.some(m => m.type == \"childList\" && m.removedNodes.length || m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length)) this.flushSoon();else this.flush();\n    });\n    if (useCharData) this.onCharData = event => {\n      this.queue.push({\n        target: event.target,\n        type: \"characterData\",\n        oldValue: event.prevValue\n      });\n      this.flushSoon();\n    };\n    this.onSelectionChange = this.onSelectionChange.bind(this);\n\n    if (typeof ResizeObserver == \"function\") {\n      this.resize = new ResizeObserver(() => {\n        if (this.view.docView.lastUpdate < Date.now() - 75 && this.resizeTimeout < 0) this.resizeTimeout = setTimeout(() => {\n          this.resizeTimeout = -1;\n          this.view.requestMeasure();\n        }, 50);\n      });\n      this.resize.observe(view.scrollDOM);\n    }\n\n    this.start();\n    this.onScroll = this.onScroll.bind(this);\n    window.addEventListener(\"scroll\", this.onScroll);\n\n    if (typeof IntersectionObserver == \"function\") {\n      this.intersection = new IntersectionObserver(entries => {\n        if (this.parentCheck < 0) this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n\n        if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0 != this.intersecting) {\n          this.intersecting = !this.intersecting;\n          if (this.intersecting != this.view.inView) this.onScrollChanged(document.createEvent(\"Event\"));\n        }\n      }, {});\n      this.intersection.observe(this.dom);\n      this.gapIntersection = new IntersectionObserver(entries => {\n        if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0) this.onScrollChanged(document.createEvent(\"Event\"));\n      }, {});\n    }\n\n    this.listenForScroll();\n    this.readSelectionRange();\n    this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n  }\n\n  onScroll(e) {\n    if (this.intersecting) this.flush(false);\n    this.onScrollChanged(e);\n  }\n\n  updateGaps(gaps) {\n    if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n      this.gapIntersection.disconnect();\n\n      for (let gap of gaps) this.gapIntersection.observe(gap);\n\n      this.gaps = gaps;\n    }\n  }\n\n  onSelectionChange(event) {\n    if (!this.readSelectionRange() || this.delayedAndroidKey) return;\n    let {\n      view\n    } = this,\n        sel = this.selectionRange;\n    if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel)) return;\n    let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n    if (context && context.ignoreEvent(event)) return; // Deletions on IE11 fire their events in the wrong order, giving\n    // us a selection change event before the DOM changes are\n    // reported.\n    // Chrome Android has a similar issue when backspacing out a\n    // selection (#645).\n\n    if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty && // (Selection.isCollapsed isn't reliable on IE)\n    sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset)) this.flushSoon();else this.flush(false);\n  }\n\n  readSelectionRange() {\n    let {\n      root\n    } = this.view,\n        domSel = getSelection(root); // The Selection object is broken in shadow roots in Safari. See\n    // https://github.com/codemirror/codemirror.next/issues/414\n\n    let range = browser.safari && root.nodeType == 11 && deepActiveElement() == this.view.contentDOM && safariSelectionRangeHack(this.view) || domSel;\n    if (this.selectionRange.eq(range)) return false;\n    this.selectionRange.setRange(range);\n    return this.selectionChanged = true;\n  }\n\n  setSelectionRange(anchor, head) {\n    this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n    this.selectionChanged = false;\n  }\n\n  listenForScroll() {\n    this.parentCheck = -1;\n    let i = 0,\n        changed = null;\n\n    for (let dom = this.dom; dom;) {\n      if (dom.nodeType == 1) {\n        if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom) i++;else if (!changed) changed = this.scrollTargets.slice(0, i);\n        if (changed) changed.push(dom);\n        dom = dom.assignedSlot || dom.parentNode;\n      } else if (dom.nodeType == 11) {\n        // Shadow root\n        dom = dom.host;\n      } else {\n        break;\n      }\n    }\n\n    if (i < this.scrollTargets.length && !changed) changed = this.scrollTargets.slice(0, i);\n\n    if (changed) {\n      for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll);\n\n      for (let dom of this.scrollTargets = changed) dom.addEventListener(\"scroll\", this.onScroll);\n    }\n  }\n\n  ignore(f) {\n    if (!this.active) return f();\n\n    try {\n      this.stop();\n      return f();\n    } finally {\n      this.start();\n      this.clear();\n    }\n  }\n\n  start() {\n    if (this.active) return;\n    this.observer.observe(this.dom, observeOptions);\n    if (useCharData) this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    this.active = true;\n  }\n\n  stop() {\n    if (!this.active) return;\n    this.active = false;\n    this.observer.disconnect();\n    if (useCharData) this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n  } // Throw away any pending changes\n\n\n  clear() {\n    this.observer.takeRecords();\n    this.queue.length = 0;\n    this.selectionChanged = false;\n  } // Chrome Android, especially in combination with GBoard, not only\n  // doesn't reliably fire regular key events, but also often\n  // surrounds the effect of enter or backspace with a bunch of\n  // composition events that, when interrupted, cause text duplication\n  // or other kinds of corruption. This hack makes the editor back off\n  // from handling DOM changes for a moment when such a key is\n  // detected (via beforeinput or keydown), and then dispatches the\n  // key event, throwing away the DOM changes if it gets handled.\n\n\n  delayAndroidKey(key, keyCode) {\n    if (!this.delayedAndroidKey) requestAnimationFrame(() => {\n      let key = this.delayedAndroidKey;\n      this.delayedAndroidKey = null;\n      let startState = this.view.state;\n      if (dispatchKey(this.view.contentDOM, key.key, key.keyCode)) this.processRecords();else this.flush();\n      if (this.view.state == startState) this.view.update([]);\n    }); // Since backspace beforeinput is sometimes signalled spuriously,\n    // Enter always takes precedence.\n\n    if (!this.delayedAndroidKey || key == \"Enter\") this.delayedAndroidKey = {\n      key,\n      keyCode\n    };\n  }\n\n  flushSoon() {\n    if (this.delayedFlush < 0) this.delayedFlush = window.setTimeout(() => {\n      this.delayedFlush = -1;\n      this.flush();\n    }, 20);\n  }\n\n  forceFlush() {\n    if (this.delayedFlush >= 0) {\n      window.clearTimeout(this.delayedFlush);\n      this.delayedFlush = -1;\n      this.flush();\n    }\n  }\n\n  processRecords() {\n    let records = this.queue;\n\n    for (let mut of this.observer.takeRecords()) records.push(mut);\n\n    if (records.length) this.queue = [];\n    let from = -1,\n        to = -1,\n        typeOver = false;\n\n    for (let record of records) {\n      let range = this.readMutation(record);\n      if (!range) continue;\n      if (range.typeOver) typeOver = true;\n\n      if (from == -1) {\n        ({\n          from,\n          to\n        } = range);\n      } else {\n        from = Math.min(range.from, from);\n        to = Math.max(range.to, to);\n      }\n    }\n\n    return {\n      from,\n      to,\n      typeOver\n    };\n  } // Apply pending changes, if any\n\n\n  flush() {\n    let readSelection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    // Completely hold off flushing when pending keys are set—the code\n    // managing those will make sure processRecords is called and the\n    // view is resynchronized after\n    if (this.delayedFlush >= 0 || this.delayedAndroidKey) return;\n    if (readSelection) this.readSelectionRange();\n    let {\n      from,\n      to,\n      typeOver\n    } = this.processRecords();\n    let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n    if (from < 0 && !newSel) return;\n    this.selectionChanged = false;\n    let startState = this.view.state;\n    this.onChange(from, to, typeOver); // The view wasn't updated\n\n    if (this.view.state == startState) this.view.update([]);\n  }\n\n  readMutation(rec) {\n    let cView = this.view.docView.nearest(rec.target);\n    if (!cView || cView.ignoreMutation(rec)) return null;\n    cView.markDirty(rec.type == \"attributes\");\n    if (rec.type == \"attributes\") cView.dirty |= 4\n    /* Attrs */\n    ;\n\n    if (rec.type == \"childList\") {\n      let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n      let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n      return {\n        from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n        to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd,\n        typeOver: false\n      };\n    } else if (rec.type == \"characterData\") {\n      return {\n        from: cView.posAtStart,\n        to: cView.posAtEnd,\n        typeOver: rec.target.nodeValue == rec.oldValue\n      };\n    } else {\n      return null;\n    }\n  }\n\n  destroy() {\n    var _a, _b, _c;\n\n    this.stop();\n    (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n    (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n    (_c = this.resize) === null || _c === void 0 ? void 0 : _c.disconnect();\n\n    for (let dom of this.scrollTargets) dom.removeEventListener(\"scroll\", this.onScroll);\n\n    window.removeEventListener(\"scroll\", this.onScroll);\n    this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n    clearTimeout(this.parentCheck);\n    clearTimeout(this.resizeTimeout);\n  }\n\n}\n\nfunction findChild(cView, dom, dir) {\n  while (dom) {\n    let curView = ContentView.get(dom);\n    if (curView && curView.parent == cView) return curView;\n    let parent = dom.parentNode;\n    dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n  }\n\n  return null;\n} // Used to work around a Safari Selection/shadow DOM bug (#414)\n\n\nfunction safariSelectionRangeHack(view) {\n  let found = null; // Because Safari (at least in 2018-2021) doesn't provide regular\n  // access to the selection inside a shadowroot, we have to perform a\n  // ridiculous hack to get at it—using `execCommand` to trigger a\n  // `beforeInput` event so that we can read the target range from the\n  // event.\n\n  function read(event) {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n    found = event.getTargetRanges()[0];\n  }\n\n  view.contentDOM.addEventListener(\"beforeinput\", read, true);\n  document.execCommand(\"indent\");\n  view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n  if (!found) return null;\n  let anchorNode = found.startContainer,\n      anchorOffset = found.startOffset;\n  let focusNode = found.endContainer,\n      focusOffset = found.endOffset;\n  let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor); // Since such a range doesn't distinguish between anchor and head,\n  // use a heuristic that flips it around if its end matches the\n  // current anchor.\n\n  if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset)) [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n  return {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset\n  };\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n  let change, newSel;\n  let sel = view.state.selection.main;\n\n  if (start > -1) {\n    let bounds = view.docView.domBoundsAround(start, end, 0);\n    if (!bounds || view.state.readOnly) return;\n    let {\n      from,\n      to\n    } = bounds;\n    let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view);\n    let reader = new DOMReader(selPoints, view);\n    reader.readRange(bounds.startDOM, bounds.endDOM);\n    newSel = selectionFromPoints(selPoints, from);\n    let preferredPos = sel.from,\n        preferredSide = null; // Prefer anchoring to end when Backspace is pressed (or, on\n    // Android, when something was deleted)\n\n    if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 || browser.android && reader.text.length < to - from) {\n      preferredPos = sel.to;\n      preferredSide = \"end\";\n    }\n\n    let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n    if (diff) change = {\n      from: from + diff.from,\n      to: from + diff.toA,\n      insert: view.state.toText(reader.text.slice(diff.from, diff.toB))\n    };\n  } else if (view.hasFocus || !view.state.facet(editable)) {\n    let domSel = view.observer.selectionRange;\n    let {\n      impreciseHead: iHead,\n      impreciseAnchor: iAnchor\n    } = view.docView;\n    let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset || !contains(view.contentDOM, domSel.focusNode) ? view.state.selection.main.head : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n    let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset || !contains(view.contentDOM, domSel.anchorNode) ? view.state.selection.main.anchor : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n    if (head != sel.head || anchor != sel.anchor) newSel = EditorSelection.single(anchor, head);\n  }\n\n  if (!change && !newSel) return; // Heuristic to notice typing over a selected character\n\n  if (!change && typeOver && !sel.empty && newSel && newSel.main.empty) change = {\n    from: sel.from,\n    to: sel.to,\n    insert: view.state.doc.slice(sel.from, sel.to)\n  }; // If the change is inside the selection and covers most of it,\n  // assume it is a selection replace (with identical characters at\n  // the start/end not included in the diff)\n  else if (change && change.from >= sel.from && change.to <= sel.to && (change.from != sel.from || change.to != sel.to) && sel.to - sel.from - (change.to - change.from) <= 4) change = {\n    from: sel.from,\n    to: sel.to,\n    insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n  };\n\n  if (change) {\n    let startState = view.state;\n    if (browser.ios && view.inputState.flushIOSKey(view)) return; // Android browsers don't fire reasonable key events for enter,\n    // backspace, or delete. So this detects changes that look like\n    // they're caused by those keys, and reinterprets them as key\n    // events. (Some of these keys are also handled by beforeinput\n    // events and the pendingAndroidKey mechanism, but that's not\n    // reliable in all situations.)\n\n    if (browser.android && (change.from == sel.from && change.to == sel.to && change.insert.length == 1 && change.insert.lines == 2 && dispatchKey(view.contentDOM, \"Enter\", 13) || change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 && dispatchKey(view.contentDOM, \"Backspace\", 8) || change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 && dispatchKey(view.contentDOM, \"Delete\", 46))) return;\n    let text = change.insert.toString();\n    if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text))) return;\n    if (view.inputState.composing >= 0) view.inputState.composing++;\n    let tr;\n\n    if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 && (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) && view.inputState.composing < 0) {\n      let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n      let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n      tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n    } else {\n      let changes = startState.changes(change);\n      let mainSel = newSel && !startState.selection.main.eq(newSel.main) && newSel.main.to <= changes.newLength ? newSel.main : undefined; // Try to apply a composition change to all cursors\n\n      if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 && change.to <= sel.to && change.to >= sel.to - 10) {\n        let replaced = view.state.sliceDoc(change.from, change.to);\n        let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);\n        let offset = sel.to - change.to,\n            size = sel.to - sel.from;\n        tr = startState.changeByRange(range => {\n          if (range.from == sel.from && range.to == sel.to) return {\n            changes,\n            range: mainSel || range.map(changes)\n          };\n          let to = range.to - offset,\n              from = to - replaced.length;\n          if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced || // Unfortunately, there's no way to make multiple\n          // changes in the same node work without aborting\n          // composition, so cursors in the composition range are\n          // ignored.\n          compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to) return {\n            range\n          };\n          let rangeChanges = startState.changes({\n            from,\n            to,\n            insert: change.insert\n          }),\n              selOff = range.to - sel.to;\n          return {\n            changes: rangeChanges,\n            range: !mainSel ? range.map(rangeChanges) : EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n          };\n        });\n      } else {\n        tr = {\n          changes,\n          selection: mainSel && startState.selection.replaceRange(mainSel)\n        };\n      }\n    }\n\n    let userEvent = \"input.type\";\n\n    if (view.composing) {\n      userEvent += \".compose\";\n\n      if (view.inputState.compositionFirstChange) {\n        userEvent += \".start\";\n        view.inputState.compositionFirstChange = false;\n      }\n    }\n\n    view.dispatch(tr, {\n      scrollIntoView: true,\n      userEvent\n    });\n  } else if (newSel && !newSel.main.eq(sel)) {\n    let scrollIntoView = false,\n        userEvent = \"select\";\n\n    if (view.inputState.lastSelectionTime > Date.now() - 50) {\n      if (view.inputState.lastSelectionOrigin == \"select\") scrollIntoView = true;\n      userEvent = view.inputState.lastSelectionOrigin;\n    }\n\n    view.dispatch({\n      selection: newSel,\n      scrollIntoView,\n      userEvent\n    });\n  }\n}\n\nfunction findDiff(a, b, preferredPos, preferredSide) {\n  let minLen = Math.min(a.length, b.length);\n  let from = 0;\n\n  while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from)) from++;\n\n  if (from == minLen && a.length == b.length) return null;\n  let toA = a.length,\n      toB = b.length;\n\n  while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n    toA--;\n    toB--;\n  }\n\n  if (preferredSide == \"end\") {\n    let adjust = Math.max(0, from - Math.min(toA, toB));\n    preferredPos -= toA + adjust - from;\n  }\n\n  if (toA < from && a.length < b.length) {\n    let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n    from -= move;\n    toB = from + (toB - toA);\n    toA = from;\n  } else if (toB < from) {\n    let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n    from -= move;\n    toA = from + (toA - toB);\n    toB = from;\n  }\n\n  return {\n    from,\n    toA,\n    toB\n  };\n}\n\nfunction selectionPoints(view) {\n  let result = [];\n  if (view.root.activeElement != view.contentDOM) return result;\n  let {\n    anchorNode,\n    anchorOffset,\n    focusNode,\n    focusOffset\n  } = view.observer.selectionRange;\n\n  if (anchorNode) {\n    result.push(new DOMPoint(anchorNode, anchorOffset));\n    if (focusNode != anchorNode || focusOffset != anchorOffset) result.push(new DOMPoint(focusNode, focusOffset));\n  }\n\n  return result;\n}\n\nfunction selectionFromPoints(points, base) {\n  if (points.length == 0) return null;\n  let anchor = points[0].pos,\n      head = points.length == 2 ? points[1].pos : anchor;\n  return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n} // The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\n\n\nclass EditorView {\n  /**\n  Construct a new view. You'll usually want to put `view.dom` into\n  your document after creating a view, so that the user can see\n  it.\n  */\n  constructor() {\n    let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.plugins = [];\n    this.pluginMap = new Map();\n    this.editorAttrs = {};\n    this.contentAttrs = {};\n    this.bidiCache = [];\n    this.destroyed = false;\n    /**\n    @internal\n    */\n\n    this.updateState = 2\n    /* Updating */\n    ;\n    /**\n    @internal\n    */\n\n    this.measureScheduled = -1;\n    /**\n    @internal\n    */\n\n    this.measureRequests = [];\n    this.contentDOM = document.createElement(\"div\");\n    this.scrollDOM = document.createElement(\"div\");\n    this.scrollDOM.tabIndex = -1;\n    this.scrollDOM.className = \"cm-scroller\";\n    this.scrollDOM.appendChild(this.contentDOM);\n    this.announceDOM = document.createElement(\"div\");\n    this.announceDOM.style.cssText = \"position: absolute; top: -10000px\";\n    this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n    this.dom = document.createElement(\"div\");\n    this.dom.appendChild(this.announceDOM);\n    this.dom.appendChild(this.scrollDOM);\n\n    this._dispatch = config.dispatch || (tr => this.update([tr]));\n\n    this.dispatch = this.dispatch.bind(this);\n    this.root = config.root || getRoot(config.parent) || document;\n    this.viewState = new ViewState(config.state || EditorState.create());\n    this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n\n    for (let plugin of this.plugins) plugin.update(this);\n\n    this.observer = new DOMObserver(this, (from, to, typeOver) => {\n      applyDOMChange(this, from, to, typeOver);\n    }, event => {\n      this.inputState.runScrollHandlers(this, event);\n      if (this.observer.intersecting) this.measure();\n    });\n    this.inputState = new InputState(this);\n    this.docView = new DocView(this);\n    this.mountStyles();\n    this.updateAttrs();\n    this.updateState = 0\n    /* Idle */\n    ;\n    ensureGlobalHandler();\n    this.requestMeasure();\n    if (config.parent) config.parent.appendChild(this.dom);\n  }\n  /**\n  The current editor state.\n  */\n\n\n  get state() {\n    return this.viewState.state;\n  }\n  /**\n  To be able to display large documents without consuming too much\n  memory or overloading the browser, CodeMirror only draws the\n  code that is visible (plus a margin around it) to the DOM. This\n  property tells you the extent of the current drawn viewport, in\n  document positions.\n  */\n\n\n  get viewport() {\n    return this.viewState.viewport;\n  }\n  /**\n  When there are, for example, large collapsed ranges in the\n  viewport, its size can be a lot bigger than the actual visible\n  content. Thus, if you are doing something like styling the\n  content in the viewport, it is preferable to only do so for\n  these ranges, which are the subset of the viewport that is\n  actually drawn.\n  */\n\n\n  get visibleRanges() {\n    return this.viewState.visibleRanges;\n  }\n  /**\n  Returns false when the editor is entirely scrolled out of view\n  or otherwise hidden.\n  */\n\n\n  get inView() {\n    return this.viewState.inView;\n  }\n  /**\n  Indicates whether the user is currently composing text via\n  [IME](https://en.wikipedia.org/wiki/Input_method).\n  */\n\n\n  get composing() {\n    return this.inputState.composing > 0;\n  }\n\n  dispatch() {\n    this._dispatch(arguments.length == 1 && (arguments.length <= 0 ? undefined : arguments[0]) instanceof Transaction ? arguments.length <= 0 ? undefined : arguments[0] : this.state.update(...arguments));\n  }\n  /**\n  Update the view for the given array of transactions. This will\n  update the visible document and selection to match the state\n  produced by the transactions, and notify view plugins of the\n  change. You should usually call\n  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n  as a primitive.\n  */\n\n\n  update(transactions) {\n    if (this.updateState != 0\n    /* Idle */\n    ) throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n    let redrawn = false,\n        update;\n    let state = this.state;\n\n    for (let tr of transactions) {\n      if (tr.startState != state) throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n      state = tr.state;\n    }\n\n    if (this.destroyed) {\n      this.viewState.state = state;\n      return;\n    } // When the phrases change, redraw the editor\n\n\n    if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases)) return this.setState(state);\n    update = new ViewUpdate(this, state, transactions);\n    let scrollTarget = this.viewState.scrollTarget;\n\n    try {\n      this.updateState = 2\n      /* Updating */\n      ;\n\n      for (let tr of transactions) {\n        if (scrollTarget) scrollTarget = scrollTarget.map(tr.changes);\n\n        if (tr.scrollIntoView) {\n          let {\n            main\n          } = tr.state.selection;\n          scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n        }\n\n        for (let e of tr.effects) {\n          if (e.is(scrollTo)) scrollTarget = new ScrollTarget(e.value);else if (e.is(centerOn)) scrollTarget = new ScrollTarget(e.value, \"center\");else if (e.is(scrollIntoView)) scrollTarget = e.value;\n        }\n      }\n\n      this.viewState.update(update, scrollTarget);\n      this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n\n      if (!update.empty) {\n        this.updatePlugins(update);\n        this.inputState.update(update);\n      }\n\n      redrawn = this.docView.update(update);\n      if (this.state.facet(styleModule) != this.styleModules) this.mountStyles();\n      this.updateAttrs();\n      this.showAnnouncements(transactions);\n      this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n    } finally {\n      this.updateState = 0\n      /* Idle */\n      ;\n    }\n\n    if (redrawn || scrollTarget || this.viewState.mustEnforceCursorAssoc) this.requestMeasure();\n    if (!update.empty) for (let listener of this.state.facet(updateListener)) listener(update);\n  }\n  /**\n  Reset the view to the given state. (This will cause the entire\n  document to be redrawn and all view plugins to be reinitialized,\n  so you should probably only use it when the new state isn't\n  derived from the old state. Otherwise, use\n  [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n  */\n\n\n  setState(newState) {\n    if (this.updateState != 0\n    /* Idle */\n    ) throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n\n    if (this.destroyed) {\n      this.viewState.state = newState;\n      return;\n    }\n\n    this.updateState = 2\n    /* Updating */\n    ;\n    let hadFocus = this.hasFocus;\n\n    try {\n      for (let plugin of this.plugins) plugin.destroy(this);\n\n      this.viewState = new ViewState(newState);\n      this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n      this.pluginMap.clear();\n\n      for (let plugin of this.plugins) plugin.update(this);\n\n      this.docView = new DocView(this);\n      this.inputState.ensureHandlers(this);\n      this.mountStyles();\n      this.updateAttrs();\n      this.bidiCache = [];\n    } finally {\n      this.updateState = 0\n      /* Idle */\n      ;\n    }\n\n    if (hadFocus) this.focus();\n    this.requestMeasure();\n  }\n\n  updatePlugins(update) {\n    let prevSpecs = update.startState.facet(viewPlugin),\n        specs = update.state.facet(viewPlugin);\n\n    if (prevSpecs != specs) {\n      let newPlugins = [];\n\n      for (let spec of specs) {\n        let found = prevSpecs.indexOf(spec);\n\n        if (found < 0) {\n          newPlugins.push(new PluginInstance(spec));\n        } else {\n          let plugin = this.plugins[found];\n          plugin.mustUpdate = update;\n          newPlugins.push(plugin);\n        }\n      }\n\n      for (let plugin of this.plugins) if (plugin.mustUpdate != update) plugin.destroy(this);\n\n      this.plugins = newPlugins;\n      this.pluginMap.clear();\n      this.inputState.ensureHandlers(this);\n    } else {\n      for (let p of this.plugins) p.mustUpdate = update;\n    }\n\n    for (let i = 0; i < this.plugins.length; i++) this.plugins[i].update(this);\n  }\n  /**\n  @internal\n  */\n\n\n  measure() {\n    let flush = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    if (this.destroyed) return;\n    if (this.measureScheduled > -1) cancelAnimationFrame(this.measureScheduled);\n    this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n\n    if (flush) this.observer.flush();\n    let updated = null;\n\n    try {\n      for (let i = 0;; i++) {\n        this.updateState = 1\n        /* Measuring */\n        ;\n        let oldViewport = this.viewport;\n        let changed = this.viewState.measure(this);\n        if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null) break;\n\n        if (i > 5) {\n          console.warn(this.measureRequests.length ? \"Measure loop restarted more than 5 times\" : \"Viewport failed to stabilize\");\n          break;\n        }\n\n        let measuring = []; // Only run measure requests in this cycle when the viewport didn't change\n\n        if (!(changed & 4\n        /* Viewport */\n        )) [this.measureRequests, measuring] = [measuring, this.measureRequests];\n        let measured = measuring.map(m => {\n          try {\n            return m.read(this);\n          } catch (e) {\n            logException(this.state, e);\n            return BadMeasure;\n          }\n        });\n        let update = new ViewUpdate(this, this.state),\n            redrawn = false,\n            scrolled = false;\n        update.flags |= changed;\n        if (!updated) updated = update;else updated.flags |= changed;\n        this.updateState = 2\n        /* Updating */\n        ;\n\n        if (!update.empty) {\n          this.updatePlugins(update);\n          this.inputState.update(update);\n          this.updateAttrs();\n          redrawn = this.docView.update(update);\n        }\n\n        for (let i = 0; i < measuring.length; i++) if (measured[i] != BadMeasure) {\n          try {\n            let m = measuring[i];\n            if (m.write) m.write(measured[i], this);\n          } catch (e) {\n            logException(this.state, e);\n          }\n        }\n\n        if (this.viewState.scrollTarget) {\n          this.docView.scrollIntoView(this.viewState.scrollTarget);\n          this.viewState.scrollTarget = null;\n          scrolled = true;\n        }\n\n        if (redrawn) this.docView.updateSelection(true);\n        if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to && !scrolled && this.measureRequests.length == 0) break;\n      }\n    } finally {\n      this.updateState = 0\n      /* Idle */\n      ;\n      this.measureScheduled = -1;\n    }\n\n    if (updated && !updated.empty) for (let listener of this.state.facet(updateListener)) listener(updated);\n  }\n  /**\n  Get the CSS classes for the currently active editor themes.\n  */\n\n\n  get themeClasses() {\n    return baseThemeID + \" \" + (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" + this.state.facet(theme);\n  }\n\n  updateAttrs() {\n    let editorAttrs = attrsFromFacet(this, editorAttributes, {\n      class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n    });\n    let contentAttrs = {\n      spellcheck: \"false\",\n      autocorrect: \"off\",\n      autocapitalize: \"off\",\n      translate: \"no\",\n      contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n      class: \"cm-content\",\n      style: `${browser.tabSize}: ${this.state.tabSize}`,\n      role: \"textbox\",\n      \"aria-multiline\": \"true\"\n    };\n    if (this.state.readOnly) contentAttrs[\"aria-readonly\"] = \"true\";\n    attrsFromFacet(this, contentAttributes, contentAttrs);\n    this.observer.ignore(() => {\n      updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n      updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n    });\n    this.editorAttrs = editorAttrs;\n    this.contentAttrs = contentAttrs;\n  }\n\n  showAnnouncements(trs) {\n    let first = true;\n\n    for (let tr of trs) for (let effect of tr.effects) if (effect.is(EditorView.announce)) {\n      if (first) this.announceDOM.textContent = \"\";\n      first = false;\n      let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n      div.textContent = effect.value;\n    }\n  }\n\n  mountStyles() {\n    this.styleModules = this.state.facet(styleModule);\n    StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n  }\n\n  readMeasured() {\n    if (this.updateState == 2\n    /* Updating */\n    ) throw new Error(\"Reading the editor layout isn't allowed during an update\");\n    if (this.updateState == 0\n    /* Idle */\n    && this.measureScheduled > -1) this.measure(false);\n  }\n  /**\n  Schedule a layout measurement, optionally providing callbacks to\n  do custom DOM measuring followed by a DOM write phase. Using\n  this is preferable reading DOM layout directly from, for\n  example, an event handler, because it'll make sure measuring and\n  drawing done by other components is synchronized, avoiding\n  unnecessary DOM layout computations.\n  */\n\n\n  requestMeasure(request) {\n    if (this.measureScheduled < 0) this.measureScheduled = requestAnimationFrame(() => this.measure());\n\n    if (request) {\n      if (request.key != null) for (let i = 0; i < this.measureRequests.length; i++) {\n        if (this.measureRequests[i].key === request.key) {\n          this.measureRequests[i] = request;\n          return;\n        }\n      }\n      this.measureRequests.push(request);\n    }\n  }\n  /**\n  Collect all values provided by the active plugins for a given\n  field.\n  */\n\n\n  pluginField(field) {\n    let result = [];\n\n    for (let plugin of this.plugins) plugin.update(this).takeField(field, result);\n\n    return result;\n  }\n  /**\n  Get the value of a specific plugin, if present. Note that\n  plugins that crash can be dropped from a view, so even when you\n  know you registered a given plugin, it is recommended to check\n  the return value of this method.\n  */\n\n\n  plugin(plugin) {\n    let known = this.pluginMap.get(plugin);\n    if (known === undefined || known && known.spec != plugin) this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n    return known && known.update(this).value;\n  }\n  /**\n  The top position of the document, in screen coordinates. This\n  may be negative when the editor is scrolled down. Points\n  directly to the top of the first line, not above the padding.\n  */\n\n\n  get documentTop() {\n    return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n  }\n  /**\n  Reports the padding above and below the document.\n  */\n\n\n  get documentPadding() {\n    return {\n      top: this.viewState.paddingTop,\n      bottom: this.viewState.paddingBottom\n    };\n  }\n  /**\n  Find the line or block widget at the given vertical position.\n  \n  By default, this position is interpreted as a screen position,\n  meaning `docTop` is set to the DOM top position of the editor\n  content (forcing a layout). You can pass a different `docTop`\n  value—for example 0 to interpret `height` as a document-relative\n  position, or a precomputed document top\n  (`view.contentDOM.getBoundingClientRect().top`) to limit layout\n  queries.\n  \n  *Deprecated: use `elementAtHeight` instead.*\n  */\n\n\n  blockAtHeight(height, docTop) {\n    let top = ensureTop(docTop, this);\n    return this.elementAtHeight(height - top).moveY(top);\n  }\n  /**\n  Find the text line or block widget at the given vertical\n  position (which is interpreted as relative to the [top of the\n  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)\n  */\n\n\n  elementAtHeight(height) {\n    this.readMeasured();\n    return this.viewState.elementAtHeight(height);\n  }\n  /**\n  Find information for the visual line (see\n  [`visualLineAt`](https://codemirror.net/6/docs/ref/#view.EditorView.visualLineAt)) at the given\n  vertical position. The resulting block info might hold another\n  array of block info structs in its `type` field if this line\n  consists of more than one block.\n  \n  Defaults to treating `height` as a screen position. See\n  [`blockAtHeight`](https://codemirror.net/6/docs/ref/#view.EditorView.blockAtHeight) for the\n  interpretation of the `docTop` parameter.\n  \n  *Deprecated: use `lineBlockAtHeight` instead.*\n  */\n\n\n  visualLineAtHeight(height, docTop) {\n    let top = ensureTop(docTop, this);\n    return this.lineBlockAtHeight(height - top).moveY(top);\n  }\n  /**\n  Find the line block (see\n  [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n  height.\n  */\n\n\n  lineBlockAtHeight(height) {\n    this.readMeasured();\n    return this.viewState.lineBlockAtHeight(height);\n  }\n  /**\n  Iterate over the height information of the visual lines in the\n  viewport. The heights of lines are reported relative to the\n  given document top, which defaults to the screen position of the\n  document (forcing a layout).\n  \n  *Deprecated: use `viewportLineBlocks` instead.*\n  */\n\n\n  viewportLines(f, docTop) {\n    let top = ensureTop(docTop, this);\n\n    for (let line of this.viewportLineBlocks) f(line.moveY(top));\n  }\n  /**\n  Get the extent and vertical position of all [line\n  blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n  are relative to the [top of the\n  document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n  */\n\n\n  get viewportLineBlocks() {\n    return this.viewState.viewportLines;\n  }\n  /**\n  Find the extent and height of the visual line (a range delimited\n  on both sides by either non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range)\n  line breaks, or the start/end of the document) at the given position.\n  \n  Vertical positions are computed relative to the `docTop`\n  argument, which defaults to 0 for this method. You can pass\n  `view.contentDOM.getBoundingClientRect().top` here to get screen\n  coordinates.\n  \n  *Deprecated: use `lineBlockAt` instead.*\n  */\n\n\n  visualLineAt(pos) {\n    let docTop = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return this.lineBlockAt(pos).moveY(docTop + this.viewState.paddingTop);\n  }\n  /**\n  Find the line block around the given document position. A line\n  block is a range delimited on both sides by either a\n  non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range) line breaks, or the\n  start/end of the document. It will usually just hold a line of\n  text, but may be broken into multiple textblocks by block\n  widgets.\n  */\n\n\n  lineBlockAt(pos) {\n    return this.viewState.lineBlockAt(pos);\n  }\n  /**\n  The editor's total content height.\n  */\n\n\n  get contentHeight() {\n    return this.viewState.contentHeight;\n  }\n  /**\n  Move a cursor position by [grapheme\n  cluster](https://codemirror.net/6/docs/ref/#text.findClusterBreak). `forward` determines whether\n  the motion is away from the line start, or towards it. Motion in\n  bidirectional text is in visual order, in the editor's [text\n  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). When the start\n  position was the last one on the line, the returned position\n  will be across the line break. If there is no further line, the\n  original position is returned.\n  \n  By default, this method moves over a single cluster. The\n  optional `by` argument can be used to move across more. It will\n  be called with the first cluster as argument, and should return\n  a predicate that determines, for each subsequent cluster,\n  whether it should also be moved over.\n  */\n\n\n  moveByChar(start, forward, by) {\n    return skipAtoms(this, start, moveByChar(this, start, forward, by));\n  }\n  /**\n  Move a cursor position across the next group of either\n  [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n  non-whitespace characters.\n  */\n\n\n  moveByGroup(start, forward) {\n    return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n  }\n  /**\n  Move to the next line boundary in the given direction. If\n  `includeWrap` is true, line wrapping is on, and there is a\n  further wrap point on the current line, the wrap point will be\n  returned. Otherwise this function will return the start or end\n  of the line.\n  */\n\n\n  moveToLineBoundary(start, forward) {\n    let includeWrap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n    return moveToLineBoundary(this, start, forward, includeWrap);\n  }\n  /**\n  Move a cursor position vertically. When `distance` isn't given,\n  it defaults to moving to the next line (including wrapped\n  lines). Otherwise, `distance` should provide a positive distance\n  in pixels.\n  \n  When `start` has a\n  [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n  motion will use that as a target horizontal position. Otherwise,\n  the cursor's own horizontal position is used. The returned\n  cursor will have its goal column set to whichever column was\n  used.\n  */\n\n\n  moveVertically(start, forward, distance) {\n    return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n  } // FIXME remove on next major version\n\n\n  scrollPosIntoView(pos) {\n    this.dispatch({\n      effects: scrollTo.of(EditorSelection.cursor(pos))\n    });\n  }\n  /**\n  Find the DOM parent node and offset (child offset if `node` is\n  an element, character offset when it is a text node) at the\n  given document position.\n  \n  Note that for positions that aren't currently in\n  `visibleRanges`, the resulting DOM position isn't necessarily\n  meaningful (it may just point before or after a placeholder\n  element).\n  */\n\n\n  domAtPos(pos) {\n    return this.docView.domAtPos(pos);\n  }\n  /**\n  Find the document position at the given DOM node. Can be useful\n  for associating positions with DOM events. Will raise an error\n  when `node` isn't part of the editor content.\n  */\n\n\n  posAtDOM(node) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    return this.docView.posFromDOM(node, offset);\n  }\n\n  posAtCoords(coords) {\n    let precise = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    this.readMeasured();\n    return posAtCoords(this, coords, precise);\n  }\n  /**\n  Get the screen coordinates at the given document position.\n  `side` determines whether the coordinates are based on the\n  element before (-1) or after (1) the position (if no element is\n  available on the given side, the method will transparently use\n  another strategy to get reasonable coordinates).\n  */\n\n\n  coordsAtPos(pos) {\n    let side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    this.readMeasured();\n    let rect = this.docView.coordsAt(pos, side);\n    if (!rect || rect.left == rect.right) return rect;\n    let line = this.state.doc.lineAt(pos),\n        order = this.bidiSpans(line);\n    let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n    return flattenRect(rect, span.dir == Direction.LTR == side > 0);\n  }\n  /**\n  The default width of a character in the editor. May not\n  accurately reflect the width of all characters (given variable\n  width fonts or styling of invididual ranges).\n  */\n\n\n  get defaultCharacterWidth() {\n    return this.viewState.heightOracle.charWidth;\n  }\n  /**\n  The default height of a line in the editor. May not be accurate\n  for all lines.\n  */\n\n\n  get defaultLineHeight() {\n    return this.viewState.heightOracle.lineHeight;\n  }\n  /**\n  The text direction\n  ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n  CSS property) of the editor.\n  */\n\n\n  get textDirection() {\n    return this.viewState.heightOracle.direction;\n  }\n  /**\n  Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n  (as determined by the\n  [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n  CSS property of its content element).\n  */\n\n\n  get lineWrapping() {\n    return this.viewState.heightOracle.lineWrapping;\n  }\n  /**\n  Returns the bidirectional text structure of the given line\n  (which should be in the current document) as an array of span\n  objects. The order of these spans matches the [text\n  direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n  left-to-right, the leftmost spans come first, otherwise the\n  rightmost spans come first.\n  */\n\n\n  bidiSpans(line) {\n    if (line.length > MaxBidiLine) return trivialOrder(line.length);\n    let dir = this.textDirection;\n\n    for (let entry of this.bidiCache) if (entry.from == line.from && entry.dir == dir) return entry.order;\n\n    let order = computeOrder(line.text, this.textDirection);\n    this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n    return order;\n  }\n  /**\n  Check whether the editor has focus.\n  */\n\n\n  get hasFocus() {\n    var _a; // Safari return false for hasFocus when the context menu is open\n    // or closing, which leads us to ignore selection changes from the\n    // context menu because it looks like the editor isn't focused.\n    // This kludges around that.\n\n\n    return (document.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) && this.root.activeElement == this.contentDOM;\n  }\n  /**\n  Put focus on the editor.\n  */\n\n\n  focus() {\n    this.observer.ignore(() => {\n      focusPreventScroll(this.contentDOM);\n      this.docView.updateSelection();\n    });\n  }\n  /**\n  Clean up this editor view, removing its element from the\n  document, unregistering event handlers, and notifying\n  plugins. The view instance can no longer be used after\n  calling this.\n  */\n\n\n  destroy() {\n    for (let plugin of this.plugins) plugin.destroy(this);\n\n    this.plugins = [];\n    this.inputState.destroy();\n    this.dom.remove();\n    this.observer.destroy();\n    if (this.measureScheduled > -1) cancelAnimationFrame(this.measureScheduled);\n    this.destroyed = true;\n  }\n  /**\n  Returns an effect that can be\n  [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n  cause it to scroll the given position or range into view.\n  */\n\n\n  static scrollIntoView(pos) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n  }\n  /**\n  Facet that can be used to add DOM event handlers. The value\n  should be an object mapping event names to handler functions. The\n  first such function to return true will be assumed to have handled\n  that event, and no other handlers or built-in behavior will be\n  activated for it.\n  These are registered on the [content\n  element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except for `scroll`\n  handlers, which will be called any time the editor's [scroll\n  element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of its parent nodes\n  is scrolled.\n  */\n\n\n  static domEventHandlers(handlers) {\n    return ViewPlugin.define(() => ({}), {\n      eventHandlers: handlers\n    });\n  }\n  /**\n  Create a theme extension. The first argument can be a\n  [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n  style spec providing the styles for the theme. These will be\n  prefixed with a generated class for the style.\n  \n  Because the selectors will be prefixed with a scope class, rule\n  that directly match the editor's [wrapper\n  element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n  added—need to be explicitly differentiated by adding an `&` to\n  the selector for that element—for example\n  `&.cm-focused`.\n  \n  When `dark` is set to true, the theme will be marked as dark,\n  which will cause the `&dark` rules from [base\n  themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n  `&light` when a light theme is active).\n  */\n\n\n  static theme(spec, options) {\n    let prefix = StyleModule.newName();\n    let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n    if (options && options.dark) result.push(darkTheme.of(true));\n    return result;\n  }\n  /**\n  Create an extension that adds styles to the base theme. Like\n  with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n  place of the editor wrapper element when directly targeting\n  that. You can also use `&dark` or `&light` instead to only\n  target editors with a dark or light theme.\n  */\n\n\n  static baseTheme(spec) {\n    return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n  }\n\n}\n/**\nEffect that can be [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a\ntransaction to make it scroll the given range into view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\n\n\nEditorView.scrollTo = scrollTo;\n/**\nEffect that makes the editor scroll the given range to the\ncenter of the visible view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\n\nEditorView.centerOn = centerOn;\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\n\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\n\nEditorView.inputHandler = inputHandler;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\n\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\n\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot longer have its `contenteditable` attribute set. (Note that\nthis doesn't affect API calls that change the editor content,\neven when those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\n\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\n\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\n\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds\na new range to the existing selection or replaces it entirely.\n*/\n\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. See also [view\nplugins](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), which have a separate\nmechanism for providing decorations.\n*/\n\nEditorView.decorations = decorations;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\n\nEditorView.darkTheme = darkTheme;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\n\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\n\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\n\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({\n  \"class\": \"cm-lineWrapping\"\n});\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\n\nEditorView.announce = /*@__PURE__*/StateEffect.define(); // Maximum line length for which we compute accurate bidi info\n\nconst MaxBidiLine = 4096; // FIXME remove this and its callers on next breaking release\n\nfunction ensureTop(given, view) {\n  return (given == null ? view.contentDOM.getBoundingClientRect().top : given) + view.viewState.paddingTop;\n}\n\nlet resizeDebounce = -1;\n\nfunction ensureGlobalHandler() {\n  window.addEventListener(\"resize\", () => {\n    if (resizeDebounce == -1) resizeDebounce = setTimeout(handleResize, 50);\n  });\n}\n\nfunction handleResize() {\n  resizeDebounce = -1;\n  let found = document.querySelectorAll(\".cm-content\");\n\n  for (let i = 0; i < found.length; i++) {\n    let docView = ContentView.get(found[i]);\n    if (docView) docView.editorView.requestMeasure();\n  }\n}\n\nconst BadMeasure = {};\n\nclass CachedOrder {\n  constructor(from, to, dir, order) {\n    this.from = from;\n    this.to = to;\n    this.dir = dir;\n    this.order = order;\n  }\n\n  static update(cache, changes) {\n    if (changes.empty) return cache;\n    let result = [],\n        lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n\n    for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n      let entry = cache[i];\n      if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to)) result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n    }\n\n    return result;\n  }\n\n}\n\nfunction attrsFromFacet(view, facet, base) {\n  for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n    let source = sources[i],\n        value = typeof source == \"function\" ? source(view) : source;\n    if (value) combineAttrs(value, base);\n  }\n\n  return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\n\nfunction normalizeKeyName(name, platform) {\n  const parts = name.split(/-(?!$)/);\n  let result = parts[parts.length - 1];\n  if (result == \"Space\") result = \" \";\n  let alt, ctrl, shift, meta;\n\n  for (let i = 0; i < parts.length - 1; ++i) {\n    const mod = parts[i];\n    if (/^(cmd|meta|m)$/i.test(mod)) meta = true;else if (/^a(lt)?$/i.test(mod)) alt = true;else if (/^(c|ctrl|control)$/i.test(mod)) ctrl = true;else if (/^s(hift)?$/i.test(mod)) shift = true;else if (/^mod$/i.test(mod)) {\n      if (platform == \"mac\") meta = true;else ctrl = true;\n    } else throw new Error(\"Unrecognized modifier name: \" + mod);\n  }\n\n  if (alt) result = \"Alt-\" + result;\n  if (ctrl) result = \"Ctrl-\" + result;\n  if (meta) result = \"Meta-\" + result;\n  if (shift) result = \"Shift-\" + result;\n  return result;\n}\n\nfunction modifiers(name, event, shift) {\n  if (event.altKey) name = \"Alt-\" + name;\n  if (event.ctrlKey) name = \"Ctrl-\" + name;\n  if (event.metaKey) name = \"Meta-\" + name;\n  if (shift !== false && event.shiftKey) name = \"Shift-\" + name;\n  return name;\n}\n\nconst handleKeyEvents = /*@__PURE__*/EditorView.domEventHandlers({\n  keydown(event, view) {\n    return runHandlers(getKeymap(view.state), event, view, \"editor\");\n  }\n\n});\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\n\nconst keymap = /*@__PURE__*/Facet.define({\n  enables: handleKeyEvents\n});\nconst Keymaps = /*@__PURE__*/new WeakMap(); // This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\n\nfunction getKeymap(state) {\n  let bindings = state.facet(keymap);\n  let map = Keymaps.get(bindings);\n  if (!map) Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n  return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\n\n\nfunction runScopeHandlers(view, event, scope) {\n  return runHandlers(getKeymap(view.state), event, view, scope);\n}\n\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\n\nfunction buildKeymap(bindings) {\n  let platform = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : currentPlatform;\n  let bound = Object.create(null);\n  let isPrefix = Object.create(null);\n\n  let checkPrefix = (name, is) => {\n    let current = isPrefix[name];\n    if (current == null) isPrefix[name] = is;else if (current != is) throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n  };\n\n  let add = (scope, key, command, preventDefault) => {\n    let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n    let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n\n    for (let i = 1; i < parts.length; i++) {\n      let prefix = parts.slice(0, i).join(\" \");\n      checkPrefix(prefix, true);\n      if (!scopeObj[prefix]) scopeObj[prefix] = {\n        preventDefault: true,\n        commands: [view => {\n          let ourObj = storedPrefix = {\n            view,\n            prefix,\n            scope\n          };\n          setTimeout(() => {\n            if (storedPrefix == ourObj) storedPrefix = null;\n          }, PrefixTimeout);\n          return true;\n        }]\n      };\n    }\n\n    let full = parts.join(\" \");\n    checkPrefix(full, false);\n    let binding = scopeObj[full] || (scopeObj[full] = {\n      preventDefault: false,\n      commands: []\n    });\n    binding.commands.push(command);\n    if (preventDefault) binding.preventDefault = true;\n  };\n\n  for (let b of bindings) {\n    let name = b[platform] || b.key;\n    if (!name) continue;\n\n    for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n      add(scope, name, b.run, b.preventDefault);\n      if (b.shift) add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n    }\n  }\n\n  return bound;\n}\n\nfunction runHandlers(map, event, view, scope) {\n  let name = keyName(event),\n      isChar = name.length == 1 && name != \" \";\n  let prefix = \"\",\n      fallthrough = false;\n\n  if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n    prefix = storedPrefix.prefix + \" \";\n    if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0) storedPrefix = null;\n  }\n\n  let runFor = binding => {\n    if (binding) {\n      for (let cmd of binding.commands) if (cmd(view)) return true;\n\n      if (binding.preventDefault) fallthrough = true;\n    }\n\n    return false;\n  };\n\n  let scopeObj = map[scope],\n      baseName;\n\n  if (scopeObj) {\n    if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)])) return true;\n\n    if (isChar && (event.shiftKey || event.altKey || event.metaKey) && (baseName = base[event.keyCode]) && baseName != name) {\n      if (runFor(scopeObj[prefix + modifiers(baseName, event, true)])) return true;\n    } else if (isChar && event.shiftKey) {\n      if (runFor(scopeObj[prefix + modifiers(name, event, true)])) return true;\n    }\n  }\n\n  return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\n\nconst selectionConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    return combineConfig(configs, {\n      cursorBlinkRate: 1200,\n      drawRangeCursor: true\n    }, {\n      cursorBlinkRate: (a, b) => Math.min(a, b),\n      drawRangeCursor: (a, b) => a || b\n    });\n  }\n\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\n\nfunction drawSelection() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [selectionConfig.of(config), drawSelectionPlugin, hideNativeSelection];\n}\n\nclass Piece {\n  constructor(left, top, width, height, className) {\n    this.left = left;\n    this.top = top;\n    this.width = width;\n    this.height = height;\n    this.className = className;\n  }\n\n  draw() {\n    let elt = document.createElement(\"div\");\n    elt.className = this.className;\n    this.adjust(elt);\n    return elt;\n  }\n\n  adjust(elt) {\n    elt.style.left = this.left + \"px\";\n    elt.style.top = this.top + \"px\";\n    if (this.width >= 0) elt.style.width = this.width + \"px\";\n    elt.style.height = this.height + \"px\";\n  }\n\n  eq(p) {\n    return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height && this.className == p.className;\n  }\n\n}\n\nconst drawSelectionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.rangePieces = [];\n    this.cursors = [];\n    this.measureReq = {\n      read: this.readPos.bind(this),\n      write: this.drawSel.bind(this)\n    };\n    this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n    this.selectionLayer.className = \"cm-selectionLayer\";\n    this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n    this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n    this.cursorLayer.className = \"cm-cursorLayer\";\n    this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n    view.requestMeasure(this.measureReq);\n    this.setBlinkRate();\n  }\n\n  setBlinkRate() {\n    this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n  }\n\n  update(update) {\n    let confChanged = update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n    if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged) this.view.requestMeasure(this.measureReq);\n    if (update.transactions.some(tr => tr.scrollIntoView)) this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n    if (confChanged) this.setBlinkRate();\n  }\n\n  readPos() {\n    let {\n      state\n    } = this.view,\n        conf = state.facet(selectionConfig);\n    let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n    let cursors = [];\n\n    for (let r of state.selection.ranges) {\n      let prim = r == state.selection.main;\n\n      if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n        let piece = measureCursor(this.view, r, prim);\n        if (piece) cursors.push(piece);\n      }\n    }\n\n    return {\n      rangePieces,\n      cursors\n    };\n  }\n\n  drawSel(_ref7) {\n    let {\n      rangePieces,\n      cursors\n    } = _ref7;\n\n    if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n      this.selectionLayer.textContent = \"\";\n\n      for (let p of rangePieces) this.selectionLayer.appendChild(p.draw());\n\n      this.rangePieces = rangePieces;\n    }\n\n    if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n      let oldCursors = this.cursorLayer.children;\n\n      if (oldCursors.length !== cursors.length) {\n        this.cursorLayer.textContent = \"\";\n\n        for (const c of cursors) this.cursorLayer.appendChild(c.draw());\n      } else {\n        cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));\n      }\n\n      this.cursors = cursors;\n    }\n  }\n\n  destroy() {\n    this.selectionLayer.remove();\n    this.cursorLayer.remove();\n  }\n\n});\nconst themeSpec = {\n  \".cm-line\": {\n    \"& ::selection\": {\n      backgroundColor: \"transparent !important\"\n    },\n    \"&::selection\": {\n      backgroundColor: \"transparent !important\"\n    }\n  }\n};\nif (CanHidePrimary) themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest( /*@__PURE__*/EditorView.theme(themeSpec));\n\nfunction getBase(view) {\n  let rect = view.scrollDOM.getBoundingClientRect();\n  let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n  return {\n    left: left - view.scrollDOM.scrollLeft,\n    top: rect.top - view.scrollDOM.scrollTop\n  };\n}\n\nfunction wrappedLine(view, pos, inside) {\n  let range = EditorSelection.cursor(pos);\n  return {\n    from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n    to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n    type: BlockType.Text\n  };\n}\n\nfunction blockAt(view, pos) {\n  let line = view.lineBlockAt(pos);\n  if (Array.isArray(line.type)) for (let l of line.type) {\n    if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text)) return l;\n  }\n  return line;\n}\n\nfunction measureRange(view, range) {\n  if (range.to <= view.viewport.from || range.from >= view.viewport.to) return [];\n  let from = Math.max(range.from, view.viewport.from),\n      to = Math.min(range.to, view.viewport.to);\n  let ltr = view.textDirection == Direction.LTR;\n  let content = view.contentDOM,\n      contentRect = content.getBoundingClientRect(),\n      base = getBase(view);\n  let lineStyle = window.getComputedStyle(content.firstChild);\n  let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent));\n  let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n  let startBlock = blockAt(view, from),\n      endBlock = blockAt(view, to);\n  let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n  let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n\n  if (view.lineWrapping) {\n    if (visualStart) visualStart = wrappedLine(view, from, visualStart);\n    if (visualEnd) visualEnd = wrappedLine(view, to, visualEnd);\n  }\n\n  if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n    return pieces(drawForLine(range.from, range.to, visualStart));\n  } else {\n    let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n    let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n    let between = [];\n    if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1) between.push(piece(leftSide, top.bottom, rightSide, bottom.top));else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text) top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n    return pieces(top).concat(between).concat(pieces(bottom));\n  }\n\n  function piece(left, top, right, bottom) {\n    return new Piece(left - base.left, top - base.top - 0.01\n    /* Epsilon */\n    , right - left, bottom - top + 0.01\n    /* Epsilon */\n    , \"cm-selectionBackground\");\n  }\n\n  function pieces(_ref8) {\n    let {\n      top,\n      bottom,\n      horizontal\n    } = _ref8;\n    let pieces = [];\n\n    for (let i = 0; i < horizontal.length; i += 2) pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n\n    return pieces;\n  } // Gets passed from/to in line-local positions\n\n\n  function drawForLine(from, to, line) {\n    let top = 1e9,\n        bottom = -1e9,\n        horizontal = [];\n\n    function addSpan(from, fromOpen, to, toOpen, dir) {\n      // Passing 2/-2 is a kludge to force the view to return\n      // coordinates on the proper side of block widgets, since\n      // normalizing the side there, though appropriate for most\n      // coordsAtPos queries, would break selection drawing.\n      let fromCoords = view.coordsAtPos(from, from == line.to ? -2 : 2);\n      let toCoords = view.coordsAtPos(to, to == line.from ? 2 : -2);\n      top = Math.min(fromCoords.top, toCoords.top, top);\n      bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n      if (dir == Direction.LTR) horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);else horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n    }\n\n    let start = from !== null && from !== void 0 ? from : line.from,\n        end = to !== null && to !== void 0 ? to : line.to; // Split the range by visible range and document line\n\n    for (let r of view.visibleRanges) if (r.to > start && r.from < end) {\n      for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n        let docLine = view.state.doc.lineAt(pos);\n\n        for (let span of view.bidiSpans(docLine)) {\n          let spanFrom = span.from + docLine.from,\n              spanTo = span.to + docLine.from;\n          if (spanFrom >= endPos) break;\n          if (spanTo > pos) addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n        }\n\n        pos = docLine.to + 1;\n        if (pos >= endPos) break;\n      }\n    }\n\n    if (horizontal.length == 0) addSpan(start, from == null, end, to == null, view.textDirection);\n    return {\n      top,\n      bottom,\n      horizontal\n    };\n  }\n\n  function drawForWidget(block, top) {\n    let y = contentRect.top + (top ? block.top : block.bottom);\n    return {\n      top: y,\n      bottom: y,\n      horizontal: []\n    };\n  }\n}\n\nfunction measureCursor(view, cursor, primary) {\n  let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n  if (!pos) return null;\n  let base = getBase(view);\n  return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\");\n}\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n  map(pos, mapping) {\n    return pos == null ? null : mapping.mapPos(pos);\n  }\n\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n  create() {\n    return null;\n  },\n\n  update(pos, tr) {\n    if (pos != null) pos = tr.changes.mapPos(pos);\n    return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n  }\n\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.view = view;\n    this.cursor = null;\n    this.measureReq = {\n      read: this.readPos.bind(this),\n      write: this.drawCursor.bind(this)\n    };\n  }\n\n  update(update) {\n    var _a;\n\n    let cursorPos = update.state.field(dropCursorPos);\n\n    if (cursorPos == null) {\n      if (this.cursor != null) {\n        (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n        this.cursor = null;\n      }\n    } else {\n      if (!this.cursor) {\n        this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursor.className = \"cm-dropCursor\";\n      }\n\n      if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged) this.view.requestMeasure(this.measureReq);\n    }\n  }\n\n  readPos() {\n    let pos = this.view.state.field(dropCursorPos);\n    let rect = pos != null && this.view.coordsAtPos(pos);\n    if (!rect) return null;\n    let outer = this.view.scrollDOM.getBoundingClientRect();\n    return {\n      left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n      top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n      height: rect.bottom - rect.top\n    };\n  }\n\n  drawCursor(pos) {\n    if (this.cursor) {\n      if (pos) {\n        this.cursor.style.left = pos.left + \"px\";\n        this.cursor.style.top = pos.top + \"px\";\n        this.cursor.style.height = pos.height + \"px\";\n      } else {\n        this.cursor.style.left = \"-100000px\";\n      }\n    }\n  }\n\n  destroy() {\n    if (this.cursor) this.cursor.remove();\n  }\n\n  setDropPos(pos) {\n    if (this.view.state.field(dropCursorPos) != pos) this.view.dispatch({\n      effects: setDropCursorPos.of(pos)\n    });\n  }\n\n}, {\n  eventHandlers: {\n    dragover(event) {\n      this.setDropPos(this.view.posAtCoords({\n        x: event.clientX,\n        y: event.clientY\n      }));\n    },\n\n    dragleave(event) {\n      if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget)) this.setDropPos(null);\n    },\n\n    dragend() {\n      this.setDropPos(null);\n    },\n\n    drop() {\n      this.setDropPos(null);\n    }\n\n  }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\n\nfunction dropCursor() {\n  return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n  re.lastIndex = 0;\n\n  for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n    if (!cursor.lineBreak) while (m = re.exec(cursor.value)) f(pos + m.index, pos + m.index + m[0].length, m);\n  }\n}\n\nfunction matchRanges(view, maxLength) {\n  let visible = view.visibleRanges;\n  if (visible.length == 1 && visible[0].from == view.viewport.from && visible[0].to == view.viewport.to) return visible;\n  let result = [];\n\n  for (let {\n    from,\n    to\n  } of visible) {\n    from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n    to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n    if (result.length && result[result.length - 1].to >= from) result[result.length - 1].to = to;else result.push({\n      from,\n      to\n    });\n  }\n\n  return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\n\n\nclass MatchDecorator {\n  /**\n  Create a decorator.\n  */\n  constructor(config) {\n    let {\n      regexp,\n      decoration,\n      boundary,\n      maxLength = 1000\n    } = config;\n    if (!regexp.global) throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n    this.regexp = regexp;\n    this.getDeco = typeof decoration == \"function\" ? decoration : () => decoration;\n    this.boundary = boundary;\n    this.maxLength = maxLength;\n  }\n  /**\n  Compute the full set of decorations for matches in the given\n  view's viewport. You'll want to call this when initializing your\n  plugin.\n  */\n\n\n  createDeco(view) {\n    let build = new RangeSetBuilder();\n\n    for (let {\n      from,\n      to\n    } of matchRanges(view, this.maxLength)) iterMatches(view.state.doc, this.regexp, from, to, (a, b, m) => build.add(a, b, this.getDeco(m, view, a)));\n\n    return build.finish();\n  }\n  /**\n  Update a set of decorations for a view update. `deco` _must_ be\n  the set of decorations produced by _this_ `MatchDecorator` for\n  the view state before the update.\n  */\n\n\n  updateDeco(update, deco) {\n    let changeFrom = 1e9,\n        changeTo = -1;\n    if (update.docChanged) update.changes.iterChanges((_f, _t, from, to) => {\n      if (to > update.view.viewport.from && from < update.view.viewport.to) {\n        changeFrom = Math.min(from, changeFrom);\n        changeTo = Math.max(to, changeTo);\n      }\n    });\n    if (update.viewportChanged || changeTo - changeFrom > 1000) return this.createDeco(update.view);\n    if (changeTo > -1) return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n    return deco;\n  }\n\n  updateRange(view, deco, updateFrom, updateTo) {\n    for (let r of view.visibleRanges) {\n      let from = Math.max(r.from, updateFrom),\n          to = Math.min(r.to, updateTo);\n\n      if (to > from) {\n        let fromLine = view.state.doc.lineAt(from),\n            toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n        let start = Math.max(r.from, fromLine.from),\n            end = Math.min(r.to, toLine.to);\n\n        if (this.boundary) {\n          for (; from > fromLine.from; from--) if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n            start = from;\n            break;\n          }\n\n          for (; to < toLine.to; to++) if (this.boundary.test(toLine.text[to - toLine.from])) {\n            end = to;\n            break;\n          }\n        }\n\n        let ranges = [],\n            m;\n\n        if (fromLine == toLine) {\n          this.regexp.lastIndex = start - fromLine.from;\n\n          while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from) {\n            let pos = m.index + fromLine.from;\n            ranges.push(this.getDeco(m, view, pos).range(pos, pos + m[0].length));\n          }\n        } else {\n          iterMatches(view.state.doc, this.regexp, start, end, (from, to, m) => ranges.push(this.getDeco(m, view, from).range(from, to)));\n        }\n\n        deco = deco.update({\n          filterFrom: start,\n          filterTo: end,\n          filter: (from, to) => from < start || to > end,\n          add: ranges\n        });\n      }\n    }\n\n    return deco;\n  }\n\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n  0: \"null\",\n  7: \"bell\",\n  8: \"backspace\",\n  10: \"newline\",\n  11: \"vertical tab\",\n  13: \"carriage return\",\n  27: \"escape\",\n  8203: \"zero width space\",\n  8204: \"zero width non-joiner\",\n  8205: \"zero width joiner\",\n  8206: \"left-to-right mark\",\n  8207: \"right-to-left mark\",\n  8232: \"line separator\",\n  8237: \"left-to-right override\",\n  8238: \"right-to-left override\",\n  8233: \"paragraph separator\",\n  65279: \"zero width no-break space\",\n  65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\n\nfunction supportsTabSize() {\n  var _a;\n\n  if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n    let styles = document.body.style;\n    _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n  }\n\n  return _supportsTabSize || false;\n}\n\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n  combine(configs) {\n    let config = combineConfig(configs, {\n      render: null,\n      specialChars: Specials,\n      addSpecialChars: null\n    });\n    if (config.replaceTabs = !supportsTabSize()) config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n    if (config.addSpecialChars) config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n    return config;\n  }\n\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\n\nfunction highlightSpecialChars() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return [specialCharConfig.of(config), specialCharPlugin()];\n}\n\nlet _plugin = null;\n\nfunction specialCharPlugin() {\n  return _plugin || (_plugin = ViewPlugin.fromClass(class {\n    constructor(view) {\n      this.view = view;\n      this.decorations = Decoration.none;\n      this.decorationCache = Object.create(null);\n      this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n      this.decorations = this.decorator.createDeco(view);\n    }\n\n    makeDecorator(conf) {\n      return new MatchDecorator({\n        regexp: conf.specialChars,\n        decoration: (m, view, pos) => {\n          let {\n            doc\n          } = view.state;\n          let code = codePointAt(m[0], 0);\n\n          if (code == 9) {\n            let line = doc.lineAt(pos);\n            let size = view.state.tabSize,\n                col = countColumn(line.text, size, pos - line.from);\n            return Decoration.replace({\n              widget: new TabWidget((size - col % size) * this.view.defaultCharacterWidth)\n            });\n          }\n\n          return this.decorationCache[code] || (this.decorationCache[code] = Decoration.replace({\n            widget: new SpecialCharWidget(conf, code)\n          }));\n        },\n        boundary: conf.replaceTabs ? undefined : /[^]/\n      });\n    }\n\n    update(update) {\n      let conf = update.state.facet(specialCharConfig);\n\n      if (update.startState.facet(specialCharConfig) != conf) {\n        this.decorator = this.makeDecorator(conf);\n        this.decorations = this.decorator.createDeco(update.view);\n      } else {\n        this.decorations = this.decorator.updateDeco(update, this.decorations);\n      }\n    }\n\n  }, {\n    decorations: v => v.decorations\n  }));\n}\n\nconst DefaultPlaceholder = \"\\u2022\"; // Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\n\nfunction placeholder$1(code) {\n  if (code >= 32) return DefaultPlaceholder;\n  if (code == 10) return \"\\u2424\";\n  return String.fromCharCode(9216 + code);\n}\n\nclass SpecialCharWidget extends WidgetType {\n  constructor(options, code) {\n    super();\n    this.options = options;\n    this.code = code;\n  }\n\n  eq(other) {\n    return other.code == this.code;\n  }\n\n  toDOM(view) {\n    let ph = placeholder$1(this.code);\n    let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n    let custom = this.options.render && this.options.render(this.code, desc, ph);\n    if (custom) return custom;\n    let span = document.createElement(\"span\");\n    span.textContent = ph;\n    span.title = desc;\n    span.setAttribute(\"aria-label\", desc);\n    span.className = \"cm-specialChar\";\n    return span;\n  }\n\n  ignoreEvent() {\n    return false;\n  }\n\n}\n\nclass TabWidget extends WidgetType {\n  constructor(width) {\n    super();\n    this.width = width;\n  }\n\n  eq(other) {\n    return other.width == this.width;\n  }\n\n  toDOM() {\n    let span = document.createElement(\"span\");\n    span.textContent = \"\\t\";\n    span.className = \"cm-tab\";\n    span.style.width = this.width + \"px\";\n    return span;\n  }\n\n  ignoreEvent() {\n    return false;\n  }\n\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor() {\n    this.height = 1000;\n    this.attrs = {\n      style: \"padding-bottom: 1000px\"\n    };\n  }\n\n  update(update) {\n    let height = update.view.viewState.editorHeight - update.view.defaultLineHeight;\n\n    if (height != this.height) {\n      this.height = height;\n      this.attrs = {\n        style: `padding-bottom: ${height}px`\n      };\n    }\n  }\n\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\n\nfunction scrollPastEnd() {\n  return [plugin, contentAttributes.of(view => {\n    var _a;\n\n    return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null;\n  })];\n}\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\n\n\nfunction highlightActiveLine() {\n  return activeLineHighlighter;\n}\n\nconst lineDeco = /*@__PURE__*/Decoration.line({\n  class: \"cm-activeLine\"\n});\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n  constructor(view) {\n    this.decorations = this.getDeco(view);\n  }\n\n  update(update) {\n    if (update.docChanged || update.selectionSet) this.decorations = this.getDeco(update.view);\n  }\n\n  getDeco(view) {\n    let lastLineStart = -1,\n        deco = [];\n\n    for (let r of view.state.selection.ranges) {\n      if (!r.empty) return Decoration.none;\n      let line = view.lineBlockAt(r.head);\n\n      if (line.from > lastLineStart) {\n        deco.push(lineDeco.range(line.from));\n        lastLineStart = line.from;\n      }\n    }\n\n    return Decoration.set(deco);\n  }\n\n}, {\n  decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n  constructor(content) {\n    super();\n    this.content = content;\n  }\n\n  toDOM() {\n    let wrap = document.createElement(\"span\");\n    wrap.className = \"cm-placeholder\";\n    wrap.style.pointerEvents = \"none\";\n    wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n    if (typeof this.content == \"string\") wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);else wrap.setAttribute(\"aria-hidden\", \"true\");\n    return wrap;\n  }\n\n  ignoreEvent() {\n    return false;\n  }\n\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\n\n\nfunction placeholder(content) {\n  return ViewPlugin.fromClass(class {\n    constructor(view) {\n      this.view = view;\n      this.placeholder = Decoration.set([Decoration.widget({\n        widget: new Placeholder(content),\n        side: 1\n      }).range(0)]);\n    }\n\n    get decorations() {\n      return this.view.state.doc.length ? Decoration.none : this.placeholder;\n    }\n\n  }, {\n    decorations: v => v.decorations\n  });\n}\n/**\n@internal\n*/\n\n\nconst __test = {\n  HeightMap,\n  HeightOracle,\n  MeasuredHeights,\n  QueryType,\n  ChangedRange,\n  computeOrder,\n  moveVisually\n};\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, MatchDecorator, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, dropCursor, highlightActiveLine, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, scrollPastEnd };","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/node_modules/@codemirror/view/dist/index.js"],"names":["MapMode","Text","Text$1","Facet","StateEffect","ChangeSet","EditorSelection","CharCategory","EditorState","Transaction","Prec","combineConfig","StateField","StyleModule","RangeSet","RangeValue","RangeSetBuilder","Range","findClusterBreak","findColumn","codePointAt","countColumn","keyName","base","getSelection","root","target","nodeType","ownerDocument","contains","dom","node","parentNode","deepActiveElement","elt","document","activeElement","shadowRoot","hasSelection","selection","anchorNode","_","clientRectsFor","textRange","nodeValue","length","getClientRects","isEquivalentPosition","off","targetNode","targetOff","scanFor","domIndex","index","previousSibling","dir","maxOffset","nodeName","parent","childNodes","contentEditable","Rect0","left","right","top","bottom","flattenRect","rect","x","windowRect","win","innerWidth","innerHeight","scrollRectIntoView","side","y","xMargin","yMargin","ltr","doc","defaultView","cur","bounding","body","scrollHeight","clientHeight","scrollWidth","clientWidth","getBoundingClientRect","moveX","moveY","rectHeight","boundingHeight","targetTop","targetLeft","scrollBy","start","scrollTop","scrollLeft","assignedSlot","host","DOMSelectionState","constructor","anchorOffset","focusNode","focusOffset","eq","domSel","setRange","range","set","preventScrollSupported","focusPreventScroll","setActive","focus","stack","push","preventScroll","undefined","i","scratchRange","from","to","createRange","setEnd","setStart","dispatchKey","name","code","options","key","keyCode","which","cancelable","down","KeyboardEvent","synthetic","dispatchEvent","up","defaultPrevented","getRoot","clearAttributes","attributes","removeAttributeNode","DOMPos","offset","precise","before","after","noChildren","ContentView","dirty","editorView","Error","overrideDOMText","posAtStart","posBefore","posAtEnd","view","pos","child","children","breakAfter","RangeError","posAfter","coordsAt","_pos","_side","sync","track","firstChild","contentView","get","reuseDOM","written","rm","nextSibling","insertBefore","_dom","localPosFromDOM","bias","lastChild","domBoundsAround","fromI","fromStart","toI","toEnd","prevEnd","end","startDOM","endDOM","markDirty","andParent","markParentsDirty","childList","setParent","setDOM","cmView","rootView","v","replaceChildren","destroy","splice","ignoreMutation","_rec","ignoreEvent","_event","childCursor","ChildCursor","childPos","findPos","toString","replace","join","text","isEditable","merge","source","hasStart","openStart","openEnd","become","other","getSide","prototype","next","removeChild","replaceRange","fromOff","toOff","insert","breakAtStart","last","breakAtEnd","split","shift","pop","mergeChildrenInto","dLen","nav","navigator","userAgent","vendor","platform","documentElement","style","ie_edge","exec","ie_upto10","test","ie_11up","ie","gecko","chrome","webkit","safari","ios","maxTouchPoints","browser","mac","windows","linux","ie_version","documentMode","gecko_version","chrome_version","android","webkit_version","tabSize","MaxJoinLen","TextView","createDOM","textDOM","createTextNode","slice","result","domAtPos","_from","_to","textCoords","MarkView","mark","ch","setAttrs","class","className","attrs","setAttribute","tagName","toUpperCase","createElement","_hasStart","detachFrom","inlineDOMAtPos","coordsInChildren","flatten","rects","width","Array","find","call","r","WidgetView","widget","create","customView","updateDOM","toDOM","compare","event","empty","state","CompositionView","Math","min","ZeroWidthSpace","WidgetBufferView","of","joinInlineInto","open","combineAttrs","attrsEq","a","b","keysA","Object","keys","keysB","indexOf","updateAttrs","prev","removeAttribute","WidgetType","_widget","estimatedHeight","BlockType","Decoration","startSide","endSide","spec","heightRelevant","MarkDecoration","block","PointDecoration","getInclusive","line","LineDecoration","sort","hasHeight","none","point","mapMode","TrackBefore","isReplace","TrackDel","TrackAfter","type","WidgetRange","WidgetBefore","WidgetAfter","widgetsEq","inclusiveStart","inclusiveEnd","inclusive","addRange","ranges","margin","max","LineView","arguments","prevAttrs","transferDOM","setDeco","at","append","j","addLineDeco","deco","cls","_a","classList","add","some","hack","cmIgnore","appendChild","measureTextSize","totalWidth","lineHeight","height","charWidth","_other","docView","BlockWidgetView","_takeDeco","len","ContentBuilder","disallowBlockEffectsBelow","content","curLine","pendingBuffer","atCursorPos","textOff","cursor","iter","skip","posCovered","lineAt","getLine","flushBuffer","active","wrapMarks","addBlockWidget","finish","buildText","value","lineBreak","done","take","span","NullWidget","cursorBefore","cursorAfter","filterPoint","build","decorations","pluginDecorationLength","builder","spans","tag","toLowerCase","clickAddsSelectionRange","define","dragMovesSelection$1","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","scrollTo","map","changes","centerOn","ScrollTarget","scrollIntoView","t","logException","exception","context","handler","facet","window","onerror","String","console","error","editable","combine","values","PluginFieldProvider","field","PluginField","atomicRanges","scrollMargins","nextPluginID","viewPlugin","ViewPlugin","id","fields","extension","eventHandlers","provide","provider","isArray","domEventHandlers","plugin","handlers","fromClass","PluginInstance","mustUpdate","takeField","update","e","deactivate","editorAttributes","contentAttributes","styleModule","ChangedRange","fromA","toA","fromB","toB","addToSet","me","extendWithRanges","diff","dI","rI","posA","posB","ViewUpdate","transactions","flags","startState","tr","compose","changedRanges","iterChangedRanges","hasFocus","inputState","notifiedFocused","viewportChanged","heightChanged","geometryChanged","docChanged","focusChanged","selectionSet","Direction","LTR","RTL","dec","str","LowTypes","ArabicTypes","Brackets","BracketStack","p","l","charCodeAt","charType","BidiRE","BidiSpan","level","order","assoc","maybe","types","computeOrder","direction","outerType","oppositeType","trivialOrder","prevStrong","sI","br","sJ","embed","beforeL","afterL","rtl","movedOver","moveVisually","forward","startIndex","head","spanI","bidiLevel","indexForward","nextIndex","nextSpan","DOMReader","points","readRange","findPointBefore","readNode","nextView","isBlockElement","readTextNode","_b","fromView","sliceString","findPointIn","lastKeyCode","maxLen","DOMPoint","DocView","compositionDeco","minWidth","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","forceSelection","lastUpdate","Date","now","contentDOM","updateDeco","updateInner","every","mapPos","composing","computeCompositionDeco","size","lines","prevDeco","decoDiff","findChangedDeco","oldLength","viewState","mustMeasureContent","updateChildren","observer","ignore","contentHeight","selectionRange","gaps","viewport","BlockGapWidget","updateGaps","updateSelection","mustRead","fromPointer","readSelectionRange","mayControlSelection","rapidCompositionStart","force","main","anchor","betweenUneditable","dummy","inUneditable","blur","rawSel","nextTo","nextToUneditable","nearbyTextNode","collapse","cursorBidiLevel","extend","removeAllRanges","setSelectionRange","enforceCursorAssoc","sel","modify","lineStart","nearest","domView","posFromDOM","measureVisibleLineHeights","contentWidth","isWider","scrollDOM","widest","childRect","textDirection","measure","textContent","remove","computeBlockGapDeco","vs","viewports","lineBlockAt","pluginDecorations","pluginField","lineGapDeco","mLeft","mRight","mTop","mBottom","margins","targetRect","compositionSurroundingNode","textNode","cView","topNode","surrounding","newFrom","newTo","sliceDoc","CompositionWidget","DecorationComparator$1","compareRange","comparePoint","comp","inside","groupAt","categorize","charCategorizer","linePos","cat","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","above","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","closestOffset","closestDY","generalSide","rectBefore","posAtCoords","docTop","paddingTop","docHeight","yOffset","halfLine","defaultLineHeight","bounced","elementAtHeight","posAtCoordsImprecise","elementFromPoint","element","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","isSuspiciousCaretResult","contentRect","into","round","defaultCharacterWidth","lineWrapping","floor","heightOracle","lineLength","moveToLineBoundary","includeWrap","coords","coordsAtPos","editorRect","lineView","moveByChar","by","bidiSpans","check","char","number","byGroup","nextCat","Space","moveVertically","distance","startPos","goal","goalColumn","startY","startCoords","documentTop","resolvedGoal","dist","extra","curY","skipAtoms","oldPos","atoms","moved","between","InputState","lastKeyTime","pendingIOSKey","lastSelectionOrigin","lastSelectionTime","lastEscPress","lastContextMenu","scrollHandlers","registeredEvents","customHandlers","compositionFirstChange","compositionEndedAt","mouseSelection","addEventListener","keydown","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","preventDefault","ensureHandlers","setSelectionOrigin","origin","runScrollHandlers","scroll","screenKeyEvent","delayAndroidKey","pending","PendingKeys","ctrlKey","altKey","metaKey","setTimeout","flushIOSKey","protectedTab","modifierCodes","startMouseSelection","inputType","MouseSelection","startEvent","mustSelect","lastEvent","move","bind","shiftKey","multiple","allowMultipleSelections","addsSelectionRange","dragMove","dragMovesSelection","dragging","isInPrimarySelection","getClickType","select","buttons","removeEventListener","dispatch","userEvent","rangeCount","getRangeAt","clientX","clientY","bubbles","brokenClipboardAPI","capturePaste","cssText","doPaste","input","toText","byLine","linewise","lastLinewiseCopy","lastLine","changeByRange","replaceSelection","lastTouch","touchstart","touchmove","mousedown","flush","makeStyle","button","basicMouseSelection","mustFocus","rangeForClick","visual","insideY","findPositionSide","queryPos","BadMouseDetail","lastMouseDown","lastMouseDownCount","lastMouseDownTime","detail","lastTime","abs","startSel","startRange","dragstart","dataTransfer","setData","effectAllowed","dropText","direct","dropPos","del","ins","drop","readOnly","files","read","finishFile","filter","s","reader","FileReader","onload","readAsText","getData","paste","data","clipboardData","captureCopy","selectionEnd","selectionStart","copiedRange","upto","copy","cut","clearData","beforeprint","printing","requestMeasure","forceClearComposition","rapid","compositionstart","compositionupdate","compositionend","contextmenu","beforeinput","startViewHeight","visualViewport","wrappingWhiteSpace","HeightOracle","heightSamples","heightForGap","ceil","heightForLine","setDoc","mustRefreshForStyle","whiteSpace","mustRefreshForHeights","lineHeights","newHeight","h","refresh","knownHeights","changed","MeasuredHeights","heights","more","BlockInfo","concat","QueryType","Epsilon","HeightMap","outdated","setHeight","oracle","nodes","decomposeLeft","decomposeRight","applyChanges","oldDoc","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","blockAt","_height","_doc","_value","_type","forEachLine","f","_force","measured","collapsed","widgetHeight","HeightMapGap","firstLine","ByHeight","first","unshift","singleHeight","wasChanged","mid","rightTop","rightOffset","subQuery","ByPos","rightStart","balanced","mergeGaps","rebalance","around","relevantWidgetHeight","lineEnd","covering","writtenTo","isCovered","addBlock","enterLine","blankContent","gap","ensureLine","heightRelevantDecoChanges","DecorationComparator","visiblePixelRange","getComputedStyle","overflow","parentRect","position","offsetParent","LineGap","same","gA","gB","draw","wrapping","LineGapWidget","vertical","display","ViewState","pixelViewport","inView","paddingBottom","contentDOMWidth","contentDOMHeight","editorHeight","editorWidth","scaler","IdScaler","scrollTarget","visibleRanges","mustEnforceCursorAssoc","heightMap","getViewport","updateViewportLines","updateForViewport","lineGaps","ensureLineGaps","computeVisibleRanges","Viewport","BigScaler","viewportLines","scale","scaleBlock","newDeco","contentChanges","heightChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLines","updateLineGaps","mapLineGaps","measureContent","parseInt","dTop","dBottom","viewportChange","visibleTop","fromDOM","visibleBottom","marginTop","viewHeight","topPos","mapped","touchesRange","current","structure","lineStructure","total","viewFrom","viewTo","marginHeight","findPosition","marginWidth","outside","cutRange","gapSize","fraction","findFraction","lineBlockAtHeight","ratio","counted","pieces","array","val","n","vpHeight","domBase","domTop","domBottom","obj","vp","bTop","bBottom","theme","strs","darkTheme","baseThemeID","newName","baseLightID","baseDarkID","lightDarkIDs","buildTheme","scopes","m","baseTheme","boxSizing","outline","flexDirection","alignItems","fontFamily","overflowX","zIndex","flexGrow","minHeight","wordWrap","padding","WebkitUserModify","whiteSpace_fallback","wordBreak","overflowWrap","caretColor","contain","background","pointerEvents","animation","visibility","borderLeft","marginLeft","borderLeftColor","backgroundColor","color","verticalAlign","fontSize","borderRadius","backgroundImage","border","observeOptions","characterData","subtree","characterDataOldValue","useCharData","DOMObserver","onChange","onScrollChanged","selectionChanged","delayedFlush","resizeTimeout","queue","delayedAndroidKey","scrollTargets","intersection","resize","intersecting","gapIntersection","parentCheck","MutationObserver","mutations","mut","removedNodes","oldValue","flushSoon","onCharData","prevValue","onSelectionChange","ResizeObserver","observe","onScroll","IntersectionObserver","entries","listenForScroll","intersectionRatio","createEvent","g","disconnect","safariSelectionRangeHack","stop","clear","takeRecords","requestAnimationFrame","processRecords","clearTimeout","records","typeOver","record","readMutation","readSelection","newSel","rec","childBefore","findChild","childAfter","_c","curView","found","stopImmediatePropagation","getTargetRanges","execCommand","endContainer","endOffset","curAnchor","applyDOMChange","change","bounds","selPoints","selectionPoints","selectionFromPoints","preferredPos","preferredSide","findDiff","iHead","iAnchor","single","mainSel","newLength","replaced","compositionRange","rangeChanges","selOff","minLen","adjust","EditorView","config","plugins","pluginMap","Map","editorAttrs","contentAttrs","bidiCache","destroyed","updateState","measureScheduled","measureRequests","tabIndex","announceDOM","_dispatch","mountStyles","ensureGlobalHandler","redrawn","phrases","setState","effects","is","CachedOrder","updatePlugins","styleModules","showAnnouncements","isUserEvent","listener","newState","hadFocus","prevSpecs","specs","newPlugins","cancelAnimationFrame","updated","oldViewport","warn","measuring","BadMeasure","scrolled","write","themeClasses","attrsFromFacet","spellcheck","autocorrect","autocapitalize","translate","contenteditable","role","trs","effect","announce","div","mount","reverse","readMeasured","request","known","documentPadding","blockAtHeight","ensureTop","visualLineAtHeight","viewportLineBlocks","visualLineAt","moveByGroup","initial","scrollPosIntoView","posAtDOM","MaxBidiLine","entry","prefix","dark","lowest","given","resizeDebounce","handleResize","querySelectorAll","cache","lastDir","sources","currentPlatform","normalizeKeyName","parts","alt","ctrl","meta","mod","modifiers","handleKeyEvents","runHandlers","getKeymap","keymap","enables","Keymaps","WeakMap","bindings","buildKeymap","reduce","runScopeHandlers","scope","storedPrefix","PrefixTimeout","bound","isPrefix","checkPrefix","command","scopeObj","k","commands","ourObj","full","binding","run","isChar","fallthrough","runFor","cmd","baseName","CanHidePrimary","selectionConfig","configs","cursorBlinkRate","drawRangeCursor","drawSelection","drawSelectionPlugin","hideNativeSelection","Piece","rangePieces","cursors","measureReq","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","animationName","conf","measureRange","prim","piece","measureCursor","c","oldCursors","forEach","idx","themeSpec","highest","getBase","wrappedLine","lineStyle","leftSide","paddingLeft","textIndent","rightSide","paddingRight","startBlock","endBlock","visualStart","visualEnd","drawForLine","drawForWidget","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","endPos","docLine","spanFrom","spanTo","primary","setDropCursorPos","mapping","dropCursorPos","drawDropCursor","drawCursor","cursorPos","outer","setDropPos","dragover","dragleave","relatedTarget","dragend","dropCursor","iterMatches","re","lastIndex","iterRange","matchRanges","maxLength","visible","MatchDecorator","regexp","decoration","boundary","global","getDeco","createDeco","changeFrom","changeTo","iterChanges","_f","_t","updateRange","updateFrom","updateTo","fromLine","toLine","filterFrom","filterTo","UnicodeRegexpSupport","unicode","Specials","RegExp","Names","_supportsTabSize","supportsTabSize","styles","MozTabSize","specialCharConfig","render","specialChars","addSpecialChars","replaceTabs","highlightSpecialChars","specialCharPlugin","_plugin","decorationCache","decorator","makeDecorator","col","TabWidget","SpecialCharWidget","DefaultPlaceholder","placeholder$1","fromCharCode","ph","desc","phrase","custom","title","scrollPastEnd","highlightActiveLine","activeLineHighlighter","lineDeco","lastLineStart","Placeholder","wrap","placeholder","__test"],"mappings":"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,UAAU,CAAC3vB,QAAX,GAAsBA,QAAtB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA2vB,UAAU,CAACxvB,QAAX,GAAsBA,QAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAwvB,UAAU,CAAC5sB,WAAX,GAAyBA,WAAzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4sB,UAAU,CAAC5vB,YAAX,GAA0BA,YAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4vB,UAAU,CAAC9vB,aAAX,GAA2BA,aAA3B;AACA;AACA;AACA;AACA;;AACA8vB,UAAU,CAAC7vB,cAAX,GAA4BA,cAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA6vB,UAAU,CAAC1uB,QAAX,GAAsBA,QAAtB;AACA;AACA;AACA;AACA;AACA;AACA;;AACA0uB,UAAU,CAAC/vB,mBAAX,GAAiCA,mBAAjC;AACA;AACA;AACA;AACA;AACA;AACA;;AACA+vB,UAAU,CAACvY,kBAAX,GAAgCzX,oBAAhC;AACA;AACA;AACA;AACA;;AACAgwB,UAAU,CAAClwB,uBAAX,GAAqCA,uBAArC;AACA;AACA;AACA;AACA;AACA;AACA;;AACAkwB,UAAU,CAACxwB,WAAX,GAAyBA,WAAzB;AACA;AACA;AACA;AACA;AACA;AACA;;AACAwwB,UAAU,CAAC7H,SAAX,GAAuBA,SAAvB;AACA;AACA;AACA;AACA;;AACA6H,UAAU,CAAC7sB,iBAAX,GAA+BA,iBAA/B;AACA;AACA;AACA;AACA;;AACA6sB,UAAU,CAAC9sB,gBAAX,GAA8BA,gBAA9B;AACA;AACA;AACA;AACA;;AACA8sB,UAAU,CAAC7d,YAAX,GAA0B,aAAa6d,UAAU,CAAC7sB,iBAAX,CAA6BvK,EAA7B,CAAgC;AAAE,WAAS;AAAX,CAAhC,CAAvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAo3B,UAAU,CAACmD,QAAX,GAAsB,aAAahuC,WAAW,CAAC4a,MAAZ,EAAnC,C,CACA;;AACA,MAAMq0B,WAAW,GAAG,IAApB,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","sourcesContent":["import { MapMode, Text as Text$1, Facet, StateEffect, ChangeSet, EditorSelection, CharCategory, EditorState, Transaction, Prec, combineConfig, StateField } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeSet, RangeValue, RangeSetBuilder } from '@codemirror/rangeset';\nexport { Range } from '@codemirror/rangeset';\nimport { Text, findClusterBreak, findColumn, codePointAt, countColumn } from '@codemirror/text';\nimport { keyName, base } from 'w3c-keyname';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction deepActiveElement() {\n    let elt = document.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nconst Rect0 = { left: 0, right: 0, top: 0, bottom: 0 };\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n            x = y = \"nearest\";\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom;\n            let pos = parent.firstChild;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    if (!child.dom && pos) {\n                        let contentView = ContentView.get(pos);\n                        if (!contentView || !contentView.parent && contentView.constructor == child.constructor)\n                            child.reuseDOM(pos);\n                    }\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && !track.written && track.node == parent && pos != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (pos && pos != child.dom)\n                        pos = rm(pos);\n                    pos = child.dom.nextSibling;\n                }\n                else {\n                    parent.insertBefore(child.dom, pos);\n                }\n            }\n            if (pos && track && track.node == parent)\n                track.written = true;\n            while (pos)\n                pos = rm(pos);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this)\n                child.destroy();\n        }\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && toOff < after.length) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.dirty & 4 /* Attrs */)\n            this.setAttrs(this.dom);\n        super.sync(track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return Rect0;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return Rect0;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n    get isEditable() { return false; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side); }\n    get isEditable() { return true; }\n}\n// Use two characters on Android, to prevent Chrome from closing the\n// virtual keyboard when backspacing after a widget (#602).\nconst ZeroWidthSpace = browser.android ? \"\\u200b\\u200b\" : \"\\u200b\";\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom)\n            this.setDOM(document.createTextNode(ZeroWidthSpace));\n        else if (this.dirty && this.dom.nodeValue != ZeroWidthSpace)\n            this.dom.nodeValue = ZeroWidthSpace;\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return DOMPos.before(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        let rects = clientRectsFor(this.dom);\n        return rects[rects.length - 1] || null;\n    }\n    get overrideDOMText() {\n        return Text.of([this.dom.nodeValue.replace(/\\u200b/g, \"\")]);\n    }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length, next;\n        if ((side <= 0 || end == view.length || child.getSide() > 0 ? end >= pos : end > pos) &&\n            (pos < end || i + 1 == view.children.length || (next = view.children[i + 1]).length || next.getSide() > 0)) {\n            let flatten = 0;\n            if (end == off) {\n                if (child.getSide() <= 0)\n                    continue;\n                flatten = side = -child.getSide();\n            }\n            let rect = child.coordsAt(pos - off, side);\n            return flatten && rect ? flattenRect(rect, side < 0) : rect;\n        }\n        off = end;\n    }\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even when the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(_widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(_dom) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(_event) { return true; }\n    /**\n    @internal\n    */\n    get customView() { return null; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(_dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#rangeset.Range), which adds a start and end position.\n*/\nclass Decoration extends RangeValue {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) or\n    (below the facet-provided decorations) [view\n    plugin](https://codemirror.net/6/docs/ref/#view.PluginSpec.decorations). Such elements are split\n    on line boundaries and on the boundaries of higher-precedence\n    decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which adds an element at the given\n    position.\n    */\n    static widget(spec) {\n        let side = spec.side || 0, block = !!spec.block;\n        side += block ? (side > 0 ? 300000000 /* BlockAfter */ : -400000000 /* BlockBefore */) : (side > 0 ? 100000000 /* InlineAfter */ : -100000000 /* InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec, block);\n        let startSide = block ? (start ? -300000000 /* BlockIncStart */ : -1 /* InlineIncStart */) : 400000000 /* NonIncStart */;\n        let endSide = block ? (end ? 200000000 /* BlockIncEnd */ : 1 /* InlineIncEnd */) : -500000000 /* NonIncEnd */;\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* InlineIncStart */ : 400000000 /* NonIncStart */, end ? 1 /* InlineIncEnd */ : -500000000 /* NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Line */, -200000000 /* Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin >= from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs({ class: cls }, this.attrs || {});\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.dirty & 4 /* Attrs */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    become(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.type);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsBelow) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsBelow = disallowBlockEffectsBelow;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* No */;\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer([]);\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (!openEnd)\n            this.flushBuffer([]);\n        else\n            this.pendingBuffer = 0 /* No */;\n        if (!this.posCovered())\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer([]);\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* Chunk */);\n            this.flushBuffer(active.slice(0, openStart));\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length && (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* IfCursor */ && !cursorBefore)\n                    this.pendingBuffer = 0 /* No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* No */ : from < to ? 1 /* Yes */ : 2 /* IfCursor */;\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    filterPoint(from, to, value, index) {\n        if (index >= this.disallowBlockEffectsBelow || !(value instanceof PointDecoration))\n            return true;\n        if (value.block)\n            throw new RangeError(\"Block decorations may not be specified via plugins\");\n        return to <= this.doc.lineAt(this.pos).to;\n    }\n    static build(text, from, to, decorations, pluginDecorationLength) {\n        let builder = new ContentBuilder(text, from, to, pluginDecorationLength);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\nconst none = [];\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\n// FIXME remove\nconst scrollTo = /*@__PURE__*/StateEffect.define({\n    map: (range, changes) => range.map(changes)\n});\n// FIXME remove\nconst centerOn = /*@__PURE__*/StateEffect.define({\n    map: (range, changes) => range.map(changes)\n});\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n    }\n    map(changes) {\n        return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\n/**\nUsed to [declare](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide) which\n[fields](https://codemirror.net/6/docs/ref/#view.PluginValue) a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin)\nprovides.\n*/\nclass PluginFieldProvider {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    field, \n    /**\n    @internal\n    */\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/**\nPlugin fields are a mechanism for allowing plugins to provide\nvalues that can be retrieved through the\n[`pluginField`](https://codemirror.net/6/docs/ref/#view.EditorView.pluginField) view method.\n*/\nclass PluginField {\n    /**\n    Create a [provider](https://codemirror.net/6/docs/ref/#view.PluginFieldProvider) for this field,\n    to use with a plugin's [provide](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide)\n    option.\n    */\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /**\n    Define a new plugin field.\n    */\n    static define() { return new PluginField(); }\n}\n/**\nThis field can be used by plugins to provide\n[decorations](https://codemirror.net/6/docs/ref/#view.Decoration).\n\n**Note**: For reasons of data flow (plugins are only updated\nafter the viewport is computed), decorations produced by plugins\nare _not_ taken into account when predicting the vertical layout\nstructure of the editor. They **must not** introduce block\nwidgets (that will raise an error) or replacing decorations that\ncover line breaks (these will be ignored if they occur). Such\ndecorations, or others that cause a large amount of vertical\nsize shift compared to the undecorated content, should be\nprovided through the state-level [`decorations`\nfacet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) instead.\n*/\nPluginField.decorations = /*@__PURE__*/PluginField.define();\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nPluginField.atomicRanges = /*@__PURE__*/PluginField.define();\n/**\nPlugins can provide additional scroll margins (space around the\nsides of the scrolling element that should be considered\ninvisible) through this field. This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nPluginField.scrollMargins = /*@__PURE__*/PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            fields.push(PluginField.decorations.from(decorations));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nconst domEventHandlers = /*@__PURE__*/PluginField.define();\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    takeField(type, target) {\n        if (this.spec)\n            for (let { field, get } of this.spec.fields)\n                if (field == type)\n                    target.push(get(this.value));\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions = none) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags |= 1 /* Focus */;\n        }\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /**\n    Indicates whether the height of an element in the editor changed\n    in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (8 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */, oppositeType = direction == LTR ? 2 /* R */ : 1 /* L */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N0. Process bracket pairs in an isolating run sequence\n    // sequentially in the logical order of the text positions of the\n    // opening paired brackets using the logic given below. Within this\n    // scope, bidirectional types EN and AN are treated as R.\n    for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n        // Keeps [startIndex, type, strongSeen] triples for each open\n        // bracket on BracketStack.\n        if (br = Brackets[ch = line.charCodeAt(i)]) {\n            if (br < 0) { // Closing bracket\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    if (BracketStack[sJ + 1] == -br) {\n                        let flags = BracketStack[sJ + 2];\n                        let type = (flags & 2 /* EmbedInside */) ? outerType :\n                            !(flags & 4 /* OppositeInside */) ? 0 :\n                                (flags & 1 /* OppositeBefore */) ? oppositeType : outerType;\n                        if (type)\n                            types[i] = types[BracketStack[sJ]] = type;\n                        sI = sJ;\n                        break;\n                    }\n                }\n            }\n            else if (BracketStack.length == 189 /* MaxDepth */) {\n                break;\n            }\n            else {\n                BracketStack[sI++] = i;\n                BracketStack[sI++] = ch;\n                BracketStack[sI++] = context;\n            }\n        }\n        else if ((type = types[i]) == 2 /* R */ || type == 1 /* L */) {\n            let embed = type == outerType;\n            context = embed ? 0 : 1 /* OppositeBefore */;\n            for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                let cur = BracketStack[sJ + 2];\n                if (cur & 2 /* EmbedInside */)\n                    break;\n                if (embed) {\n                    BracketStack[sJ + 2] |= 2 /* EmbedInside */;\n                }\n                else {\n                    if (cur & 4 /* OppositeInside */)\n                        break;\n                    BracketStack[sJ + 2] |= 4 /* OppositeInside */;\n                }\n            }\n        }\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nclass DOMReader {\n    constructor(points, view) {\n        this.points = points;\n        this.view = view;\n        this.text = \"\";\n        this.lineBreak = view.state.lineBreak;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore)))\n                this.text += this.lineBreak;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readTextNode(node) {\n        var _a, _b;\n        let text = node.nodeValue;\n        if (/^\\u200b/.test(text) && ((_a = node.previousSibling) === null || _a === void 0 ? void 0 : _a.contentEditable) == \"false\")\n            text = text.slice(1);\n        if (/\\u200b$/.test(text) && ((_b = node.nextSibling) === null || _b === void 0 ? void 0 : _b.contentEditable) == \"false\")\n            text = text.slice(0, text.length - 1);\n        return text;\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineBreak);\n        else if (node.nodeType == 3)\n            text = this.readTextNode(node);\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineBreak : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. This drops one of those.\n            if (browser.chrome && this.view.inputState.lastKeyCode == 13 && !node.nextSibling && /\\n\\n$/.test(this.text))\n                this.text = this.text.slice(0, -1);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        this.pluginDecorationLength = 0;\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (this.view.inputState.composing < 0)\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length || this.dirty)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.pluginDecorationLength);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead)\n            this.view.observer.readSelectionRange();\n        if (!(fromPointer || this.mayControlSelection()) ||\n            browser.ios && this.view.inputState.rapidCompositionStart)\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(main.anchor);\n        let head = main.empty ? anchor : this.domAtPos(main.head);\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.root);\n                if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    rawSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        if (this.compositionDeco.size)\n            return;\n        let cursor = this.view.state.selection.main;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom\n            : hasSelection(this.dom, this.view.observer.selectionRange);\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start ||\n                (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&\n                    (!i || side == 2 || this.children[i - 1].breakAfter ||\n                        (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = this.view.textDirection == Direction.LTR ? rect.right - childRect.left\n                            : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let pluginDecorations = this.view.pluginField(PluginField.decorations);\n        this.pluginDecorationLength = pluginDecorations.length;\n        return this.decorations = [\n            ...pluginDecorations,\n            ...this.view.state.facet(decorations),\n            this.compositionDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n    }\n    scrollIntoView(target) {\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        let targetRect = {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        };\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction compositionSurroundingNode(view) {\n    let sel = view.observer.selectionRange;\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return null;\n    let cView = view.docView.nearest(textNode);\n    if (!cView)\n        return null;\n    if (cView instanceof LineView) {\n        let topNode = textNode;\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        let pos = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n        return { from: pos, to: pos, node: topNode, text: textNode };\n    }\n    else {\n        for (;;) {\n            let { parent } = cView;\n            if (!parent)\n                return null;\n            if (parent instanceof LineView)\n                break;\n            cView = parent;\n        }\n        let from = cView.posAtStart;\n        return { from, to: from + cView.length, node: cView.dom, text: textNode };\n    }\n}\nfunction computeCompositionDeco(view, changes) {\n    let surrounding = compositionSurroundingNode(view);\n    if (!surrounding)\n        return Decoration.none;\n    let { from, to, node, text: textNode } = surrounding;\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let { state } = view, text = node.nodeType == 3 ? node.nodeValue :\n        new DOMReader([], view).readRange(node.firstChild, null).text;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(node, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, { x, y }, precise, bias = -1) {\n    var _a;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let yOffset = y - docTop;\n    if (yOffset < 0)\n        return 0;\n    if (yOffset > docHeight)\n        return view.state.doc.length;\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (browser.safari && isSuspiciousCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let line = Math.floor((y - block.top) / view.defaultLineHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos, start.assoc);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos - docTop);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))\n            return EditorSelection.cursor(pos, start.assoc, undefined, goal);\n    }\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let atoms = view.pluginField(PluginField.atomicRanges);\n    for (;;) {\n        let moved = false;\n        for (let set of atoms) {\n            set.between(pos.from - 1, pos.from + 1, (from, to, value) => {\n                if (pos.from > from && pos.from < to) {\n                    pos = oldPos.from > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);\n                    moved = true;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastEscPress = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        this.compositionEndedAt = 0;\n        this.rapidCompositionStart = false;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (type == \"keydown\" && this.keydown(view, event))\n                    return;\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    keydown(view, event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (this.screenKeyEvent(view, event))\n            return true;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Prevent the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && (pending = PendingKeys.find(key => key.keyCode == event.keyCode)) &&\n            !(event.ctrlKey || event.altKey || event.metaKey) && !event.synthetic) {\n            this.pendingIOSKey = pending;\n            setTimeout(() => this.flushIOSKey(view), 250);\n            return true;\n        }\n        return false;\n    }\n    flushIOSKey(view) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(view.contentDOM, key.key, key.keyCode);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && Date.now() - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    screenKeyEvent(view, event) {\n        let protectedTab = event.keyCode == 9 && Date.now() < this.lastEscPress + 2000;\n        if (event.keyCode == 27)\n            this.lastEscPress = Date.now();\n        else if (modifierCodes.indexOf(event.keyCode) < 0)\n            this.lastEscPress = 0;\n        return protectedTab;\n    }\n    mustFlushObserver(event) {\n        return (event.type == \"keydown\" && event.keyCode != 229) ||\n            event.type == \"compositionend\" && !browser.ios;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.lastEvent = startEvent;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(this.lastEvent = event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (this.mustSelect || !selection.eq(this.view.state.selection) ||\n            selection.main.assoc != this.view.state.selection.main.assoc)\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\",\n                scrollIntoView: true\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n};\nlet lastTouch = 0;\nhandlers.touchstart = (view, e) => {\n    lastTouch = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (lastTouch > Date.now() - 2000 && getClickType(event) == 1)\n        return; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = view.root.activeElement != view.contentDOM;\n        if (mustFocus)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n                lastEvent = null;\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (lastEvent && event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = main;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nfunction dropText(view, event, text, direct) {\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    if (view.state.readOnly)\n        return event.preventDefault();\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        event.preventDefault();\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n    }\n    else {\n        dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n    }\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return event.preventDefault();\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\"));\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view, rapid) {\n    if (view.docView.compositionDeco.size) {\n        view.inputState.rapidCompositionStart = rapid;\n        try {\n            view.update([]);\n        }\n        finally {\n            view.inputState.rapidCompositionStart = false;\n        }\n    }\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view, true);\n        }\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionFirstChange = null;\n    setTimeout(() => {\n        if (view.inputState.composing < 0)\n            forceClearComposition(view, false);\n    }, 50);\n};\nhandlers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a;\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForStyle(whiteSpace, direction) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    @internal\n    */\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n    /**\n    FIXME remove on next breaking release @internal\n    */\n    moveY(offset) {\n        return !offset ? this : new BlockInfo(this.from, this.length, this.top + offset, this.height, Array.isArray(this.type) ? this.type.map(b => b.moveY(offset)) : this.type);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = Math.max(from, offset), end = Math.min(offset + this.length, to); pos <= end;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, lineHeight, BlockType.Text));\n            top += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            let wasChanged = oracle.heightChanged;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            oracle.heightChanged = wasChanged || singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.lines(oracle.doc, offset).lineHeight) >= Epsilon;\n            return result;\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    let body = dom.ownerDocument.body;\n    for (let parent = dom.parentNode; parent && parent != body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentDOMWidth = 0;\n        this.contentDOMHeight = 0;\n        this.editorHeight = 0;\n        this.editorWidth = 0;\n        this.heightOracle = new HeightOracle;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = HeightMap.empty().applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.updateViewportLines();\n        this.updateForViewport();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        this.scaler = this.heightMap.height <= 7000000 /* MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle.doc, this.heightMap, this.viewports);\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, block => {\n            this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.startState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let updateLines = !update.changes.empty || (update.flags & 2 /* Height */) ||\n            viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        this.updateForViewport();\n        if (updateLines)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges();\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace, direction = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForStyle(whiteSpace, direction);\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != dom.clientHeight;\n        let result = 0, bias = 0;\n        if (measureContent) {\n            this.mustMeasureContent = false;\n            this.contentDOMHeight = dom.clientHeight;\n            // Vertical padding\n            let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;\n            if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n                result |= 8 /* Geometry */;\n                this.paddingTop = paddingTop;\n                this.paddingBottom = paddingBottom;\n            }\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 }\n            : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView)\n            return 0;\n        let contentWidth = dom.clientWidth;\n        if (this.contentDOMWidth != contentWidth || this.editorHeight != view.scrollDOM.clientHeight ||\n            this.editorWidth != view.scrollDOM.clientWidth) {\n            this.contentDOMWidth = contentWidth;\n            this.editorHeight = view.scrollDOM.clientHeight;\n            this.editorWidth = view.scrollDOM.clientWidth;\n            result |= 8 /* Geometry */;\n        }\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights();\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = view.docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 8 /* Geometry */;\n                }\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            oracle.heightChanged = false;\n            this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n            if (oracle.heightChanged)\n                result |= 2 /* Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange)\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n        this.updateForViewport();\n        if ((result & 2 /* Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range, viewHeight = this.editorHeight;\n            if (head < viewport.from || head > viewport.to) {\n                let block = map.lineAt(head, QueryType.ByPos, doc, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* Margin */ && bottom < visibleBottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        for (let line of this.viewportLines) {\n            if (line.length < 4000 /* DoubleMargin */)\n                continue;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 4000 /* DoubleMargin */)\n                continue;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                let marginHeight = (2000 /* Margin */ / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                viewFrom = findPosition(structure, (this.visibleTop - line.top - marginHeight) / line.height);\n                viewTo = findPosition(structure, (this.visibleBottom - line.top + marginHeight) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = 2000 /* Margin */ * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, (this.pixelViewport.left - marginWidth) / totalWidth);\n                viewTo = findPosition(structure, (this.pixelViewport.right + marginWidth) / totalWidth);\n            }\n            let outside = [];\n            if (viewFrom > line.from)\n                outside.push({ from: line.from, to: viewFrom });\n            if (viewTo < line.to)\n                outside.push({ from: viewTo, to: line.to });\n            let sel = this.state.selection.main;\n            // Make sure the gaps don't cover a selection end\n            if (sel.from >= line.from && sel.from <= line.to)\n                cutRange(outside, sel.from - 10 /* SelectionMargin */, sel.from + 10 /* SelectionMargin */);\n            if (!sel.empty && sel.to >= line.from && sel.to <= line.to)\n                cutRange(outside, sel.to - 10 /* SelectionMargin */, sel.to + 10 /* SelectionMargin */);\n            for (let { from, to } of outside)\n                if (to - from > 1000 /* HalfMargin */) {\n                    gaps.push(find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                        Math.abs(gap.from - from) < 1000 /* HalfMargin */ && Math.abs(gap.to - to) < 1000 /* HalfMargin */) ||\n                        new LineGap(from, to, this.gapSize(line, from, to, structure)));\n                }\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = ranges.length != this.visibleRanges.length ||\n            this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n        this.visibleRanges = ranges;\n        return changed ? 4 /* Viewport */ : 0;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.state.doc, 0, 0), this.scaler);\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.state.doc, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction cutRange(ranges, from, to) {\n    for (let i = 0; i < ranges.length; i++) {\n        let r = ranges[i];\n        if (r.from < to && r.to > from) {\n            let pieces = [];\n            if (r.from < from)\n                pieces.push({ from: r.from, to: from });\n            if (r.to > to)\n                pieces.push({ from: to, to: r.to });\n            ranges.splice(i, 1, ...pieces);\n            i += pieces.length - 1;\n        }\n    }\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(doc, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, doc, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, doc, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&.cm-editor\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\",\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\",\n        overflowWrap: \"anywhere\"\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    \".cm-selectionLayer\": {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    \".cm-selectionBackground\": {\n        position: \"absolute\",\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"&.cm-focused .cm-cursor\": {\n        display: \"block\"\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#223039\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resize = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        if (typeof ResizeObserver == \"function\") {\n            this.resize = new ResizeObserver(() => {\n                if (this.view.docView.lastUpdate < Date.now() - 75 && this.resizeTimeout < 0)\n                    this.resizeTimeout = setTimeout(() => {\n                        this.resizeTimeout = -1;\n                        this.view.requestMeasure();\n                    }, 50);\n            });\n            this.resize.observe(view.scrollDOM);\n        }\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        this.onScrollChanged(e);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event))\n            return;\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { root } = this.view, domSel = getSelection(root);\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/codemirror.next/issues/414\n        let range = browser.safari && root.nodeType == 11 && deepActiveElement() == this.view.contentDOM &&\n            safariSelectionRangeHack(this.view) || domSel;\n        if (this.selectionRange.eq(range))\n            return false;\n        this.selectionRange.setRange(range);\n        return this.selectionChanged = true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then dispatches the\n    // key event, throwing away the DOM changes if it gets handled.\n    delayAndroidKey(key, keyCode) {\n        if (!this.delayedAndroidKey)\n            requestAnimationFrame(() => {\n                let key = this.delayedAndroidKey;\n                this.delayedAndroidKey = null;\n                let startState = this.view.state;\n                if (dispatchKey(this.view.contentDOM, key.key, key.keyCode))\n                    this.processRecords();\n                else\n                    this.flush();\n                if (this.view.state == startState)\n                    this.view.update([]);\n            });\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = { key, keyCode };\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    processRecords() {\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return;\n        if (readSelection)\n            this.readSelectionRange();\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return;\n        this.selectionChanged = false;\n        let startState = this.view.state;\n        this.onChange(from, to, typeOver);\n        // The view wasn't updated\n        if (this.view.state == startState)\n            this.view.update([]);\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.dirty |= 4 /* Attrs */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resize) === null || _c === void 0 ? void 0 : _c.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view) {\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    if (!found)\n        return null;\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.main;\n    if (start > -1) {\n        let bounds = view.docView.domBoundsAround(start, end, 0);\n        if (!bounds || view.state.readOnly)\n            return;\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view);\n        let reader = new DOMReader(selPoints, view);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 ||\n            browser.android && reader.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus || !view.state.facet(editable)) {\n        let domSel = view.observer.selectionRange;\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n            !contains(view.contentDOM, domSel.focusNode)\n            ? view.state.selection.main.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n            !contains(view.contentDOM, domSel.anchorNode)\n            ? view.state.selection.main.anchor\n            : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.main.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    // If the change is inside the selection and covers most of it,\n    // assume it is a selection replace (with identical characters at\n    // the start/end not included in the diff)\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    if (change) {\n        let startState = view.state;\n        if (browser.ios && view.inputState.flushIOSKey(view))\n            return;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events. (Some of these keys are also handled by beforeinput\n        // events and the pendingAndroidKey mechanism, but that's not\n        // reliable in all situations.)\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        if (view.inputState.composing >= 0)\n            view.inputState.composing++;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n            (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length) &&\n            view.inputState.composing < 0) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) + after));\n        }\n        else {\n            let changes = startState.changes(change);\n            let mainSel = newSel && !startState.selection.main.eq(newSel.main) && newSel.main.to <= changes.newLength\n                ? newSel.main : undefined;\n            // Try to apply a composition change to all cursors\n            if (startState.selection.ranges.length > 1 && view.inputState.composing >= 0 &&\n                change.to <= sel.to && change.to >= sel.to - 10) {\n                let replaced = view.state.sliceDoc(change.from, change.to);\n                let compositionRange = compositionSurroundingNode(view) || view.state.doc.lineAt(sel.head);\n                let offset = sel.to - change.to, size = sel.to - sel.from;\n                tr = startState.changeByRange(range => {\n                    if (range.from == sel.from && range.to == sel.to)\n                        return { changes, range: mainSel || range.map(changes) };\n                    let to = range.to - offset, from = to - replaced.length;\n                    if (range.to - range.from != size || view.state.sliceDoc(from, to) != replaced ||\n                        // Unfortunately, there's no way to make multiple\n                        // changes in the same node work without aborting\n                        // composition, so cursors in the composition range are\n                        // ignored.\n                        compositionRange && range.to >= compositionRange.from && range.from <= compositionRange.to)\n                        return { range };\n                    let rangeChanges = startState.changes({ from, to, insert: change.insert }), selOff = range.to - sel.to;\n                    return {\n                        changes: rangeChanges,\n                        range: !mainSel ? range.map(rangeChanges) :\n                            EditorSelection.range(Math.max(0, mainSel.anchor + selOff), Math.max(0, mainSel.head + selOff))\n                    };\n                });\n            }\n            else {\n                tr = {\n                    changes,\n                    selection: mainSel && startState.selection.replaceRange(mainSel)\n                };\n            }\n        }\n        let userEvent = \"input.type\";\n        if (view.composing) {\n            userEvent += \".compose\";\n            if (view.inputState.compositionFirstChange) {\n                userEvent += \".start\";\n                view.inputState.compositionFirstChange = false;\n            }\n        }\n        view.dispatch(tr, { scrollIntoView: true, userEvent });\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    Construct a new view. You'll usually want to put `view.dom` into\n    your document after creating a view, so that the user can see\n    it.\n    */\n    constructor(\n    /**\n    Initialization options.\n    */\n    config = {}) {\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.style.cssText = \"position: absolute; top: -10000px\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            if (this.observer.intersecting)\n                this.measure();\n        });\n        this.inputState = new InputState(this);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method).\n    */\n    get composing() { return this.inputState.composing > 0; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = new ViewUpdate(this, state, transactions);\n        let scrollTarget = this.viewState.scrollTarget;\n        try {\n            this.updateState = 2 /* Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects) {\n                    if (e.is(scrollTo))\n                        scrollTarget = new ScrollTarget(e.value);\n                    else if (e.is(centerOn))\n                        scrollTarget = new ScrollTarget(e.value, \"center\");\n                    else if (e.is(scrollIntoView))\n                        scrollTarget = e.value;\n                }\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (redrawn || scrollTarget || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(update);\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* Updating */;\n        let hadFocus = this.hasFocus;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (hadFocus)\n            this.focus();\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.flush();\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let oldViewport = this.viewport;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = new ViewUpdate(this, this.state), redrawn = false, scrolled = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTarget) {\n                    this.docView.scrollIntoView(this.viewState.scrollTarget);\n                    this.viewState.scrollTarget = null;\n                    scrolled = true;\n                }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&\n                    !scrolled && this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        this.observer.ignore(() => {\n            updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Collect all values provided by the active plugins for a given\n    field.\n    */\n    pluginField(field) {\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.update(this).takeField(field, result);\n        return result;\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    Find the line or block widget at the given vertical position.\n    \n    By default, this position is interpreted as a screen position,\n    meaning `docTop` is set to the DOM top position of the editor\n    content (forcing a layout). You can pass a different `docTop`\n    value—for example 0 to interpret `height` as a document-relative\n    position, or a precomputed document top\n    (`view.contentDOM.getBoundingClientRect().top`) to limit layout\n    queries.\n    \n    *Deprecated: use `elementAtHeight` instead.*\n    */\n    blockAtHeight(height, docTop) {\n        let top = ensureTop(docTop, this);\n        return this.elementAtHeight(height - top).moveY(top);\n    }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find information for the visual line (see\n    [`visualLineAt`](https://codemirror.net/6/docs/ref/#view.EditorView.visualLineAt)) at the given\n    vertical position. The resulting block info might hold another\n    array of block info structs in its `type` field if this line\n    consists of more than one block.\n    \n    Defaults to treating `height` as a screen position. See\n    [`blockAtHeight`](https://codemirror.net/6/docs/ref/#view.EditorView.blockAtHeight) for the\n    interpretation of the `docTop` parameter.\n    \n    *Deprecated: use `lineBlockAtHeight` instead.*\n    */\n    visualLineAtHeight(height, docTop) {\n        let top = ensureTop(docTop, this);\n        return this.lineBlockAtHeight(height - top).moveY(top);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height.\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Iterate over the height information of the visual lines in the\n    viewport. The heights of lines are reported relative to the\n    given document top, which defaults to the screen position of the\n    document (forcing a layout).\n    \n    *Deprecated: use `viewportLineBlocks` instead.*\n    */\n    viewportLines(f, docTop) {\n        let top = ensureTop(docTop, this);\n        for (let line of this.viewportLineBlocks)\n            f(line.moveY(top));\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the extent and height of the visual line (a range delimited\n    on both sides by either non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range)\n    line breaks, or the start/end of the document) at the given position.\n    \n    Vertical positions are computed relative to the `docTop`\n    argument, which defaults to 0 for this method. You can pass\n    `view.contentDOM.getBoundingClientRect().top` here to get screen\n    coordinates.\n    \n    *Deprecated: use `lineBlockAt` instead.*\n    */\n    visualLineAt(pos, docTop = 0) {\n        return this.lineBlockAt(pos).moveY(docTop + this.viewState.paddingTop);\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#text.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. Motion in\n    bidirectional text is in visual order, in the editor's [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). When the start\n    position was the last one on the line, the returned position\n    will be across the line break. If there is no further line, the\n    original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    // FIXME remove on next major version\n    scrollPosIntoView(pos) {\n        this.dispatch({ effects: scrollTo.of(EditorSelection.cursor(pos)) });\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor.\n    */\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.text, this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (document.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Facet that can be used to add DOM event handlers. The value\n    should be an object mapping event names to handler functions. The\n    first such function to return true will be assumed to have handled\n    that event, and no other handlers or built-in behavior will be\n    activated for it.\n    These are registered on the [content\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except for `scroll`\n    handlers, which will be called any time the editor's [scroll\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of its parent nodes\n    is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n}\n/**\nEffect that can be [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a\ntransaction to make it scroll the given range into view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\nEditorView.scrollTo = scrollTo;\n/**\nEffect that makes the editor scroll the given range to the\ncenter of the visible view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\nEditorView.centerOn = centerOn;\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot longer have its `contenteditable` attribute set. (Note that\nthis doesn't affect API calls that change the editor content,\neven when those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds\na new range to the existing selection or replaces it entirely.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. See also [view\nplugins](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), which have a separate\nmechanism for providing decorations.\n*/\nEditorView.decorations = decorations;\n/**\nThis facet records whether a dark theme is active. The extension\nreturned by [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme) automatically\nincludes an instance of this when the `dark` option is set to\ntrue.\n*/\nEditorView.darkTheme = darkTheme;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\n// FIXME remove this and its callers on next breaking release\nfunction ensureTop(given, view) {\n    return (given == null ? view.contentDOM.getBoundingClientRect().top : given) + view.viewState.paddingTop;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n});\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(map, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\", fallthrough = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)\n            storedPrefix = null;\n    }\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = \"cm-selectionLayer\";\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = \"cm-cursorLayer\";\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            let oldCursors = this.cursorLayer.children;\n            if (oldCursors.length !== cursors.length) {\n                this.cursorLayer.textContent = \"\";\n                for (const c of cursors)\n                    this.cursorLayer.appendChild(c.draw());\n            }\n            else {\n                cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));\n            }\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n        type: BlockType.Text };\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent));\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (view.lineWrapping) {\n        if (visualStart)\n            visualStart = wrappedLine(view, from, visualStart);\n        if (visualEnd)\n            visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top - 0.01 /* Epsilon */, right - left, bottom - top + 0.01 /* Epsilon */, \"cm-selectionBackground\");\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\");\n}\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let pos = this.view.state.field(dropCursorPos);\n        let rect = pos != null && this.view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = this.view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n            top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            if (pos) {\n                this.cursor.style.left = pos.left + \"px\";\n                this.cursor.style.top = pos.top + \"px\";\n                this.cursor.style.height = pos.height + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventHandlers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, pos + m.index + m[0].length, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        let { regexp, decoration, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        this.getDeco = typeof decoration == \"function\" ? decoration : () => decoration;\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder();\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (a, b, m) => build.add(a, b, this.getDeco(m, view, a)));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from) {\n                        let pos = m.index + fromLine.from;\n                        ranges.push(this.getDeco(m, view, pos).range(pos, pos + m[0].length));\n                    }\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, to, m) => ranges.push(this.getDeco(m, view, from).range(from, to)));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let height = update.view.viewState.editorHeight - update.view.defaultLineHeight;\n        if (height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                return Decoration.none;\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, MatchDecorator, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, dropCursor, highlightActiveLine, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, scrollPastEnd };\n"]},"metadata":{},"sourceType":"module"}