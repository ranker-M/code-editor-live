{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\pages\\\\Playground.js\",\n    _s = $RefreshSig$();\n\nimport '../styles/playgroundPage.css';\nimport { useEffect, useState } from \"react\";\nimport ChangeableTitle from '../components/ChangeableTitle';\nimport { useAuth } from '../contexts/AuthContext';\nimport { NavLink, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { optionList } from \"../components/CodeEditorImports\";\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useMessageBox } from '../contexts/MessageBox';\nimport Loading from '../components/LoadingAnimation';\nimport ResizableBox from '../components/ResizableBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Playground = props => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const [theme, setTheme] = useState(\"dark\");\n  const [language, setlanguage] = useState(state.language);\n  const [code, setCode] = useState(state.code);\n  const [projectName, setProjectName] = useState(\"\");\n  const params = useParams();\n  const [renderState, setRenderState] = useState(false);\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    setMessageBox\n  } = useMessageBox();\n  const [output, setOutput] = useState({\n    time: \"\",\n    output: \"Output will be displayed here...\"\n  });\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    window.scrollTo(\"0px\", \"0px\");\n\n    if (!currentUser.loading) {\n      axios.get(\"/get-one-project/\" + currentUser.email + \"/\" + params.projectId).then(result => {\n        let project = result.data[0];\n        setCode(project.text);\n        setProjectName(project.projectName);\n        setlanguage(project.language);\n        console.log(project.language);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      setTimeout(() => {\n        setRenderState(!renderState);\n      }, 100);\n    }\n  }, [renderState]);\n\n  function parentProjectName(newName) {\n    setProjectName(newName);\n  }\n\n  const selectTheme = e => {\n    setTheme(e.target.value);\n  };\n\n  const selectLanguage = e => {\n    setlanguage(e.target.value);\n  };\n\n  function handleInput(e) {\n    setInput(e.target.value);\n  }\n\n  function handleFontSize(e) {\n    if (e.target.value > 50 || e.target.value < 10) {\n      e.target.value = 25;\n      return;\n    }\n\n    let editor = document.getElementById(\"code-editor-div\");\n    editor.style.fontSize = e.target.value + \"px\";\n  }\n\n  function handleUpdate() {\n    document.getElementById(\"playground-update-button\").style.color = \"green\";\n    const data = {\n      text: code,\n      language: language\n    };\n    const options = {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify(data),\n      url: \"/update-projectText/\" + currentUser.email + \"/\" + params.projectId\n    };\n    axios(options).then(res => {\n      setMessageBox(res.data, \"lightgreen\");\n    }).catch(err => {\n      console.log(err.response);\n      setMessageBox(err.response.data, \"red\");\n    });\n  }\n\n  function handleCompile() {\n    document.getElementById(\"playground-update-button\").style.color = \"green\";\n\n    if (code.trim().length === 0) {\n      setOutput({\n        time: \"0.00\",\n        output: \"No output\"\n      });\n      return;\n    }\n\n    const data = {\n      text: code,\n      language: language\n    };\n    const options = {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify(data),\n      url: \"/update-projectText/\" + currentUser.email + \"/\" + params.projectId\n    };\n    axios(options).then(res => {\n      // setMessageBox(res.data, \"lightgreen\");\n      setOutput({\n        time: \"\",\n        output: \"Compiling...\"\n      });\n      const data = {\n        project: {\n          text: code,\n          language: language\n        },\n        input: input\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/x-www-form-urlencoded'\n        },\n        data: qs.stringify(data),\n        url: \"/compile-project/\"\n      };\n      axios(options).then(result => {\n        setOutput(result.data);\n      }).catch(err => {\n        console.log(err);\n      });\n    }).catch(err => {\n      console.log(err.response);\n      setMessageBox(err.response.data, \"red\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"playgroundPage\",\n    children: currentUser !== null && currentUser !== void 0 && currentUser.loading ? /*#__PURE__*/_jsxDEV(Loading, {\n      color: \"black\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playground-page-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playground-navbar\",\n        children: [/*#__PURE__*/_jsxDEV(ChangeableTitle, {\n          title: projectName,\n          currentUserName: currentUser.email,\n          parentProjectName: parentProjectName,\n          projectId: params.projectId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: theme,\n          onChange: selectTheme,\n          className: \"theme-select editor-options\",\n          children: optionList.themes.map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this))\n        }, \"theme options\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          defaultValue: language,\n          onChange: selectLanguage,\n          className: \"lang-select editor-options\",\n          children: Object.keys(optionList.languages).map(el => /*#__PURE__*/_jsxDEV(\"option\", {\n            children: el\n          }, el, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this))\n        }, \"language options\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"run-btn\",\n          onClick: handleCompile,\n          children: \"\\u27A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"font-size\",\n          id: \"font-size-label\",\n          children: \"Font-size:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"font-size\",\n          id: \"editor-font-size-input\",\n          onBlur: handleFontSize,\n          size: \"\",\n          defaultValue: 25,\n          min: \"10\",\n          max: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: 'data:text/plain;charset=utf-8,' + encodeURIComponent(code),\n          download: projectName + \".\" + optionList.languages[language].fileExtension,\n          id: \"buttonDownload\",\n          children: \"\\u2B73\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          id: \"playground-update-button\",\n          children: \"Save Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/profile\",\n          id: \"playground-profile-page-button\",\n          children: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"playground-main\",\n        children: [/*#__PURE__*/_jsxDEV(ResizableBox, {\n          props: {\n            right: true\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"code-editor-div\",\n            children: /*#__PURE__*/_jsxDEV(CodeMirror, {\n              value: code,\n              theme: theme,\n              height: \"100vh\",\n              width: \"100%\",\n              extensions: [optionList.languages[language].extension],\n              onChange: (value, viewUpdate) => {\n                setCode(value);\n                document.getElementById(\"playground-update-button\").style.color = \"orange\";\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"compiler-div\",\n          children: [/*#__PURE__*/_jsxDEV(ResizableBox, {\n            props: {\n              bottom: true\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"output-div\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: output.output\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                id: \"output-time-span\",\n                children: output.time !== \"\" && \"Compiled in: \" + output.time + \"s\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"compiler-input\",\n            id: \"compiler-input-area\",\n            placeholder: 'Enter your input here, for every different entry:\\ninput1\\ninput2\\ninput3',\n            spellcheck: \"false\",\n            value: input,\n            onChange: handleInput\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 65\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Playground, \"fLptqP0ubeVoSBs38/o5RdcUYhQ=\", false, function () {\n  return [useLocation, useParams, useAuth, useMessageBox];\n});\n\n_c = Playground;\nexport default Playground;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playground\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/pages/Playground.js"],"names":["useEffect","useState","ChangeableTitle","useAuth","NavLink","useLocation","useNavigate","useParams","CodeMirror","optionList","axios","qs","useMessageBox","Loading","ResizableBox","Playground","props","state","theme","setTheme","language","setlanguage","code","setCode","projectName","setProjectName","params","renderState","setRenderState","currentUser","setMessageBox","output","setOutput","time","input","setInput","window","scrollTo","loading","get","email","projectId","then","result","project","data","text","console","log","catch","err","setTimeout","parentProjectName","newName","selectTheme","e","target","value","selectLanguage","handleInput","handleFontSize","editor","document","getElementById","style","fontSize","handleUpdate","color","options","method","headers","stringify","url","res","response","handleCompile","trim","length","themes","map","el","Object","keys","languages","encodeURIComponent","fileExtension","right","extension","viewUpdate","bottom"],"mappings":"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","sourcesContent":["import '../styles/playgroundPage.css'\nimport { useEffect, useState } from \"react\";\nimport ChangeableTitle from '../components/ChangeableTitle';\nimport { useAuth } from '../contexts/AuthContext';\nimport { NavLink, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport CodeMirror from \"@uiw/react-codemirror\";\nimport { optionList } from \"../components/CodeEditorImports\"\n\nimport axios from 'axios';\nimport qs from 'qs';\nimport { useMessageBox } from '../contexts/MessageBox';\nimport Loading from '../components/LoadingAnimation';\nimport ResizableBox from '../components/ResizableBox';\n\nconst Playground = (props) => {\n    const { state } = useLocation();\n    const [theme, setTheme] = useState(\"dark\");\n    const [language, setlanguage] = useState(state.language);\n    const [code, setCode] = useState(state.code);\n    const [projectName, setProjectName] = useState(\"\")\n    const params = useParams();\n    const [renderState, setRenderState] = useState(false);\n    const { currentUser } = useAuth();\n    const { setMessageBox } = useMessageBox();\n    const [output, setOutput] = useState({ time: \"\", output: \"Output will be displayed here...\" });\n    const [input, setInput] = useState(\"\");\n\n    useEffect(() => {\n        window.scrollTo(\"0px\", \"0px\");\n        if (!currentUser.loading) {\n            axios.get(\"/get-one-project/\" + currentUser.email + \"/\" + params.projectId)\n                .then(result => {\n                    let project = result.data[0];\n                    setCode(project.text);\n                    setProjectName(project.projectName);\n                    setlanguage(project.language);\n                    console.log(project.language);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        } else {\n            setTimeout(() => {\n                setRenderState(!renderState);\n            }, 100);\n        }\n    }, [renderState]);\n\n    function parentProjectName(newName) {\n        setProjectName(newName);\n    }\n\n    const selectTheme = (e) => {\n        setTheme(e.target.value);\n    }\n\n    const selectLanguage = (e) => {\n        setlanguage(e.target.value);\n    }\n\n    function handleInput(e) {\n        setInput(e.target.value);\n    }\n\n    function handleFontSize(e) {\n        if (e.target.value > 50 || e.target.value < 10) {\n            e.target.value = 25;\n            return;\n        }\n        let editor = document.getElementById(\"code-editor-div\");\n        editor.style.fontSize = e.target.value + \"px\";\n    }\n\n    function handleUpdate() {\n        document.getElementById(\"playground-update-button\").style.color = \"green\";\n        const data = { text: code, language: language };\n        const options = {\n            method: 'PUT',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: qs.stringify(data),\n            url: \"/update-projectText/\" + currentUser.email + \"/\" + params.projectId\n        };\n        axios(options).then(\n            res => {\n                setMessageBox(res.data, \"lightgreen\");\n            }).\n            catch(err => {\n                console.log(err.response)\n                setMessageBox(err.response.data, \"red\");\n            });\n    }\n\n    function handleCompile() {\n        document.getElementById(\"playground-update-button\").style.color = \"green\";\n        if (code.trim().length === 0) {\n            setOutput({\n                time: \"0.00\", output: \"No output\"\n            });\n            return;\n        }\n        const data = { text: code, language: language };\n        const options = {\n            method: 'PUT',\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\n            data: qs.stringify(data),\n            url: \"/update-projectText/\" + currentUser.email + \"/\" + params.projectId\n        };\n        axios(options).then(\n            res => {\n                // setMessageBox(res.data, \"lightgreen\");\n                setOutput({\n                    time: \"\", output: \"Compiling...\"\n                });\n                const data = { project: { text: code, language: language }, input: input };\n                const options = {\n                    method: 'POST',\n                    headers: { 'content-type': 'application/x-www-form-urlencoded' },\n                    data: qs.stringify(data),\n                    url: \"/compile-project/\"\n                };\n\n                axios(options)\n                    .then(result => {\n                        setOutput(result.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }).\n            catch(err => {\n                console.log(err.response)\n                setMessageBox(err.response.data, \"red\");\n            });\n    }\n\n    return (\n        <div id=\"playgroundPage\">\n            {currentUser?.loading ? <Loading color=\"black\" /> : <div id=\"playground-page-wrapper\">\n                <div id=\"playground-navbar\">\n\n                    {/* <div id=\"navbar-div\"> */}\n\n                    <ChangeableTitle title={projectName}\n                        currentUserName={currentUser.email}\n                        parentProjectName={parentProjectName}\n                        projectId={params.projectId}\n                    />\n\n                    {<select defaultValue={theme} onChange={selectTheme} className=\"theme-select editor-options\" key={\"theme options\"}>\n                        {optionList.themes.map(el =>\n                            <option key={el}>{el}</option>\n                        )}\n                    </select>}\n\n                    <select defaultValue={language} onChange={selectLanguage} className=\"lang-select editor-options\" key=\"language options\">\n                        {Object.keys(optionList.languages).map(el =>\n                            <option key={el}>{el}</option>\n                        )}\n                    </select>\n\n                    <button id=\"run-btn\" onClick={handleCompile}>➤</button>\n\n                    <label htmlFor=\"font-size\" id='font-size-label'>Font-size:</label>\n                    <input type=\"number\" name=\"font-size\" id=\"editor-font-size-input\"\n                        onBlur={handleFontSize} size=\"\" defaultValue={25} min=\"10\" max=\"50\" />\n                    {/* </div> */}\n\n\n                    <a href={'data:text/plain;charset=utf-8,' + encodeURIComponent(code)}\n                        download={projectName + \".\" + optionList.languages[language].fileExtension}\n                        id=\"buttonDownload\">⭳</a>\n\n                    <button onClick={handleUpdate} id=\"playground-update-button\">Save Project</button>\n\n                    <NavLink to=\"/profile\" id=\"playground-profile-page-button\">Profile</NavLink>\n                </div>\n\n\n\n                <div id=\"playground-main\">\n\n                    <ResizableBox props={{ right: true }}>\n                        <div id=\"code-editor-div\">\n                            <CodeMirror\n                                value={code}\n                                theme={theme}\n                                height=\"100vh\"\n                                width='100%'\n                                extensions={[optionList.languages[language].extension]}\n                                onChange={(value, viewUpdate) => {\n                                    setCode(value);\n                                    document.getElementById(\"playground-update-button\").style.color = \"orange\";\n\n                                }}\n                            />\n                        </div>\n                    </ResizableBox>\n\n                    <div id='compiler-div'>\n                        <ResizableBox props={{ bottom: true }}>\n                            <div id=\"output-div\">\n                                <p>{output.output}</p>\n                                <span id=\"output-time-span\">{output.time !== \"\" && \"Compiled in: \" + output.time + \"s\"}</span>\n                            </div>\n                        </ResizableBox>\n\n                        <textarea name=\"compiler-input\" id=\"compiler-input-area\"\n                            placeholder={'Enter your input here, for every different entry:\\ninput1\\ninput2\\ninput3'}\n                            spellcheck=\"false\" value={input} onChange={handleInput}></textarea>\n                    </div>\n                </div>\n\n            </div>}\n        </div >\n    );\n}\n\n\n\n\nexport default Playground;"]},"metadata":{},"sourceType":"module"}