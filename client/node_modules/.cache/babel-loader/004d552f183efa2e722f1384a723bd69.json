{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\Desktop\\\\live-code-editor\\\\client\\\\src\\\\pages\\\\ProfilePage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport { NavLink, useNavigate, useLocation } from \"react-router-dom\";\nimport AllProjects from \"../components/AllProjects\";\nimport CreateProjectWindow from \"../components/CreateProjectWindow\";\nimport Loading from \"../components/LoadingAnimation\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport '../styles/profile-page.css';\nimport qs from 'qs';\nimport { useMessageBox } from \"../contexts/MessageBox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfilePage = () => {\n  _s();\n\n  const {\n    logout,\n    currentUser\n  } = useAuth();\n  const {\n    setMessageBox\n  } = useMessageBox();\n  const [showSelf, setShowSelf] = useState(\"first\");\n  const sliderMenu = useRef();\n\n  const axios = require('axios').default;\n\n  const navigate = useNavigate();\n  const [searchValue, setSearchValue] = useState(\"\");\n  const {\n    state\n  } = useLocation();\n  useEffect(() => {\n    // console.log(\"Profile page:\", state);\n    let proxyProject = localStorage.getItem(\"proxyProject\"); // console.log(\"Proxy project:\", proxyProject);\n\n    if ((state === null || state === void 0 ? void 0 : state.path) === \"/playground\" && proxyProject) {\n      createProjectForProxyPlayground(proxyProject);\n    }\n  }, []);\n\n  function createProjectForProxyPlayground(proxyProject) {\n    // Project creation request\n    // console.log(proxyProject);\n    proxyProject = JSON.parse(proxyProject);\n    const {\n      language,\n      code,\n      projectName\n    } = proxyProject;\n    const data = {\n      username: currentUser.email,\n      language,\n      projectName,\n      code\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/x-www-form-urlencoded'\n      },\n      data: qs.stringify(data),\n      url: \"/add-project\"\n    };\n    axios(options).then(result => {\n      // console.log(result);\n      localStorage.clear();\n      setMessageBox(\"Project succesfully created\", \"lightgreen\");\n      navigate(\"/playground/\" + result.data._id, {\n        state: {\n          projectName,\n          language,\n          code\n        }\n      });\n    }).catch(err => {\n      // console.log(err.response)\n      if (err.response.data.indexOf(\"Project names must be unique\") !== -1) {\n        let randomizedName = { ...proxyProject,\n          projectName: proxyProject.projectName + \"(\" + Math.floor(Math.random() * 100) + \")\"\n        };\n        randomizedName = JSON.stringify(randomizedName);\n        localStorage.setItem(\"proxyProject\", randomizedName);\n        createProjectForProxyPlayground(randomizedName);\n        setMessageBox(\"Project names can't be same, project name randomize\", \"orange\");\n      } else setMessageBox(err.response.data, \"red\");\n    });\n  }\n\n  function openMenu() {\n    sliderMenu.current.classList.toggle(\"open-menu\");\n  }\n\n  function handleCreateProject() {\n    setShowSelf(!showSelf);\n  }\n\n  function handleLogout() {\n    logout().then(result => {\n      setMessageBox(\"Logout successful\", \"lightgreen\");\n      navigate(\"/\");\n    }).catch(err => {\n      // console.log(err);\n      setMessageBox(err.message, \"red\");\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"profile-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(CreateProjectWindow, {\n      showSelf: showSelf,\n      user: currentUser\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: sliderMenu,\n      id: \"profile-slider-menu\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"slider-menu-buttons-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"\",\n          id: \"user-name\",\n          className: \"slider-btn\",\n          children: currentUser !== null && currentUser !== void 0 && currentUser.loading ? /*#__PURE__*/_jsxDEV(Loading, {\n            color: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 49\n          }, this) : currentUser.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"\",\n          id: \"create-project\",\n          onClick: handleCreateProject,\n          className: \"slider-btn\",\n          children: \"Create Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          id: \"slider-home\",\n          className: \"slider-btn\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"\",\n          id: \"all-projects\",\n          className: \"slider-btn\",\n          children: \"All Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"\",\n          onClick: handleLogout,\n          id: \"profile-navbar-logout-btn\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"profile-page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"menu-button\",\n        onClick: openMenu,\n        children: \"\\u2261\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"profile-navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"search-bar\",\n          id: \"profile-page-search-bar\",\n          placeholder: \"Search by project name, language\",\n          onChange: e => e.target.value === \"\" && setSearchValue(\"\"),\n          onBlur: e => setSearchValue(e.target.value),\n          onKeyPress: e => e.key === \"Enter\" && setSearchValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        id: \"profile-main\",\n        children: /*#__PURE__*/_jsxDEV(AllProjects, {\n          searchValue: searchValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfilePage, \"nJ6N9LgGPWIvZAA/nMwp+ia+2Gw=\", false, function () {\n  return [useAuth, useMessageBox, useNavigate, useLocation];\n});\n\n_c = ProfilePage;\nexport default ProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"sources":["C:/Users/pc/Desktop/live-code-editor/client/src/pages/ProfilePage.js"],"names":["useEffect","useRef","useState","NavLink","useNavigate","useLocation","AllProjects","CreateProjectWindow","Loading","useAuth","qs","useMessageBox","ProfilePage","logout","currentUser","setMessageBox","showSelf","setShowSelf","sliderMenu","axios","require","default","navigate","searchValue","setSearchValue","state","proxyProject","localStorage","getItem","path","createProjectForProxyPlayground","JSON","parse","language","code","projectName","data","username","email","options","method","headers","stringify","url","then","result","clear","_id","catch","err","response","indexOf","randomizedName","Math","floor","random","setItem","openMenu","current","classList","toggle","handleCreateProject","handleLogout","message","loading","e","target","value","key"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { NavLink, useNavigate, useLocation } from \"react-router-dom\";\r\nimport AllProjects from \"../components/AllProjects\";\r\nimport CreateProjectWindow from \"../components/CreateProjectWindow\";\r\nimport Loading from \"../components/LoadingAnimation\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport '../styles/profile-page.css';\r\nimport qs from 'qs';\r\nimport { useMessageBox } from \"../contexts/MessageBox\";\r\n\r\n\r\nconst ProfilePage = () => {\r\n    const { logout, currentUser } = useAuth();\r\n    const { setMessageBox } = useMessageBox();\r\n    const [showSelf, setShowSelf] = useState(\"first\");\r\n    const sliderMenu = useRef();\r\n    const axios = require('axios').default;\r\n    const navigate = useNavigate();\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const { state } = useLocation();\r\n\r\n    useEffect(() => {\r\n        // console.log(\"Profile page:\", state);\r\n        let proxyProject = localStorage.getItem(\"proxyProject\");\r\n        // console.log(\"Proxy project:\", proxyProject);\r\n        if (state?.path === \"/playground\" && proxyProject) {\r\n            createProjectForProxyPlayground(proxyProject);\r\n        }\r\n    }, [])\r\n\r\n    function createProjectForProxyPlayground(proxyProject) {\r\n        // Project creation request\r\n        // console.log(proxyProject);\r\n        proxyProject = JSON.parse(proxyProject);\r\n        const { language, code, projectName } = proxyProject;\r\n        const data = { username: currentUser.email, language, projectName, code };\r\n        const options = {\r\n            method: 'POST',\r\n            headers: { 'content-type': 'application/x-www-form-urlencoded' },\r\n            data: qs.stringify(data),\r\n            url: \"/add-project\"\r\n        };\r\n        axios(options).then(\r\n            result => {\r\n                // console.log(result);\r\n                localStorage.clear();\r\n                setMessageBox(\"Project succesfully created\", \"lightgreen\");\r\n                navigate(\"/playground/\" + result.data._id, {\r\n                    state: { projectName, language, code }\r\n                });\r\n            }).\r\n            catch(err => {\r\n                // console.log(err.response)\r\n                if (err.response.data.indexOf(\"Project names must be unique\") !== -1) {\r\n                    let randomizedName = { ...proxyProject, projectName: proxyProject.projectName + \"(\" + Math.floor(Math.random() * 100) + \")\" };\r\n                    randomizedName = JSON.stringify(randomizedName);\r\n                    localStorage.setItem(\"proxyProject\", randomizedName);\r\n                    createProjectForProxyPlayground(randomizedName);\r\n                    setMessageBox(\"Project names can't be same, project name randomize\", \"orange\");\r\n                } else setMessageBox(err.response.data, \"red\");\r\n            });\r\n    }\r\n\r\n    function openMenu() {\r\n        sliderMenu.current.classList.toggle(\"open-menu\");\r\n    }\r\n\r\n    function handleCreateProject() {\r\n        setShowSelf(!showSelf);\r\n    }\r\n\r\n    function handleLogout() {\r\n        logout()\r\n            .then((result) => {\r\n                setMessageBox(\"Logout successful\", \"lightgreen\");\r\n                navigate(\"/\");\r\n            })\r\n            .catch(err => {\r\n                // console.log(err);\r\n                setMessageBox(err.message, \"red\");\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div id=\"profile-wrapper\">\r\n            <CreateProjectWindow showSelf={showSelf} user={currentUser} />\r\n            <div ref={sliderMenu} id=\"profile-slider-menu\">\r\n                <div id=\"slider-menu-buttons-wrapper\">\r\n                    <NavLink to=\"\" id=\"user-name\" className=\"slider-btn\">\r\n                        {currentUser?.loading ? <Loading color=\"black\" /> : currentUser.email}</NavLink>\r\n                    <NavLink to=\"\" id=\"create-project\"\r\n                        onClick={handleCreateProject} className=\"slider-btn\">\r\n                        Create Project</NavLink>\r\n                    <NavLink to=\"/\" id=\"slider-home\" className=\"slider-btn\">\r\n                        Home</NavLink>\r\n                    <NavLink to=\"\" id=\"all-projects\" className=\"slider-btn\">\r\n                        All Projects</NavLink>\r\n                    <NavLink to=\"\" onClick={handleLogout} id=\"profile-navbar-logout-btn\">Logout</NavLink>\r\n                </div>\r\n            </div>\r\n            <section id=\"profile-page\">\r\n                <div id=\"menu-button\" onClick={openMenu}>≡</div>\r\n                <div id=\"profile-navbar\">\r\n                    <input type=\"text\" name=\"search-bar\" id=\"profile-page-search-bar\"\r\n                        placeholder=\"Search by project name, language\"\r\n                        onChange={e => e.target.value === \"\" && setSearchValue(\"\")}\r\n                        onBlur={e => setSearchValue(e.target.value)}\r\n                        onKeyPress={e => e.key === \"Enter\" && setSearchValue(e.target.value)}\r\n                    />\r\n                </div>\r\n                <main id=\"profile-main\">\r\n                    {/* {currentUser?.loading ? <Loading color=\"black\" /> :\r\n                        <p style={{ \"wordBreak\": \"break-word\" }}>\r\n                            {JSON.stringify(currentUser, null, 2)}\r\n                        </p>} */}\r\n                    <AllProjects searchValue={searchValue} />\r\n                </main>\r\n            </section>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;"]},"metadata":{},"sourceType":"module"}